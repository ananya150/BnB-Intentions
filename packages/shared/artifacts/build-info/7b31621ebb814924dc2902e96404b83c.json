{
  "id": "7b31621ebb814924dc2902e96404b83c",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.19",
  "solcLongVersion": "0.8.19+commit.7dd6d404",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Create2.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/math/Math.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
      },
      "contracts/aa/Account.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.19;\n\nimport \"./utils/UserOp.sol\";\nimport \"./utils/Secp256r1.sol\";\nimport \"./utils/Base64.sol\";\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract Account is Initializable {\n    using UserOpLib for UserOp;\n    using ECDSA for bytes32;\n\n    address addressOwner;\n    PassKeyId passKeyOwner;\n\n    bool isPassKeyOwnerEnabled;\n\n    uint256 nonce;\n\n    constructor() {\n        _disableInitializers();\n    }\n\n    // getter functions\n    function getAddressOwner() public view returns (address) {\n        return addressOwner;\n    }\n\n    function getPassKeyOwner() public view returns (PassKeyId memory) {\n        return passKeyOwner;\n    }\n\n    function passKeyOwnerEnabled() public view returns (bool) {\n        return isPassKeyOwnerEnabled;\n    }\n\n    function getNonce() public view returns (uint256) {\n        return nonce;\n    }\n\n    function changeOwnershipToAddress(bytes memory argument) private {\n        require(\n            isPassKeyOwnerEnabled == true,\n            \"Account: Already address owner enabled\"\n        );\n        // address newOwner = abi.decode(argument, (address));\n        address newOwner;\n        assembly {\n            newOwner := mload(add(argument, 20))\n        }\n        _changePassKeyOwner(PassKeyId(0, 0, \"\"));\n        _changeAddressOwner(newOwner);\n        isPassKeyOwnerEnabled = false;\n    }\n\n    function changeOwnershipToPassKeyAddress(bytes memory argument) private {\n        require(\n            isPassKeyOwnerEnabled == false,\n            \"Account: Already passkey owner enabled\"\n        );\n        (uint256 pubKeyX, uint256 pubKeyY, string memory keyId) = abi.decode(\n            argument,\n            (uint256, uint256, string)\n        );\n        PassKeyId memory newOwner = PassKeyId(pubKeyX, pubKeyY, keyId);\n        _changeAddressOwner(address(0));\n        _changePassKeyOwner(newOwner);\n        isPassKeyOwnerEnabled = true;\n    }\n\n    // internal functions to change owners\n    function _changePassKeyOwner(PassKeyId memory newOwner) private {\n        passKeyOwner = newOwner;\n    }\n\n    function _changeAddressOwner(address newOwner) private {\n        addressOwner = newOwner;\n    }\n\n    function initialize(PassKeyId memory anOwner) public virtual initializer {\n        isPassKeyOwnerEnabled = true;\n        _initialize(anOwner);\n    }\n\n    function _initialize(PassKeyId memory anOwner) internal virtual {\n        passKeyOwner = anOwner;\n    }\n\n    // Main entry point for external callers\n\n    function entrypoint(UserOp calldata userop) public {\n        // validate userop signature\n        uint256 sigVerification = _validateUserOp(userop);\n        require(sigVerification == 0, \"Account: Signature verification failed\");\n        // validate nonce\n        uint256 nonceVerification = _validateNonce(userop);\n        require(nonceVerification == 0, \"Account: Nonce verification failed\");\n        // execute\n        if (userop.functionType == 0) {\n            execute(userop.argument);\n        }\n        if (userop.functionType == 1) {\n            executeBatch(userop.argument);\n        }\n        if (userop.functionType == 2) {\n            changeOwnershipToAddress(userop.argument);\n        }\n        if (userop.functionType == 3) {\n            changeOwnershipToPassKeyAddress(userop.argument);\n        }\n        nonce = nonce + 1;\n        return;\n    }\n\n    /**\n     * execute a transaction (called directly from owner, or by entryPoint)\n     */\n    function execute(bytes memory argument) private {\n        (address dest, uint256 value, bytes memory func) = abi.decode(\n            argument,\n            (address, uint256, bytes)\n        );\n        _call(dest, value, func);\n    }\n\n    /**\n     * execute a sequence of transactions\n     * @dev to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\n     */\n    function executeBatch(bytes memory argument) private {\n        (\n            address[] memory dest,\n            uint256[] memory value,\n            bytes[] memory func\n        ) = abi.decode(argument, (address[], uint256[], bytes[]));\n        require(\n            dest.length == func.length &&\n                (value.length == 0 || value.length == func.length),\n            \"wrong array lengths\"\n        );\n        if (value.length == 0) {\n            for (uint256 i = 0; i < dest.length; i++) {\n                _call(dest[i], 0, func[i]);\n            }\n        } else {\n            for (uint256 i = 0; i < dest.length; i++) {\n                _call(dest[i], value[i], func[i]);\n            }\n        }\n    }\n\n    function _call(address target, uint256 value, bytes memory data) internal {\n        (bool success, bytes memory result) = target.call{value: value}(data);\n        if (!success) {\n            assembly {\n                revert(add(result, 32), mload(result))\n            }\n        }\n    }\n\n    // internal function to validate userop signature\n    function _validateUserOp(\n        UserOp calldata userop\n    ) internal view returns (uint256) {\n        bytes32 userOpHash = getUserOpHash(userop);\n        if (isPassKeyOwnerEnabled) {\n            bool isSigValid = validatePassKeySig(\n                userop.signature,\n                userOpHash,\n                passKeyOwner\n            );\n            if (!isSigValid) return 1;\n            return 0;\n        } else {\n            bytes32 hash = userOpHash.toEthSignedMessageHash();\n            if (addressOwner != hash.recover(userop.signature)) return 1;\n            return 0;\n        }\n    }\n\n    // internal function to validate nonce\n    function _validateNonce(\n        UserOp calldata userop\n    ) internal view returns (uint256) {\n        if (userop.nonce == nonce) return 0;\n        return 1;\n    }\n\n    function validatePassKeySig(\n        bytes memory signature,\n        bytes32 execHash,\n        PassKeyId memory passkey\n    ) internal view returns (bool) {\n        (\n            bytes32 keyHash,\n            uint256 sigx,\n            uint256 sigy,\n            bytes memory authenticatorData,\n            string memory clientDataJSONPre,\n            string memory clientDataJSONPost\n        ) = abi.decode(\n                signature,\n                (bytes32, uint256, uint256, bytes, string, string)\n            );\n\n        string memory execHashBase64 = Base64.encode(bytes.concat(execHash));\n        string memory clientDataJSON = string.concat(\n            clientDataJSONPre,\n            execHashBase64,\n            clientDataJSONPost\n        );\n        bytes32 clientHash = sha256(bytes(clientDataJSON));\n        bytes32 sigHash = sha256(bytes.concat(authenticatorData, clientHash));\n\n        require(passkey.pubKeyY != 0 && passkey.pubKeyY != 0, \"Key not found\");\n        bool isSigValid = Secp256r1.Verify(\n            passkey,\n            sigx,\n            sigy,\n            uint256(sigHash)\n        );\n        return isSigValid;\n    }\n\n    // gets the userOp hash\n    function getUserOpHash(\n        UserOp calldata userop\n    ) public view returns (bytes32) {\n        return\n            keccak256(abi.encode(userop.hash(), address(this), block.chainid));\n    }\n\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable {}\n}\n"
      },
      "contracts/aa/AccountFactory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\nimport \"./Account.sol\";\nimport \"./utils/Secp256r1.sol\";\n\ncontract AccountFactory {\n    Account public immutable accountImplementation;\n\n    constructor() {\n        accountImplementation = new Account();\n    }\n\n    /**\n     * create an account, and return its address.\n     * returns the address even if the account is already deployed.\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\n     */\n    function createAccount(\n        uint256 pubKeyX,\n        uint256 pubKeyY,\n        string memory keyId,\n        uint256 salt\n    ) public returns (Account ret) {\n        PassKeyId memory owner = PassKeyId(pubKeyX, pubKeyY, keyId);\n        address addr = getAddress(pubKeyX, pubKeyY, keyId, salt);\n        uint codeSize = addr.code.length;\n        if (codeSize > 0) {\n            return Account(payable(addr));\n        }\n        ret = Account(\n            payable(\n                new ERC1967Proxy{salt: bytes32(salt)}(\n                    address(accountImplementation),\n                    abi.encodeCall(Account.initialize, (owner))\n                )\n            )\n        );\n    }\n\n    /**\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\n     */\n    function getAddress(\n        uint256 pubKeyX,\n        uint256 pubKeyY,\n        string memory keyId,\n        uint256 salt\n    ) public view returns (address) {\n        PassKeyId memory owner = PassKeyId(pubKeyX, pubKeyY, keyId);\n\n        return\n            Create2.computeAddress(\n                bytes32(salt),\n                keccak256(\n                    abi.encodePacked(\n                        type(ERC1967Proxy).creationCode,\n                        abi.encode(\n                            address(accountImplementation),\n                            abi.encodeCall(Account.initialize, (owner))\n                        )\n                    )\n                )\n            );\n    }\n}\n"
      },
      "contracts/aa/utils/Base64.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\n// modified for base64url encoding, does not pad with '='\n\npragma solidity 0.8.19;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n *  modified for base64url https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * _Available since v4.5._\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        uint256 newlength = (data.length * 8) / 6;\n        if (data.length % 6 > 0) {\n            newlength++;\n        }\n        string memory result = new string(newlength);\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 32)\n            // let targetLength := add(resultPtr, newlength)\n\n            // Run over the input, 3 bytes at a time\n            for {\n                let dataPtr := data\n                let endPtr := add(data, mload(data))\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 bytes (18 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F which is the number of\n                // the previous character in the ASCII table prior to the Base64 Table\n                // The result is then added to the table to get the character to write,\n                // and finally write it in the result pointer but with a left shift\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\n\n                mstore8(\n                    resultPtr,\n                    mload(add(tablePtr, and(shr(18, input), 0x3F)))\n                )\n                resultPtr := add(resultPtr, 1) // Advance\n\n                // if lt(resultPtr, targetLength) {\n                mstore8(\n                    resultPtr,\n                    mload(add(tablePtr, and(shr(12, input), 0x3F)))\n                )\n                resultPtr := add(resultPtr, 1) // Advance\n\n                // if lt(resultPtr, targetLength) {\n                mstore8(\n                    resultPtr,\n                    mload(add(tablePtr, and(shr(6, input), 0x3F)))\n                )\n                resultPtr := add(resultPtr, 1) // Advance\n\n                // if lt(resultPtr, targetLength) {\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n                // }\n                // }\n                // }\n            }\n        }\n\n        return result;\n    }\n}\n"
      },
      "contracts/aa/utils/Secp256r1.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.19;\n//\n// Heavily inspired from\n// https://github.com/maxrobot/elliptic-solidity/blob/master/contracts/Secp256r1.sol\n// https://github.com/tdrerup/elliptic-curve-solidity/blob/master/contracts/curves/EllipticCurve.sol\n// modified to use precompile 0x05 modexp\n// and modified jacobian double\n// optimisations to avoid to an from from affine and jacobian coordinates\n//\nstruct PassKeyId {\n    uint256 pubKeyX;\n    uint256 pubKeyY;\n    string keyId;\n}\n\nstruct JPoint {\n    uint256 x;\n    uint256 y;\n    uint256 z;\n}\n\nlibrary Secp256r1 {\n    uint256 constant gx =\n        0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296;\n    uint256 constant gy =\n        0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5;\n    uint256 public constant pp =\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF;\n\n    uint256 public constant nn =\n        0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551;\n    uint256 constant a =\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC;\n    uint256 constant b =\n        0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B;\n    uint256 constant MOST_SIGNIFICANT =\n        0xc000000000000000000000000000000000000000000000000000000000000000;\n\n    /*\n     * Verify\n     * @description - verifies that a public key has signed a given message\n     * @param X - public key coordinate X\n     * @param Y - public key coordinate Y\n     * @param R - signature half R\n     * @param S - signature half S\n     * @param input - hashed message\n     */\n    function Verify(\n        PassKeyId memory passKey,\n        uint r,\n        uint s,\n        uint e\n    ) internal view returns (bool) {\n        if (r == 0 || s == 0 || r >= nn || s >= nn) {\n            /* testing null signature, otherwise (0,0) is valid for any message*/\n            return false;\n        }\n\n        JPoint[16] memory points = _preComputeJacobianPoints(passKey);\n        return VerifyWithPrecompute(points, r, s, e);\n    }\n\n    function VerifyWithPrecompute(\n        JPoint[16] memory points,\n        uint r,\n        uint s,\n        uint e\n    ) internal view returns (bool) {\n        if (r >= nn || s >= nn) {\n            return false;\n        }\n\n        uint w = _primemod(s, nn);\n\n        uint u1 = mulmod(e, w, nn);\n        uint u2 = mulmod(r, w, nn);\n\n        uint x;\n        uint y;\n\n        (x, y) = ShamirMultJacobian(points, u1, u2);\n        return (x == r);\n    }\n\n    /*\n     * Strauss Shamir trick for EC multiplication\n     * https://stackoverflow.com/questions/50993471/ec-scalar-multiplication-with-strauss-shamir-method\n     * we optimise on this a bit to do with 2 bits at a time rather than a single bit\n     * the individual points for a single pass are precomputed\n     * overall this reduces the number of additions while keeping the same number of doublings\n     */\n    function ShamirMultJacobian(\n        JPoint[16] memory points,\n        uint u1,\n        uint u2\n    ) internal view returns (uint, uint) {\n        uint x = 0;\n        uint y = 0;\n        uint z = 0;\n        uint bits = 128;\n        uint index = 0;\n\n        while (bits > 0) {\n            if (z > 0) {\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\n            }\n            index =\n                ((u1 & MOST_SIGNIFICANT) >> 252) |\n                ((u2 & MOST_SIGNIFICANT) >> 254);\n            if (index > 0) {\n                (x, y, z) = _jAdd(\n                    x,\n                    y,\n                    z,\n                    points[index].x,\n                    points[index].y,\n                    points[index].z\n                );\n            }\n            u1 <<= 2;\n            u2 <<= 2;\n            bits--;\n        }\n        (x, y) = _affineFromJacobian(x, y, z);\n        return (x, y);\n    }\n\n    function _preComputeJacobianPoints(\n        PassKeyId memory passKey\n    ) internal pure returns (JPoint[16] memory points) {\n        // JPoint[] memory u1Points = new JPoint[](4);\n        // u1Points[0] = JPoint(0, 0, 0);\n        // u1Points[1] = JPoint(gx, gy, 1); // u1\n        // u1Points[2] = _jPointDouble(u1Points[1]);\n        // u1Points[3] = _jPointAdd(u1Points[1], u1Points[2]);\n        // avoiding this intermediate step by using it in a single array below\n        // these are pre computed points for u1\n\n        // JPoint[16] memory points;\n        points[0] = JPoint(0, 0, 0);\n        points[1] = JPoint(passKey.pubKeyX, passKey.pubKeyY, 1); // u2\n        points[2] = _jPointDouble(points[1]);\n        points[3] = _jPointAdd(points[1], points[2]);\n\n        points[4] = JPoint(gx, gy, 1); // u1Points[1]\n        points[5] = _jPointAdd(points[4], points[1]);\n        points[6] = _jPointAdd(points[4], points[2]);\n        points[7] = _jPointAdd(points[4], points[3]);\n\n        points[8] = _jPointDouble(points[4]); // u1Points[2]\n        points[9] = _jPointAdd(points[8], points[1]);\n        points[10] = _jPointAdd(points[8], points[2]);\n        points[11] = _jPointAdd(points[8], points[3]);\n\n        points[12] = _jPointAdd(points[4], points[8]); // u1Points[3]\n        points[13] = _jPointAdd(points[12], points[1]);\n        points[14] = _jPointAdd(points[12], points[2]);\n        points[15] = _jPointAdd(points[12], points[3]);\n    }\n\n    function _jPointAdd(\n        JPoint memory p1,\n        JPoint memory p2\n    ) internal pure returns (JPoint memory) {\n        uint x;\n        uint y;\n        uint z;\n        (x, y, z) = _jAdd(p1.x, p1.y, p1.z, p2.x, p2.y, p2.z);\n        return JPoint(x, y, z);\n    }\n\n    function _jPointDouble(\n        JPoint memory p\n    ) internal pure returns (JPoint memory) {\n        uint x;\n        uint y;\n        uint z;\n        (x, y, z) = _modifiedJacobianDouble(p.x, p.y, p.z);\n        return JPoint(x, y, z);\n    }\n\n    /* _affineFromJacobian\n     * @desription returns affine coordinates from a jacobian input follows\n     * golang elliptic/crypto library\n     */\n    function _affineFromJacobian(\n        uint x,\n        uint y,\n        uint z\n    ) internal view returns (uint ax, uint ay) {\n        if (z == 0) {\n            return (0, 0);\n        }\n\n        uint zinv = _primemod(z, pp);\n        uint zinvsq = mulmod(zinv, zinv, pp);\n\n        ax = mulmod(x, zinvsq, pp);\n        ay = mulmod(y, mulmod(zinvsq, zinv, pp), pp);\n    }\n\n    /*\n     * _jAdd\n     * @description performs double Jacobian as defined below:\n     * https://hyperelliptic.org/EFD/g1p/auto-code/shortw/jacobian-3/doubling/mdbl-2007-bl.op3\n     */\n    function _jAdd(\n        uint p1,\n        uint p2,\n        uint p3,\n        uint q1,\n        uint q2,\n        uint q3\n    ) internal pure returns (uint r1, uint r2, uint r3) {\n        if (p3 == 0) {\n            r1 = q1;\n            r2 = q2;\n            r3 = q3;\n\n            return (r1, r2, r3);\n        } else if (q3 == 0) {\n            r1 = p1;\n            r2 = p2;\n            r3 = p3;\n\n            return (r1, r2, r3);\n        }\n\n        assembly {\n            let\n                pd\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\n            let z1z1 := mulmod(p3, p3, pd) // Z1Z1 = Z1^2\n            let z2z2 := mulmod(q3, q3, pd) // Z2Z2 = Z2^2\n\n            let u1 := mulmod(p1, z2z2, pd) // U1 = X1*Z2Z2\n            let u2 := mulmod(q1, z1z1, pd) // U2 = X2*Z1Z1\n\n            let s1 := mulmod(p2, mulmod(z2z2, q3, pd), pd) // S1 = Y1*Z2*Z2Z2\n            let s2 := mulmod(q2, mulmod(z1z1, p3, pd), pd) // S2 = Y2*Z1*Z1Z1\n\n            let p3q3 := addmod(p3, q3, pd)\n\n            if lt(u2, u1) {\n                u2 := add(pd, u2) // u2 = u2+pd\n            }\n            let h := sub(u2, u1) // H = U2-U1\n\n            let i := mulmod(0x02, h, pd)\n            i := mulmod(i, i, pd) // I = (2*H)^2\n\n            let j := mulmod(h, i, pd) // J = H*I\n            if lt(s2, s1) {\n                s2 := add(pd, s2) // u2 = u2+pd\n            }\n            let rr := mulmod(0x02, sub(s2, s1), pd) // r = 2*(S2-S1)\n            r1 := mulmod(rr, rr, pd) // X3 = R^2\n\n            let v := mulmod(u1, i, pd) // V = U1*I\n            let j2v := addmod(j, mulmod(0x02, v, pd), pd)\n            if lt(r1, j2v) {\n                r1 := add(pd, r1) // X3 = X3+pd\n            }\n            r1 := sub(r1, j2v)\n\n            // Y3 = r*(V-X3)-2*S1*J\n            let s12j := mulmod(mulmod(0x02, s1, pd), j, pd)\n\n            if lt(v, r1) {\n                v := add(pd, v)\n            }\n            r2 := mulmod(rr, sub(v, r1), pd)\n\n            if lt(r2, s12j) {\n                r2 := add(pd, r2)\n            }\n            r2 := sub(r2, s12j)\n\n            // Z3 = ((Z1+Z2)^2-Z1Z1-Z2Z2)*H\n            z1z1 := addmod(z1z1, z2z2, pd)\n            j2v := mulmod(p3q3, p3q3, pd)\n            if lt(j2v, z1z1) {\n                j2v := add(pd, j2v)\n            }\n            r3 := mulmod(sub(j2v, z1z1), h, pd)\n        }\n        return (r1, r2, r3);\n    }\n\n    // Point doubling on the modified jacobian coordinates\n    // http://point-at-infinity.org/ecc/Prime_Curve_Modified_Jacobian_Coordinates.html\n    function _modifiedJacobianDouble(\n        uint x,\n        uint y,\n        uint z\n    ) internal pure returns (uint x3, uint y3, uint z3) {\n        assembly {\n            let\n                pd\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\n            let z2 := mulmod(z, z, pd)\n            let az4 := mulmod(\n                0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC,\n                mulmod(z2, z2, pd),\n                pd\n            )\n            let y2 := mulmod(y, y, pd)\n            let s := mulmod(0x04, mulmod(x, y2, pd), pd)\n            let u := mulmod(0x08, mulmod(y2, y2, pd), pd)\n            let m := addmod(mulmod(0x03, mulmod(x, x, pd), pd), az4, pd)\n            let twos := mulmod(0x02, s, pd)\n            let m2 := mulmod(m, m, pd)\n            if lt(m2, twos) {\n                m2 := add(pd, m2)\n            }\n            x3 := sub(m2, twos)\n            if lt(s, x3) {\n                s := add(pd, s)\n            }\n            y3 := mulmod(m, sub(s, x3), pd)\n            if lt(y3, u) {\n                y3 := add(pd, y3)\n            }\n            y3 := sub(y3, u)\n            z3 := mulmod(0x02, mulmod(y, z, pd), pd)\n        }\n    }\n\n    // Fermats little theorem https://en.wikipedia.org/wiki/Fermat%27s_little_theorem\n    // a^(p-1) = 1 mod p\n    // a^(-1) ≅ a^(p-2) (mod p)\n    // we then use the precompile bigModExp to compute a^(-1)\n    function _primemod(uint value, uint p) internal view returns (uint ret) {\n        ret = modexp(value, p - 2, p);\n        return ret;\n    }\n\n    // Wrapper for built-in BigNumber_modexp (contract 0x5) as described here. https://github.com/ethereum/EIPs/pull/198\n    function modexp(\n        uint _base,\n        uint _exp,\n        uint _mod\n    ) internal view returns (uint ret) {\n        // bigModExp(_base, _exp, _mod);\n        assembly {\n            if gt(_base, _mod) {\n                _base := mod(_base, _mod)\n            }\n            // Free memory pointer is always stored at 0x40\n            let freemem := mload(0x40)\n\n            mstore(freemem, 0x20)\n            mstore(add(freemem, 0x20), 0x20)\n            mstore(add(freemem, 0x40), 0x20)\n\n            mstore(add(freemem, 0x60), _base)\n            mstore(add(freemem, 0x80), _exp)\n            mstore(add(freemem, 0xa0), _mod)\n\n            let success := staticcall(not(0), 0x5, freemem, 0xc0, freemem, 0x20)\n            switch success\n            case 0 {\n                revert(0x0, 0x0)\n            }\n            default {\n                ret := mload(freemem)\n            }\n        }\n    }\n}\n"
      },
      "contracts/aa/utils/UserOp.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.19;\n// call type\n// 00 -> single\n// 01 -> batch\n\nstruct UserOp {\n    uint256 functionType;\n    bytes argument;\n    uint256 nonce;\n    bytes signature;\n}\n\nlibrary UserOpLib {\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userop - The user operation data.\n     */\n    function pack(\n        UserOp calldata userop\n    ) internal pure returns (bytes memory ret) {\n        uint256 functionType = userop.functionType;\n        bytes32 hashArguments = calldataKeccak(userop.argument);\n        uint256 nonce = userop.nonce;\n\n        return abi.encode(functionType, hashArguments, nonce);\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userop - The user operation data.\n     */\n    function hash(UserOp calldata userop) internal pure returns (bytes32) {\n        return keccak256(pack(userop));\n    }\n\n    /**\n     * keccak function over calldata.\n     * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n     */\n    function calldataKeccak(\n        bytes calldata data\n    ) public pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": { "enabled": true, "runs": 1000000 },
      "metadata": { "bytecodeHash": "none", "useLiteralContent": true },
      "viaIR": true,
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": ["ast"]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "2072",
        "formattedMessage": "Warning: Unused local variable.\n   --> contracts/aa/Account.sol:197:13:\n    |\n197 |             bytes32 keyHash,\n    |             ^^^^^^^^^^^^^^^\n\n",
        "message": "Unused local variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 6015,
          "file": "contracts/aa/Account.sol",
          "start": 6000
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
          "exportedSymbols": { "IERC1967": [20] },
          "id": 21,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "107:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1967",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "132:133:0",
                "text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
              },
              "fullyImplemented": true,
              "id": 20,
              "linearizedBaseContracts": [20],
              "name": "IERC1967",
              "nameLocation": "276:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "291:68:0",
                    "text": " @dev Emitted when the implementation is upgraded."
                  },
                  "eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                  "id": 7,
                  "name": "Upgraded",
                  "nameLocation": "370:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "395:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 7,
                        "src": "379:30:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "379:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "378:32:0"
                  },
                  "src": "364:47:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 8,
                    "nodeType": "StructuredDocumentation",
                    "src": "417:67:0",
                    "text": " @dev Emitted when the admin account has changed."
                  },
                  "eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
                  "id": 14,
                  "name": "AdminChanged",
                  "nameLocation": "495:12:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 10,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousAdmin",
                        "nameLocation": "516:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "508:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "508:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 12,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "539:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "531:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "531:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "507:41:0"
                  },
                  "src": "489:60:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 15,
                    "nodeType": "StructuredDocumentation",
                    "src": "555:59:0",
                    "text": " @dev Emitted when the beacon is changed."
                  },
                  "eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
                  "id": 19,
                  "name": "BeaconUpgraded",
                  "nameLocation": "625:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 17,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "beacon",
                        "nameLocation": "656:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 19,
                        "src": "640:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 16,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "639:24:0"
                  },
                  "src": "619:45:0"
                }
              ],
              "scope": 21,
              "src": "266:400:0",
              "usedErrors": []
            }
          ],
          "src": "107:560:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
          "exportedSymbols": { "IERC1822Proxiable": [30] },
          "id": 31,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 22,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "113:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1822Proxiable",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 23,
                "nodeType": "StructuredDocumentation",
                "src": "138:203:1",
                "text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
              },
              "fullyImplemented": false,
              "id": 30,
              "linearizedBaseContracts": [30],
              "name": "IERC1822Proxiable",
              "nameLocation": "352:17:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "376:438:1",
                    "text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
                  },
                  "functionSelector": "52d1902d",
                  "id": 29,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxiableUUID",
                  "nameLocation": "828:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "841:2:1"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "867:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "866:9:1"
                  },
                  "scope": 30,
                  "src": "819:57:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 31,
              "src": "342:536:1",
              "usedErrors": []
            }
          ],
          "src": "113:766:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
          "exportedSymbols": {
            "Address": [932],
            "ERC1967Proxy": [67],
            "ERC1967Upgrade": [371],
            "IBeacon": [433],
            "IERC1822Proxiable": [30],
            "IERC1967": [20],
            "Proxy": [423],
            "StorageSlot": [1123]
          },
          "id": 68,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 32,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "114:23:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
              "file": "../Proxy.sol",
              "id": 33,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 68,
              "sourceUnit": 424,
              "src": "139:22:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
              "file": "./ERC1967Upgrade.sol",
              "id": 34,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 68,
              "sourceUnit": 372,
              "src": "162:30:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 36,
                    "name": "Proxy",
                    "nameLocations": ["592:5:2"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 423,
                    "src": "592:5:2"
                  },
                  "id": 37,
                  "nodeType": "InheritanceSpecifier",
                  "src": "592:5:2"
                },
                {
                  "baseName": {
                    "id": 38,
                    "name": "ERC1967Upgrade",
                    "nameLocations": ["599:14:2"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 371,
                    "src": "599:14:2"
                  },
                  "id": 39,
                  "nodeType": "InheritanceSpecifier",
                  "src": "599:14:2"
                }
              ],
              "canonicalName": "ERC1967Proxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 35,
                "nodeType": "StructuredDocumentation",
                "src": "194:372:2",
                "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
              },
              "fullyImplemented": true,
              "id": 67,
              "linearizedBaseContracts": [67, 371, 20, 423],
              "name": "ERC1967Proxy",
              "nameLocation": "576:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "1014:56:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 48,
                              "name": "_logic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1042:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1050:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1057:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 47,
                            "name": "_upgradeToAndCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "1024:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (address,bytes memory,bool)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1024:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1024:39:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 40,
                    "nodeType": "StructuredDocumentation",
                    "src": "620:333:2",
                    "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."
                  },
                  "id": 54,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "_logic",
                        "nameLocation": "978:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "970:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "999:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "986:18:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "986:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:36:2"
                  },
                  "returnParameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1014:0:2"
                  },
                  "scope": 67,
                  "src": "958:112:2",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [388],
                  "body": {
                    "id": 65,
                    "nodeType": "Block",
                    "src": "1229:59:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 61,
                              "name": "ERC1967Upgrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "1246:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$371_$",
                                "typeString": "type(contract ERC1967Upgrade)"
                              }
                            },
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1261:18:2",
                            "memberName": "_getImplementation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 97,
                            "src": "1246:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1246:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 60,
                        "id": 64,
                        "nodeType": "Return",
                        "src": "1239:42:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1076:67:2",
                    "text": " @dev Returns the current implementation address."
                  },
                  "id": 66,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nameLocation": "1157:15:2",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 57,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1197:8:2"
                  },
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1172:2:2"
                  },
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "impl",
                        "nameLocation": "1223:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1215:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1215:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1214:14:2"
                  },
                  "scope": 67,
                  "src": "1148:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 68,
              "src": "567:723:2",
              "usedErrors": []
            }
          ],
          "src": "114:1177:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
          "exportedSymbols": {
            "Address": [932],
            "ERC1967Upgrade": [371],
            "IBeacon": [433],
            "IERC1822Proxiable": [30],
            "IERC1967": [20],
            "StorageSlot": [1123]
          },
          "id": 372,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 69,
              "literals": ["solidity", "^", "0.8", ".2"],
              "nodeType": "PragmaDirective",
              "src": "116:23:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
              "file": "../beacon/IBeacon.sol",
              "id": 70,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 372,
              "sourceUnit": 434,
              "src": "141:31:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
              "file": "../../interfaces/IERC1967.sol",
              "id": 71,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 372,
              "sourceUnit": 21,
              "src": "173:39:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
              "file": "../../interfaces/draft-IERC1822.sol",
              "id": 72,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 372,
              "sourceUnit": 31,
              "src": "213:45:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../utils/Address.sol",
              "id": 73,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 372,
              "sourceUnit": 933,
              "src": "259:33:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
              "file": "../../utils/StorageSlot.sol",
              "id": 74,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 372,
              "sourceUnit": 1124,
              "src": "293:37:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 76,
                    "name": "IERC1967",
                    "nameLocations": ["553:8:3"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 20,
                    "src": "553:8:3"
                  },
                  "id": 77,
                  "nodeType": "InheritanceSpecifier",
                  "src": "553:8:3"
                }
              ],
              "canonicalName": "ERC1967Upgrade",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 75,
                "nodeType": "StructuredDocumentation",
                "src": "332:184:3",
                "text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
              },
              "fullyImplemented": true,
              "id": 371,
              "linearizedBaseContracts": [371, 20],
              "name": "ERC1967Upgrade",
              "nameLocation": "535:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 80,
                  "mutability": "constant",
                  "name": "_ROLLBACK_SLOT",
                  "nameLocation": "672:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "647:108:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "689:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
                      "typeString": "int_const 3304...(69 digits omitted)...9347"
                    },
                    "value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "762:214:3",
                    "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
                  },
                  "id": 84,
                  "mutability": "constant",
                  "name": "_IMPLEMENTATION_SLOT",
                  "nameLocation": "1007:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "981:115:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1030:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                      "typeString": "int_const 2444...(69 digits omitted)...5612"
                    },
                    "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 96,
                    "nodeType": "Block",
                    "src": "1237:78:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 92,
                                "name": "_IMPLEMENTATION_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84,
                                "src": "1281:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 90,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "1254:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1123_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1266:14:3",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1045,
                              "src": "1254:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1019_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 93,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1254:48:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1303:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1018,
                          "src": "1254:54:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 89,
                        "id": 95,
                        "nodeType": "Return",
                        "src": "1247:61:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1103:67:3",
                    "text": " @dev Returns the current implementation address."
                  },
                  "id": 97,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getImplementation",
                  "nameLocation": "1184:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1202:2:3"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 88,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 97,
                        "src": "1228:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 87,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1228:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1227:9:3"
                  },
                  "scope": 371,
                  "src": "1175:140:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1469:196:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 106,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100,
                                  "src": "1506:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 104,
                                  "name": "Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 932,
                                  "src": "1487:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Address_$932_$",
                                    "typeString": "type(library Address)"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1495:10:3",
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 620,
                                "src": "1487:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1487:37:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1526:47:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
                                "typeString": "literal_string \"ERC1967: new implementation is not a contract\""
                              },
                              "value": "ERC1967: new implementation is not a contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
                                "typeString": "literal_string \"ERC1967: new implementation is not a contract\""
                              }
                            ],
                            "id": 103,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1479:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1479:95:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 110,
                        "nodeType": "ExpressionStatement",
                        "src": "1479:95:3"
                      },
                      {
                        "expression": {
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 114,
                                  "name": "_IMPLEMENTATION_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84,
                                  "src": "1611:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 111,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1123,
                                  "src": "1584:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1123_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1596:14:3",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1045,
                                "src": "1584:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1019_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1584:48:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1633:5:3",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1018,
                            "src": "1584:54:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 117,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1641:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1584:74:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1584:74:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 98,
                    "nodeType": "StructuredDocumentation",
                    "src": "1321:80:3",
                    "text": " @dev Stores a new address in the EIP1967 implementation slot."
                  },
                  "id": 121,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setImplementation",
                  "nameLocation": "1415:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 100,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "1442:17:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "1434:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1434:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1433:27:3"
                  },
                  "returnParameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1469:0:3"
                  },
                  "scope": 371,
                  "src": "1406:259:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "1827:96:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 128,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "1856:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 127,
                            "name": "_setImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1837:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1837:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:37:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 132,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "1898:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 131,
                            "name": "Upgraded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1889:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1889:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 134,
                        "nodeType": "EmitStatement",
                        "src": "1884:32:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 122,
                    "nodeType": "StructuredDocumentation",
                    "src": "1671:95:3",
                    "text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
                  },
                  "id": 136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_upgradeTo",
                  "nameLocation": "1780:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "1799:17:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "1791:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1791:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1790:27:3"
                  },
                  "returnParameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1827:0:3"
                  },
                  "scope": 371,
                  "src": "1771:152:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "2155:167:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 147,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2176:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 146,
                            "name": "_upgradeTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "2165:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:29:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 150,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "2208:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2213:6:3",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "2208:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2222:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2208:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 154,
                            "name": "forceCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "2227:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2208:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "IfStatement",
                        "src": "2204:112:3",
                        "trueBody": {
                          "id": 163,
                          "nodeType": "Block",
                          "src": "2238:78:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 159,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 139,
                                    "src": "2281:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 160,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 141,
                                    "src": "2300:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 156,
                                    "name": "Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 932,
                                    "src": "2252:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Address_$932_$",
                                      "typeString": "type(library Address)"
                                    }
                                  },
                                  "id": 158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2260:20:3",
                                  "memberName": "functionDelegateCall",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 819,
                                  "src": "2252:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (address,bytes memory) returns (bytes memory)"
                                  }
                                },
                                "id": 161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2252:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 162,
                              "nodeType": "ExpressionStatement",
                              "src": "2252:53:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 137,
                    "nodeType": "StructuredDocumentation",
                    "src": "1929:123:3",
                    "text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
                  },
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_upgradeToAndCall",
                  "nameLocation": "2066:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "2092:17:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "2084:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2084:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2124:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "2111:17:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2111:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 143,
                        "mutability": "mutable",
                        "name": "forceCall",
                        "nameLocation": "2135:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "2130:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2130:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2083:62:3"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2155:0:3"
                  },
                  "scope": 371,
                  "src": "2057:265:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "2596:820:3",
                    "statements": [
                      {
                        "condition": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 178,
                                "name": "_ROLLBACK_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "2937:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 176,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "2910:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1123_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2922:14:3",
                              "memberName": "getBooleanSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1056,
                              "src": "2910:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1022_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2910:42:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BooleanSlot_$1022_storage_ptr",
                              "typeString": "struct StorageSlot.BooleanSlot storage pointer"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2953:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1021,
                          "src": "2910:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 216,
                          "nodeType": "Block",
                          "src": "3028:382:3",
                          "statements": [
                            {
                              "clauses": [
                                {
                                  "block": {
                                    "id": 201,
                                    "nodeType": "Block",
                                    "src": "3122:115:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              },
                                              "id": 197,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 195,
                                                "name": "slot",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 192,
                                                "src": "3148:4:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "id": 196,
                                                "name": "_IMPLEMENTATION_SLOT",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 84,
                                                "src": "3156:20:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              "src": "3148:28:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            {
                                              "hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
                                              "id": 198,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3178:43:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
                                                "typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
                                              },
                                              "value": "ERC1967Upgrade: unsupported proxiableUUID"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
                                                "typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
                                              }
                                            ],
                                            "id": 194,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -18, -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "3140:7:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (bool,string memory) pure"
                                            }
                                          },
                                          "id": 199,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3140:82:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 200,
                                        "nodeType": "ExpressionStatement",
                                        "src": "3140:82:3"
                                      }
                                    ]
                                  },
                                  "errorName": "",
                                  "id": 202,
                                  "nodeType": "TryCatchClause",
                                  "parameters": {
                                    "id": 193,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                      {
                                        "constant": false,
                                        "id": 192,
                                        "mutability": "mutable",
                                        "name": "slot",
                                        "nameLocation": "3116:4:3",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 202,
                                        "src": "3108:12:3",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        "typeName": {
                                          "id": 191,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3108:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "src": "3107:14:3"
                                  },
                                  "src": "3099:138:3"
                                },
                                {
                                  "block": {
                                    "id": 207,
                                    "nodeType": "Block",
                                    "src": "3244:89:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
                                              "id": 204,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3269:48:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
                                                "typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
                                              },
                                              "value": "ERC1967Upgrade: new implementation is not UUPS"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
                                                "typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
                                              }
                                            ],
                                            "id": 203,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19, -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "3262:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 205,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3262:56:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 206,
                                        "nodeType": "ExpressionStatement",
                                        "src": "3262:56:3"
                                      }
                                    ]
                                  },
                                  "errorName": "",
                                  "id": 208,
                                  "nodeType": "TryCatchClause",
                                  "src": "3238:95:3"
                                }
                              ],
                              "externalCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 187,
                                        "name": "newImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 169,
                                        "src": "3064:17:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 186,
                                      "name": "IERC1822Proxiable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30,
                                      "src": "3046:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$30_$",
                                        "typeString": "type(contract IERC1822Proxiable)"
                                      }
                                    },
                                    "id": 188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3046:36:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1822Proxiable_$30",
                                      "typeString": "contract IERC1822Proxiable"
                                    }
                                  },
                                  "id": 189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3083:13:3",
                                  "memberName": "proxiableUUID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29,
                                  "src": "3046:50:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                    "typeString": "function () view external returns (bytes32)"
                                  }
                                },
                                "id": 190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3046:52:3",
                                "tryCall": true,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 209,
                              "nodeType": "TryStatement",
                              "src": "3042:291:3"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 211,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 169,
                                    "src": "3364:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 212,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 171,
                                    "src": "3383:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 213,
                                    "name": "forceCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 173,
                                    "src": "3389:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 210,
                                  "name": "_upgradeToAndCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 166,
                                  "src": "3346:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bytes memory,bool)"
                                  }
                                },
                                "id": 214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3346:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 215,
                              "nodeType": "ExpressionStatement",
                              "src": "3346:53:3"
                            }
                          ]
                        },
                        "id": 217,
                        "nodeType": "IfStatement",
                        "src": "2906:504:3",
                        "trueBody": {
                          "id": 185,
                          "nodeType": "Block",
                          "src": "2960:62:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 182,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 169,
                                    "src": "2993:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 181,
                                  "name": "_setImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "2974:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2974:37:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 184,
                              "nodeType": "ExpressionStatement",
                              "src": "2974:37:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "2328:161:3",
                    "text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
                  },
                  "id": 219,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_upgradeToAndCallUUPS",
                  "nameLocation": "2503:21:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "2533:17:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "2525:25:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2525:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2565:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "2552:17:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2552:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "forceCall",
                        "nameLocation": "2576:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "2571:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2571:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2524:62:3"
                  },
                  "returnParameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2596:0:3"
                  },
                  "scope": 371,
                  "src": "2494:922:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3422:189:3",
                    "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
                  },
                  "id": 223,
                  "mutability": "constant",
                  "name": "_ADMIN_SLOT",
                  "nameLocation": "3642:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "3616:106:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3656:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                      "typeString": "int_const 8195...(69 digits omitted)...7091"
                    },
                    "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 235,
                    "nodeType": "Block",
                    "src": "3837:69:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 231,
                                "name": "_ADMIN_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "3881:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 229,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "3854:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1123_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3866:14:3",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1045,
                              "src": "3854:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1019_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3854:39:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3894:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1018,
                          "src": "3854:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 228,
                        "id": 234,
                        "nodeType": "Return",
                        "src": "3847:52:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 224,
                    "nodeType": "StructuredDocumentation",
                    "src": "3729:50:3",
                    "text": " @dev Returns the current admin."
                  },
                  "id": 236,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getAdmin",
                  "nameLocation": "3793:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3802:2:3"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "3828:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3828:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3827:9:3"
                  },
                  "scope": 371,
                  "src": "3784:122:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 261,
                    "nodeType": "Block",
                    "src": "4033:156:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 243,
                                "name": "newAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 239,
                                "src": "4051:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4071:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4063:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 244,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4063:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4063:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4051:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4075:40:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
                                "typeString": "literal_string \"ERC1967: new admin is the zero address\""
                              },
                              "value": "ERC1967: new admin is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
                                "typeString": "literal_string \"ERC1967: new admin is the zero address\""
                              }
                            ],
                            "id": 242,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4043:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4043:73:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 251,
                        "nodeType": "ExpressionStatement",
                        "src": "4043:73:3"
                      },
                      {
                        "expression": {
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 255,
                                  "name": "_ADMIN_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 223,
                                  "src": "4153:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 252,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1123,
                                  "src": "4126:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1123_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4138:14:3",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1045,
                                "src": "4126:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1019_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4126:39:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4166:5:3",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1018,
                            "src": "4126:45:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 258,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "4174:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4126:56:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 260,
                        "nodeType": "ExpressionStatement",
                        "src": "4126:56:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 237,
                    "nodeType": "StructuredDocumentation",
                    "src": "3912:71:3",
                    "text": " @dev Stores a new address in the EIP1967 admin slot."
                  },
                  "id": 262,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setAdmin",
                  "nameLocation": "3997:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 239,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "4015:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 262,
                        "src": "4007:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4007:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4006:18:3"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4033:0:3"
                  },
                  "scope": 371,
                  "src": "3988:201:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 278,
                    "nodeType": "Block",
                    "src": "4349:86:3",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 269,
                                "name": "_getAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "4377:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4377:11:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 271,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "4390:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 268,
                            "name": "AdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "4364:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4364:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 273,
                        "nodeType": "EmitStatement",
                        "src": "4359:40:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 275,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "4419:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 274,
                            "name": "_setAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "4409:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4409:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 277,
                        "nodeType": "ExpressionStatement",
                        "src": "4409:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 263,
                    "nodeType": "StructuredDocumentation",
                    "src": "4195:100:3",
                    "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
                  },
                  "id": 279,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_changeAdmin",
                  "nameLocation": "4309:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "4330:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "4322:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4322:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4321:18:3"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4349:0:3"
                  },
                  "scope": 371,
                  "src": "4300:135:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 280,
                    "nodeType": "StructuredDocumentation",
                    "src": "4441:232:3",
                    "text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
                  },
                  "id": 283,
                  "mutability": "constant",
                  "name": "_BEACON_SLOT",
                  "nameLocation": "4704:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "4678:107:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4678:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4719:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
                      "typeString": "int_const 7415...(69 digits omitted)...4704"
                    },
                    "value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "4902:70:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 291,
                                "name": "_BEACON_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 283,
                                "src": "4946:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 289,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1123,
                                "src": "4919:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1123_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4931:14:3",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1045,
                              "src": "4919:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1019_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4919:40:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4960:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1018,
                          "src": "4919:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 288,
                        "id": 294,
                        "nodeType": "Return",
                        "src": "4912:53:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 284,
                    "nodeType": "StructuredDocumentation",
                    "src": "4792:51:3",
                    "text": " @dev Returns the current beacon."
                  },
                  "id": 296,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getBeacon",
                  "nameLocation": "4857:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4867:2:3"
                  },
                  "returnParameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 296,
                        "src": "4893:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4892:9:3"
                  },
                  "scope": 371,
                  "src": "4848:124:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 331,
                    "nodeType": "Block",
                    "src": "5101:324:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 305,
                                  "name": "newBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "5138:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 303,
                                  "name": "Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 932,
                                  "src": "5119:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Address_$932_$",
                                    "typeString": "type(library Address)"
                                  }
                                },
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5127:10:3",
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 620,
                                "src": "5119:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5119:29:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5150:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
                                "typeString": "literal_string \"ERC1967: new beacon is not a contract\""
                              },
                              "value": "ERC1967: new beacon is not a contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
                                "typeString": "literal_string \"ERC1967: new beacon is not a contract\""
                              }
                            ],
                            "id": 302,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5111:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5111:79:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 309,
                        "nodeType": "ExpressionStatement",
                        "src": "5111:79:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 314,
                                          "name": "newBeacon",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 299,
                                          "src": "5248:9:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 313,
                                        "name": "IBeacon",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 433,
                                        "src": "5240:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IBeacon_$433_$",
                                          "typeString": "type(contract IBeacon)"
                                        }
                                      },
                                      "id": 315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5240:18:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBeacon_$433",
                                        "typeString": "contract IBeacon"
                                      }
                                    },
                                    "id": 316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5259:14:3",
                                    "memberName": "implementation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 432,
                                    "src": "5240:33:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5240:35:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 311,
                                  "name": "Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 932,
                                  "src": "5221:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Address_$932_$",
                                    "typeString": "type(library Address)"
                                  }
                                },
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5229:10:3",
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 620,
                                "src": "5221:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5221:55:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5290:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
                                "typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
                              },
                              "value": "ERC1967: beacon implementation is not a contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
                                "typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
                              }
                            ],
                            "id": 310,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5200:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5200:150:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "ExpressionStatement",
                        "src": "5200:150:3"
                      },
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 325,
                                  "name": "_BEACON_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "5387:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 322,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1123,
                                  "src": "5360:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1123_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5372:14:3",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1045,
                                "src": "5360:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1019_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5360:40:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5401:5:3",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1018,
                            "src": "5360:46:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "newBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "5409:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5360:58:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "5360:58:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 297,
                    "nodeType": "StructuredDocumentation",
                    "src": "4978:71:3",
                    "text": " @dev Stores a new beacon in the EIP1967 beacon slot."
                  },
                  "id": 332,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setBeacon",
                  "nameLocation": "5063:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 300,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "newBeacon",
                        "nameLocation": "5082:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "5074:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5074:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5073:19:3"
                  },
                  "returnParameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5101:0:3"
                  },
                  "scope": 371,
                  "src": "5054:371:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "5824:217:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 343,
                              "name": "newBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 335,
                              "src": "5845:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 342,
                            "name": "_setBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "5834:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5834:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 345,
                        "nodeType": "ExpressionStatement",
                        "src": "5834:21:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 347,
                              "name": "newBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 335,
                              "src": "5885:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 346,
                            "name": "BeaconUpgraded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "5870:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5870:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 349,
                        "nodeType": "EmitStatement",
                        "src": "5865:30:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 350,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 337,
                                "src": "5909:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5914:6:3",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5909:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5923:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5909:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 354,
                            "name": "forceCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "5928:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5909:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 368,
                        "nodeType": "IfStatement",
                        "src": "5905:130:3",
                        "trueBody": {
                          "id": 367,
                          "nodeType": "Block",
                          "src": "5939:96:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 360,
                                            "name": "newBeacon",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 335,
                                            "src": "5990:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 359,
                                          "name": "IBeacon",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 433,
                                          "src": "5982:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$433_$",
                                            "typeString": "type(contract IBeacon)"
                                          }
                                        },
                                        "id": 361,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5982:18:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IBeacon_$433",
                                          "typeString": "contract IBeacon"
                                        }
                                      },
                                      "id": 362,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6001:14:3",
                                      "memberName": "implementation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 432,
                                      "src": "5982:33:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5982:35:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 364,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 337,
                                    "src": "6019:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 356,
                                    "name": "Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 932,
                                    "src": "5953:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Address_$932_$",
                                      "typeString": "type(library Address)"
                                    }
                                  },
                                  "id": 358,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5961:20:3",
                                  "memberName": "functionDelegateCall",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 819,
                                  "src": "5953:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (address,bytes memory) returns (bytes memory)"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5953:71:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 366,
                              "nodeType": "ExpressionStatement",
                              "src": "5953:71:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 333,
                    "nodeType": "StructuredDocumentation",
                    "src": "5431:292:3",
                    "text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
                  },
                  "id": 370,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_upgradeBeaconToAndCall",
                  "nameLocation": "5737:23:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "newBeacon",
                        "nameLocation": "5769:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "5761:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5761:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5793:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "5780:17:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5780:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "forceCall",
                        "nameLocation": "5804:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 370,
                        "src": "5799:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5799:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5760:54:3"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5824:0:3"
                  },
                  "scope": 371,
                  "src": "5728:313:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 372,
              "src": "517:5526:3",
              "usedErrors": []
            }
          ],
          "src": "116:5928:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
          "exportedSymbols": { "Proxy": [423] },
          "id": 424,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 373,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "99:23:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Proxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 374,
                "nodeType": "StructuredDocumentation",
                "src": "124:598:4",
                "text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
              },
              "fullyImplemented": false,
              "id": 423,
              "linearizedBaseContracts": [423],
              "name": "Proxy",
              "nameLocation": "741:5:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 381,
                    "nodeType": "Block",
                    "src": "1008:835:4",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1027:810:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1280:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1283:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1286:12:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1286:14:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1267:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1267:34:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1267:34:4"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1428:74:4",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "1455:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1455:5:4"
                                  },
                                  {
                                    "name": "implementation",
                                    "nodeType": "YulIdentifier",
                                    "src": "1462:14:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1478:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1481:12:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1481:14:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1497:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1500:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nodeType": "YulIdentifier",
                                  "src": "1442:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1442:60:4"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nodeType": "YulTypedName",
                                  "src": "1432:6:4",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1570:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1573:1:4",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1576:14:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1576:16:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1555:14:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1555:38:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1555:38:4"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1688:59:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1713:1:4",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1716:14:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1716:16:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "1706:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1706:27:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1706:27:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1681:66:4",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1686:1:4",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1768:59:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1793:1:4",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1796:14:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1796:16:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "1786:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1786:27:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1786:27:4"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1760:67:4",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nodeType": "YulIdentifier",
                                "src": "1614:6:4"
                              },
                              "nodeType": "YulSwitch",
                              "src": "1607:220:4"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 377,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1462:14:4",
                            "valueSize": 1
                          }
                        ],
                        "id": 380,
                        "nodeType": "InlineAssembly",
                        "src": "1018:819:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 375,
                    "nodeType": "StructuredDocumentation",
                    "src": "753:190:4",
                    "text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
                  },
                  "id": 382,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_delegate",
                  "nameLocation": "957:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "975:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 382,
                        "src": "967:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "967:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "966:24:4"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1008:0:4"
                  },
                  "scope": 423,
                  "src": "948:895:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 383,
                    "nodeType": "StructuredDocumentation",
                    "src": "1849:173:4",
                    "text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
                  },
                  "id": 388,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nameLocation": "2036:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 384,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:2:4"
                  },
                  "returnParameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "2085:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2085:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2084:9:4"
                  },
                  "scope": 423,
                  "src": "2027:67:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "2360:72:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 392,
                            "name": "_beforeFallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "2370:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2370:17:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 394,
                        "nodeType": "ExpressionStatement",
                        "src": "2370:17:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 396,
                                "name": "_implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "2407:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2407:17:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 395,
                            "name": "_delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "2397:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2397:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 399,
                        "nodeType": "ExpressionStatement",
                        "src": "2397:28:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 389,
                    "nodeType": "StructuredDocumentation",
                    "src": "2100:217:4",
                    "text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
                  },
                  "id": 401,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_fallback",
                  "nameLocation": "2331:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2340:2:4"
                  },
                  "returnParameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2360:0:4"
                  },
                  "scope": 423,
                  "src": "2322:110:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "2665:28:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 405,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "2675:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2675:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 407,
                        "nodeType": "ExpressionStatement",
                        "src": "2675:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 402,
                    "nodeType": "StructuredDocumentation",
                    "src": "2438:186:4",
                    "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
                  },
                  "id": 409,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2637:2:4"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2665:0:4"
                  },
                  "scope": 423,
                  "src": "2629:64:4",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 416,
                    "nodeType": "Block",
                    "src": "2888:28:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 413,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "2898:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2898:11:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 415,
                        "nodeType": "ExpressionStatement",
                        "src": "2898:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "2699:149:4",
                    "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
                  },
                  "id": 417,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2860:2:4"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2888:0:4"
                  },
                  "scope": 423,
                  "src": "2853:63:4",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 421,
                    "nodeType": "Block",
                    "src": "3242:2:4",
                    "statements": []
                  },
                  "documentation": {
                    "id": 418,
                    "nodeType": "StructuredDocumentation",
                    "src": "2922:271:4",
                    "text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
                  },
                  "id": 422,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeFallback",
                  "nameLocation": "3207:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3222:2:4"
                  },
                  "returnParameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3242:0:4"
                  },
                  "scope": 423,
                  "src": "3198:46:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 424,
              "src": "723:2523:4",
              "usedErrors": []
            }
          ],
          "src": "99:3148:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
          "exportedSymbols": { "IBeacon": [433] },
          "id": 434,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 425,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "93:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBeacon",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 426,
                "nodeType": "StructuredDocumentation",
                "src": "118:79:5",
                "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
              },
              "fullyImplemented": false,
              "id": 433,
              "linearizedBaseContracts": [433],
              "name": "IBeacon",
              "nameLocation": "208:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "222:162:5",
                    "text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
                  },
                  "functionSelector": "5c60da1b",
                  "id": 432,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementation",
                  "nameLocation": "398:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "412:2:5"
                  },
                  "returnParameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "438:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "438:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "437:9:5"
                  },
                  "scope": 433,
                  "src": "389:58:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 434,
              "src": "198:251:5",
              "usedErrors": []
            }
          ],
          "src": "93:357:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
          "exportedSymbols": { "Address": [932], "Initializable": [602] },
          "id": 603,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 435,
              "literals": ["solidity", "^", "0.8", ".2"],
              "nodeType": "PragmaDirective",
              "src": "113:23:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../utils/Address.sol",
              "id": 436,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 603,
              "sourceUnit": 933,
              "src": "138:33:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Initializable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 437,
                "nodeType": "StructuredDocumentation",
                "src": "173:2209:6",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 602,
              "linearizedBaseContracts": [602],
              "name": "Initializable",
              "nameLocation": "2401:13:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 438,
                    "nodeType": "StructuredDocumentation",
                    "src": "2421:109:6",
                    "text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
                  },
                  "id": 440,
                  "mutability": "mutable",
                  "name": "_initialized",
                  "nameLocation": "2549:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 602,
                  "src": "2535:26:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 441,
                    "nodeType": "StructuredDocumentation",
                    "src": "2568:91:6",
                    "text": " @dev Indicates that the contract is in the process of being initialized."
                  },
                  "id": 443,
                  "mutability": "mutable",
                  "name": "_initializing",
                  "nameLocation": "2677:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 602,
                  "src": "2664:26:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 444,
                    "nodeType": "StructuredDocumentation",
                    "src": "2697:90:6",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
                  "id": 448,
                  "name": "Initialized",
                  "nameLocation": "2798:11:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "2816:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "2810:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2810:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2809:15:6"
                  },
                  "src": "2792:33:6"
                },
                {
                  "body": {
                    "id": 503,
                    "nodeType": "Block",
                    "src": "3258:472:6",
                    "statements": [
                      {
                        "assignments": [452],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 452,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "3273:14:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 503,
                            "src": "3268:19:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 451,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3268:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 455,
                        "initialValue": {
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3290:14:6",
                          "subExpression": {
                            "id": 453,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "3291:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3268:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 457,
                                      "name": "isTopLevelCall",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 452,
                                      "src": "3336:14:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 460,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 458,
                                        "name": "_initialized",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 440,
                                        "src": "3354:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 459,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3369:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3354:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3336:34:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 462,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3335:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 470,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "!",
                                      "prefix": true,
                                      "src": "3376:34:6",
                                      "subExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 467,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "3404:4:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Initializable_$602",
                                                  "typeString": "contract Initializable"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Initializable_$602",
                                                  "typeString": "contract Initializable"
                                                }
                                              ],
                                              "id": 466,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3396:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 465,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3396:7:6",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 468,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3396:13:6",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 463,
                                            "name": "Address",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 932,
                                            "src": "3377:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Address_$932_$",
                                              "typeString": "type(library Address)"
                                            }
                                          },
                                          "id": 464,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3385:10:6",
                                          "memberName": "isContract",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 620,
                                          "src": "3377:18:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address) view returns (bool)"
                                          }
                                        },
                                        "id": 469,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3377:33:6",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 473,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 471,
                                        "name": "_initialized",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 440,
                                        "src": "3414:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 472,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3430:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3414:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3376:55:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 475,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3375:57:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3335:97:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3446:48:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              },
                              "value": "Initializable: contract is already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              }
                            ],
                            "id": 456,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3314:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3314:190:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 479,
                        "nodeType": "ExpressionStatement",
                        "src": "3314:190:6"
                      },
                      {
                        "expression": {
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 480,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "3514:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3529:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3514:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 483,
                        "nodeType": "ExpressionStatement",
                        "src": "3514:16:6"
                      },
                      {
                        "condition": {
                          "id": 484,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "3544:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 490,
                        "nodeType": "IfStatement",
                        "src": "3540:65:6",
                        "trueBody": {
                          "id": 489,
                          "nodeType": "Block",
                          "src": "3560:45:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 485,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "3574:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3590:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3574:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 488,
                              "nodeType": "ExpressionStatement",
                              "src": "3574:20:6"
                            }
                          ]
                        }
                      },
                      {
                        "id": 491,
                        "nodeType": "PlaceholderStatement",
                        "src": "3614:1:6"
                      },
                      {
                        "condition": {
                          "id": 492,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "3629:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 502,
                        "nodeType": "IfStatement",
                        "src": "3625:99:6",
                        "trueBody": {
                          "id": 501,
                          "nodeType": "Block",
                          "src": "3645:79:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 493,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "3659:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3675:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "3659:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 496,
                              "nodeType": "ExpressionStatement",
                              "src": "3659:21:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3711:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 497,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "3699:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                    "typeString": "function (uint8)"
                                  }
                                },
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3699:14:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 500,
                              "nodeType": "EmitStatement",
                              "src": "3694:19:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 449,
                    "nodeType": "StructuredDocumentation",
                    "src": "2831:399:6",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
                  },
                  "id": 504,
                  "name": "initializer",
                  "nameLocation": "3244:11:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:2:6"
                  },
                  "src": "3235:495:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 536,
                    "nodeType": "Block",
                    "src": "4841:255:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "4859:14:6",
                                "subExpression": {
                                  "id": 510,
                                  "name": "_initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "4860:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 512,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "4877:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 513,
                                  "name": "version",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 507,
                                  "src": "4892:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "4877:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4859:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                              "id": 516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4901:48:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              },
                              "value": "Initializable: contract is already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                                "typeString": "literal_string \"Initializable: contract is already initialized\""
                              }
                            ],
                            "id": 509,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4851:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4851:99:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "4851:99:6"
                      },
                      {
                        "expression": {
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 519,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "4960:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 520,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "4975:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4960:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "4960:22:6"
                      },
                      {
                        "expression": {
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 523,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "4992:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5008:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4992:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 526,
                        "nodeType": "ExpressionStatement",
                        "src": "4992:20:6"
                      },
                      {
                        "id": 527,
                        "nodeType": "PlaceholderStatement",
                        "src": "5022:1:6"
                      },
                      {
                        "expression": {
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 528,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "5033:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5049:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5033:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 531,
                        "nodeType": "ExpressionStatement",
                        "src": "5033:21:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 533,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "5081:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 532,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "5069:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                              "typeString": "function (uint8)"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5069:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 535,
                        "nodeType": "EmitStatement",
                        "src": "5064:25:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 505,
                    "nodeType": "StructuredDocumentation",
                    "src": "3736:1062:6",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
                  },
                  "id": 537,
                  "name": "reinitializer",
                  "nameLocation": "4812:13:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "4832:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 537,
                        "src": "4826:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4826:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4825:15:6"
                  },
                  "src": "4803:293:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 546,
                    "nodeType": "Block",
                    "src": "5334:97:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 541,
                              "name": "_initializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "5352:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5367:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                                "typeString": "literal_string \"Initializable: contract is not initializing\""
                              },
                              "value": "Initializable: contract is not initializing"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                                "typeString": "literal_string \"Initializable: contract is not initializing\""
                              }
                            ],
                            "id": 540,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5344:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5344:69:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 544,
                        "nodeType": "ExpressionStatement",
                        "src": "5344:69:6"
                      },
                      {
                        "id": 545,
                        "nodeType": "PlaceholderStatement",
                        "src": "5423:1:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 538,
                    "nodeType": "StructuredDocumentation",
                    "src": "5102:199:6",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 547,
                  "name": "onlyInitializing",
                  "nameLocation": "5315:16:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5331:2:6"
                  },
                  "src": "5306:125:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 582,
                    "nodeType": "Block",
                    "src": "5966:231:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5984:14:6",
                              "subExpression": {
                                "id": 552,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 443,
                                "src": "5985:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6000:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                                "typeString": "literal_string \"Initializable: contract is initializing\""
                              },
                              "value": "Initializable: contract is initializing"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                                "typeString": "literal_string \"Initializable: contract is initializing\""
                              }
                            ],
                            "id": 551,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5976:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5976:66:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 556,
                        "nodeType": "ExpressionStatement",
                        "src": "5976:66:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 557,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "6056:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6077:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 559,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6077:5:6",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  }
                                ],
                                "id": 558,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "6072:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6072:11:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint8",
                                "typeString": "type(uint8)"
                              }
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6084:3:6",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "6072:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "6056:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 581,
                        "nodeType": "IfStatement",
                        "src": "6052:139:6",
                        "trueBody": {
                          "id": 580,
                          "nodeType": "Block",
                          "src": "6089:102:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 564,
                                  "name": "_initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "6103:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 567,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6123:5:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        },
                                        "typeName": {
                                          "id": 566,
                                          "name": "uint8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6123:5:6",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        }
                                      ],
                                      "id": 565,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "6118:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6118:11:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint8",
                                      "typeString": "type(uint8)"
                                    }
                                  },
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6130:3:6",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "6118:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "6103:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 571,
                              "nodeType": "ExpressionStatement",
                              "src": "6103:30:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 575,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6169:5:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 574,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6169:5:6",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          }
                                        ],
                                        "id": 573,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "6164:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 576,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6164:11:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint8",
                                        "typeString": "type(uint8)"
                                      }
                                    },
                                    "id": 577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6176:3:6",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "6164:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 572,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "6152:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                    "typeString": "function (uint8)"
                                  }
                                },
                                "id": 578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6152:28:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 579,
                              "nodeType": "EmitStatement",
                              "src": "6147:33:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 548,
                    "nodeType": "StructuredDocumentation",
                    "src": "5437:475:6",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                  },
                  "id": 583,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "5926:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 549,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5946:2:6"
                  },
                  "returnParameters": {
                    "id": 550,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5966:0:6"
                  },
                  "scope": 602,
                  "src": "5917:280:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "6371:36:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 589,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 440,
                          "src": "6388:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 588,
                        "id": 590,
                        "nodeType": "Return",
                        "src": "6381:19:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 584,
                    "nodeType": "StructuredDocumentation",
                    "src": "6203:99:6",
                    "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                  },
                  "id": 592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializedVersion",
                  "nameLocation": "6316:22:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6338:2:6"
                  },
                  "returnParameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "6364:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6364:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6363:7:6"
                  },
                  "scope": 602,
                  "src": "6307:100:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 600,
                    "nodeType": "Block",
                    "src": "6579:37:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 598,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "6596:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 597,
                        "id": 599,
                        "nodeType": "Return",
                        "src": "6589:20:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 593,
                    "nodeType": "StructuredDocumentation",
                    "src": "6413:105:6",
                    "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                  },
                  "id": 601,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isInitializing",
                  "nameLocation": "6532:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6547:2:6"
                  },
                  "returnParameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 601,
                        "src": "6573:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6573:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6572:6:6"
                  },
                  "scope": 602,
                  "src": "6523:93:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 603,
              "src": "2383:4235:6",
              "usedErrors": []
            }
          ],
          "src": "113:6506:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": { "Address": [932] },
          "id": 933,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 604,
              "literals": ["solidity", "^", "0.8", ".1"],
              "nodeType": "PragmaDirective",
              "src": "101:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Address",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 605,
                "nodeType": "StructuredDocumentation",
                "src": "126:67:7",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 932,
              "linearizedBaseContracts": [932],
              "name": "Address",
              "nameLocation": "202:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 619,
                    "nodeType": "Block",
                    "src": "1478:254:7",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 613,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "1702:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1710:4:7",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "1702:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1715:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1702:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1724:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1702:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 612,
                        "id": 618,
                        "nodeType": "Return",
                        "src": "1695:30:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 606,
                    "nodeType": "StructuredDocumentation",
                    "src": "216:1191:7",
                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                  },
                  "id": 620,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nameLocation": "1421:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1440:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "1432:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1432:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1431:17:7"
                  },
                  "returnParameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 620,
                        "src": "1472:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1472:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1471:6:7"
                  },
                  "scope": 932,
                  "src": "1412:320:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 653,
                    "nodeType": "Block",
                    "src": "2718:241:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 631,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2744:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$932",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$932",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2736:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 629,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2736:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2736:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2750:7:7",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "2736:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 634,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 625,
                                "src": "2761:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2736:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2769:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 628,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2728:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2728:73:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "2728:73:7"
                      },
                      {
                        "assignments": [640, null],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 640,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2818:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 653,
                            "src": "2813:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 639,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2813:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 647,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2861:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 641,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 623,
                                "src": "2831:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2841:4:7",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2831:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": ["value"],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 643,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 625,
                                "src": "2853:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2831:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2831:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2812:52:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 649,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "2882:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2891:60:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 648,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2874:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2874:78:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 652,
                        "nodeType": "ExpressionStatement",
                        "src": "2874:78:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 621,
                    "nodeType": "StructuredDocumentation",
                    "src": "1738:904:7",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 654,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "2656:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2682:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 654,
                        "src": "2666:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2666:15:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2701:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 654,
                        "src": "2693:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2693:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2665:43:7"
                  },
                  "returnParameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2718:0:7"
                  },
                  "scope": 932,
                  "src": "2647:312:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "3790:96:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 665,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "3829:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 666,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "3837:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3843:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3846:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              },
                              "value": "Address: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                                "typeString": "literal_string \"Address: low-level call failed\""
                              }
                            ],
                            "id": 664,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [712, 756],
                            "referencedDeclaration": 756,
                            "src": "3807:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3807:72:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 663,
                        "id": 670,
                        "nodeType": "Return",
                        "src": "3800:79:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 655,
                    "nodeType": "StructuredDocumentation",
                    "src": "2965:731:7",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "3710:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3731:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "3723:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3723:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3752:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "3739:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3739:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3722:35:7"
                  },
                  "returnParameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "3776:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3776:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3775:14:7"
                  },
                  "scope": 932,
                  "src": "3701:185:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 691,
                    "nodeType": "Block",
                    "src": "4255:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 685,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "4294:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 686,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "4302:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4308:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 688,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "4311:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 684,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [712, 756],
                            "referencedDeclaration": 756,
                            "src": "4272:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4272:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 683,
                        "id": 690,
                        "nodeType": "Return",
                        "src": "4265:59:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "3892:211:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 692,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "4117:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4147:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "4139:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4139:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4176:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "4163:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4163:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "4204:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "4190:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4190:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4129:93:7"
                  },
                  "returnParameters": {
                    "id": 683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "4241:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4241:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4240:14:7"
                  },
                  "scope": 932,
                  "src": "4108:223:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 711,
                    "nodeType": "Block",
                    "src": "4806:111:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "4845:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 706,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "4853:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 707,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "4859:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4866:43:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              },
                              "value": "Address: low-level call with value failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                                "typeString": "literal_string \"Address: low-level call with value failed\""
                              }
                            ],
                            "id": 704,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [712, 756],
                            "referencedDeclaration": 756,
                            "src": "4823:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:87:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 703,
                        "id": 710,
                        "nodeType": "Return",
                        "src": "4816:94:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 693,
                    "nodeType": "StructuredDocumentation",
                    "src": "4337:351:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                  },
                  "id": 712,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "4702:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4732:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "4724:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4724:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4753:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "4740:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4740:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4767:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "4759:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4759:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4723:50:7"
                  },
                  "returnParameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 702,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "4792:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4792:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4791:14:7"
                  },
                  "scope": 932,
                  "src": "4693:224:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 755,
                    "nodeType": "Block",
                    "src": "5344:267:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 729,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5370:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$932",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$932",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5362:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 727,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5362:7:7",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 730,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5362:13:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5376:7:7",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "5362:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 732,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 719,
                                "src": "5387:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5362:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                              "id": 734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5394:40:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              },
                              "value": "Address: insufficient balance for call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                                "typeString": "literal_string \"Address: insufficient balance for call\""
                              }
                            ],
                            "id": 726,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5354:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5354:81:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 736,
                        "nodeType": "ExpressionStatement",
                        "src": "5354:81:7"
                      },
                      {
                        "assignments": [738, 740],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 738,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5451:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 755,
                            "src": "5446:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 737,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5446:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 740,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5473:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 755,
                            "src": "5460:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 739,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5460:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 747,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 745,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "5513:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 741,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 715,
                                "src": "5487:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5494:4:7",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "5487:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": ["value"],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 743,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 719,
                                "src": "5506:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "5487:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5487:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5445:73:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 749,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "5562:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 750,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "5570:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 751,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 740,
                              "src": "5579:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 752,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "5591:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 748,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "5535:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5535:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 725,
                        "id": 754,
                        "nodeType": "Return",
                        "src": "5528:76:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 713,
                    "nodeType": "StructuredDocumentation",
                    "src": "4923:237:7",
                    "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                  },
                  "id": 756,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "5174:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 715,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "5213:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 756,
                        "src": "5205:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 714,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5205:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 717,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5242:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 756,
                        "src": "5229:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5229:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5264:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 756,
                        "src": "5256:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5256:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5293:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 756,
                        "src": "5279:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5279:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5195:116:7"
                  },
                  "returnParameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 724,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 756,
                        "src": "5330:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5329:14:7"
                  },
                  "scope": 932,
                  "src": "5165:446:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 772,
                    "nodeType": "Block",
                    "src": "5888:97:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 767,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "5924:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 768,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 761,
                              "src": "5932:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5938:39:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              },
                              "value": "Address: low-level static call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                                "typeString": "literal_string \"Address: low-level static call failed\""
                              }
                            ],
                            "id": 766,
                            "name": "functionStaticCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [773, 802],
                            "referencedDeclaration": 802,
                            "src": "5905:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5905:73:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 765,
                        "id": 771,
                        "nodeType": "Return",
                        "src": "5898:80:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 757,
                    "nodeType": "StructuredDocumentation",
                    "src": "5617:166:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 773,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "5797:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 759,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "5824:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 773,
                        "src": "5816:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5816:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5845:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 773,
                        "src": "5832:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5832:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5815:35:7"
                  },
                  "returnParameters": {
                    "id": 765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 773,
                        "src": "5874:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 763,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5874:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5873:14:7"
                  },
                  "scope": 932,
                  "src": "5788:197:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 801,
                    "nodeType": "Block",
                    "src": "6327:168:7",
                    "statements": [
                      {
                        "assignments": [786, 788],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 786,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "6343:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 801,
                            "src": "6338:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 785,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6338:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 788,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "6365:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 801,
                            "src": "6352:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 787,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6352:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 793,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 791,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "6397:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 789,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "6379:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6386:10:7",
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "6379:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6379:23:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6337:65:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 795,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "6446:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 796,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "6454:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 797,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 788,
                              "src": "6463:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 798,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "6475:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 794,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "6419:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6419:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 784,
                        "id": 800,
                        "nodeType": "Return",
                        "src": "6412:76:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 774,
                    "nodeType": "StructuredDocumentation",
                    "src": "5991:173:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                  },
                  "id": 802,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "6178:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6214:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6206:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 775,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6206:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 778,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6243:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6230:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6230:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "6271:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6257:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 779,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6257:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6196:93:7"
                  },
                  "returnParameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "6313:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6313:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6312:14:7"
                  },
                  "scope": 932,
                  "src": "6169:326:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 818,
                    "nodeType": "Block",
                    "src": "6771:101:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 813,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "6809:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 814,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "6817:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6823:41:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              },
                              "value": "Address: low-level delegate call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                                "typeString": "literal_string \"Address: low-level delegate call failed\""
                              }
                            ],
                            "id": 812,
                            "name": "functionDelegateCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [819, 848],
                            "referencedDeclaration": 848,
                            "src": "6788:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6788:77:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 811,
                        "id": 817,
                        "nodeType": "Return",
                        "src": "6781:84:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:168:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 819,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "6683:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "6712:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "6704:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6704:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6733:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "6720:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6720:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6703:35:7"
                  },
                  "returnParameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 810,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "6757:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6757:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6756:14:7"
                  },
                  "scope": 932,
                  "src": "6674:198:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 847,
                    "nodeType": "Block",
                    "src": "7213:170:7",
                    "statements": [
                      {
                        "assignments": [832, 834],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 832,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7229:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 847,
                            "src": "7224:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 831,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7224:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 834,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "7251:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 847,
                            "src": "7238:23:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 833,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7238:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 839,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 837,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "7285:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 835,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "7265:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7272:12:7",
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "7265:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7265:25:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7223:67:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 841,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "7334:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 842,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "7342:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 843,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "7351:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 844,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 826,
                              "src": "7363:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 840,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "7307:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7307:69:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 830,
                        "id": 846,
                        "nodeType": "Return",
                        "src": "7300:76:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 820,
                    "nodeType": "StructuredDocumentation",
                    "src": "6878:175:7",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                  },
                  "id": 848,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "7067:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "7105:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "7097:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7097:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7134:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "7121:17:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7121:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 826,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7162:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "7148:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7148:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7087:93:7"
                  },
                  "returnParameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "7199:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7199:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7198:14:7"
                  },
                  "scope": 932,
                  "src": "7058:325:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 886,
                    "nodeType": "Block",
                    "src": "7865:434:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 862,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 853,
                          "src": "7879:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 884,
                          "nodeType": "Block",
                          "src": "8235:58:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 880,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 855,
                                    "src": "8257:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 881,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 857,
                                    "src": "8269:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 879,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 931,
                                  "src": "8249:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory,string memory) pure"
                                  }
                                },
                                "id": 882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8249:33:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 883,
                              "nodeType": "ExpressionStatement",
                              "src": "8249:33:7"
                            }
                          ]
                        },
                        "id": 885,
                        "nodeType": "IfStatement",
                        "src": "7875:418:7",
                        "trueBody": {
                          "id": 878,
                          "nodeType": "Block",
                          "src": "7888:341:7",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 863,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 855,
                                    "src": "7906:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 864,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7917:6:7",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "7906:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7927:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7906:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 875,
                              "nodeType": "IfStatement",
                              "src": "7902:286:7",
                              "trueBody": {
                                "id": 874,
                                "nodeType": "Block",
                                "src": "7930:258:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 869,
                                              "name": "target",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 851,
                                              "src": "8132:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 868,
                                            "name": "isContract",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 620,
                                            "src": "8121:10:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                              "typeString": "function (address) view returns (bool)"
                                            }
                                          },
                                          "id": 870,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8121:18:7",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                          "id": 871,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8141:31:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                            "typeString": "literal_string \"Address: call to non-contract\""
                                          },
                                          "value": "Address: call to non-contract"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                            "typeString": "literal_string \"Address: call to non-contract\""
                                          }
                                        ],
                                        "id": 867,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [-18, -18],
                                        "referencedDeclaration": -18,
                                        "src": "8113:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8113:60:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 873,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8113:60:7"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 876,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 855,
                                "src": "8208:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 861,
                              "id": 877,
                              "nodeType": "Return",
                              "src": "8201:17:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 849,
                    "nodeType": "StructuredDocumentation",
                    "src": "7389:277:7",
                    "text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
                  },
                  "id": 887,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResultFromTarget",
                  "nameLocation": "7680:26:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 858,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "7724:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "7716:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7716:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "7745:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "7740:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7740:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "7775:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "7762:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7762:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "7809:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "7795:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7795:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7706:121:7"
                  },
                  "returnParameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "7851:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7851:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7850:14:7"
                  },
                  "scope": 932,
                  "src": "7671:628:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 910,
                    "nodeType": "Block",
                    "src": "8680:135:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 899,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "8694:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 908,
                          "nodeType": "Block",
                          "src": "8751:58:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 904,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 892,
                                    "src": "8773:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 905,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 894,
                                    "src": "8785:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 903,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 931,
                                  "src": "8765:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory,string memory) pure"
                                  }
                                },
                                "id": 906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8765:33:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 907,
                              "nodeType": "ExpressionStatement",
                              "src": "8765:33:7"
                            }
                          ]
                        },
                        "id": 909,
                        "nodeType": "IfStatement",
                        "src": "8690:119:7",
                        "trueBody": {
                          "id": 902,
                          "nodeType": "Block",
                          "src": "8703:42:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 900,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 892,
                                "src": "8724:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 898,
                              "id": 901,
                              "nodeType": "Return",
                              "src": "8717:17:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 888,
                    "nodeType": "StructuredDocumentation",
                    "src": "8305:210:7",
                    "text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
                  },
                  "id": 911,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nameLocation": "8529:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 890,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "8560:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "8555:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 889,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8555:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 892,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "8590:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "8577:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8577:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "8624:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "8610:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8610:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8545:97:7"
                  },
                  "returnParameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "8666:12:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8666:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8665:14:7"
                  },
                  "scope": 932,
                  "src": "8520:295:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 930,
                    "nodeType": "Block",
                    "src": "8904:457:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 918,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "8980:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8991:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8980:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9000:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8980:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 928,
                          "nodeType": "Block",
                          "src": "9310:45:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 925,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 915,
                                    "src": "9331:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 924,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [-19, -19],
                                  "referencedDeclaration": -19,
                                  "src": "9324:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9324:20:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 927,
                              "nodeType": "ExpressionStatement",
                              "src": "9324:20:7"
                            }
                          ]
                        },
                        "id": 929,
                        "nodeType": "IfStatement",
                        "src": "8976:379:7",
                        "trueBody": {
                          "id": 923,
                          "nodeType": "Block",
                          "src": "9003:301:7",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "9161:133:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "9179:40:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "9208:10:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "9202:5:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9202:17:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "9183:15:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "9247:2:7",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "9251:10:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "9243:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9243:19:7"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "9264:15:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "9236:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9236:44:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9236:44:7"
                                  }
                                ]
                              },
                              "documentation": "@solidity memory-safe-assembly",
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 913,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "9208:10:7",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 913,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "9251:10:7",
                                  "valueSize": 1
                                }
                              ],
                              "id": 922,
                              "nodeType": "InlineAssembly",
                              "src": "9152:142:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 931,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revert",
                  "nameLocation": "8830:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "8851:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 931,
                        "src": "8838:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8838:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "8877:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 931,
                        "src": "8863:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 914,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8863:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8837:53:7"
                  },
                  "returnParameters": {
                    "id": 917,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8904:0:7"
                  },
                  "scope": 932,
                  "src": "8821:540:7",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 933,
              "src": "194:9169:7",
              "usedErrors": []
            }
          ],
          "src": "101:9263:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/Create2.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
          "exportedSymbols": { "Create2": [1013] },
          "id": 1014,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 934,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "101:23:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Create2",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 935,
                "nodeType": "StructuredDocumentation",
                "src": "126:367:8",
                "text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
              },
              "fullyImplemented": true,
              "id": 1013,
              "linearizedBaseContracts": [1013],
              "name": "Create2",
              "nameLocation": "502:7:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "1182:383:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 950,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1208:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Create2_$1013",
                                        "typeString": "library Create2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Create2_$1013",
                                        "typeString": "library Create2"
                                      }
                                    ],
                                    "id": 949,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1200:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 948,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1200:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1200:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1214:7:8",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "1200:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 953,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 938,
                                "src": "1225:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1200:31:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "437265617465323a20696e73756666696369656e742062616c616e6365",
                              "id": 955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1233:31:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca",
                                "typeString": "literal_string \"Create2: insufficient balance\""
                              },
                              "value": "Create2: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca",
                                "typeString": "literal_string \"Create2: insufficient balance\""
                              }
                            ],
                            "id": 947,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1192:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1192:73:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 957,
                        "nodeType": "ExpressionStatement",
                        "src": "1192:73:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 959,
                                  "name": "bytecode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 942,
                                  "src": "1283:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1292:6:8",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1283:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1302:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1283:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "437265617465323a2062797465636f6465206c656e677468206973207a65726f",
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1305:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0",
                                "typeString": "literal_string \"Create2: bytecode length is zero\""
                              },
                              "value": "Create2: bytecode length is zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0",
                                "typeString": "literal_string \"Create2: bytecode length is zero\""
                              }
                            ],
                            "id": 958,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1275:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1275:65:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 965,
                        "nodeType": "ExpressionStatement",
                        "src": "1275:65:8"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1402:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1416:67:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "1432:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1444:8:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1454:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1440:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1440:19:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1467:8:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1461:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1461:15:8"
                                  },
                                  {
                                    "name": "salt",
                                    "nodeType": "YulIdentifier",
                                    "src": "1478:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1424:7:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1424:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1416:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 945,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1416:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 938,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1432:6:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 942,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1444:8:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 942,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1467:8:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 940,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1478:4:8",
                            "valueSize": 1
                          }
                        ],
                        "id": 966,
                        "nodeType": "InlineAssembly",
                        "src": "1393:100:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 968,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 945,
                                "src": "1510:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 971,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1526:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 970,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1518:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 969,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1518:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1518:10:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1510:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "437265617465323a204661696c6564206f6e206465706c6f79",
                              "id": 974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1530:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676",
                                "typeString": "literal_string \"Create2: Failed on deploy\""
                              },
                              "value": "Create2: Failed on deploy"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676",
                                "typeString": "literal_string \"Create2: Failed on deploy\""
                              }
                            ],
                            "id": 967,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1502:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1502:56:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 976,
                        "nodeType": "ExpressionStatement",
                        "src": "1502:56:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 936,
                    "nodeType": "StructuredDocumentation",
                    "src": "516:560:8",
                    "text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
                  },
                  "id": 978,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "1090:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 938,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1105:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1097:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1097:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 940,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "1121:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1113:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 939,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "bytecode",
                        "nameLocation": "1140:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1127:21:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1127:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1096:53:8"
                  },
                  "returnParameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "1176:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1168:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1168:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1167:14:8"
                  },
                  "scope": 1013,
                  "src": "1081:484:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 997,
                    "nodeType": "Block",
                    "src": "1861:73:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 989,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 981,
                              "src": "1893:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 990,
                              "name": "bytecodeHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "1899:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 993,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1921:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Create2_$1013",
                                    "typeString": "library Create2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Create2_$1013",
                                    "typeString": "library Create2"
                                  }
                                ],
                                "id": 992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1913:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 991,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1913:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1913:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 988,
                            "name": "computeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [998, 1012],
                            "referencedDeclaration": 1012,
                            "src": "1878:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes32,address) pure returns (address)"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1878:49:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 987,
                        "id": 996,
                        "nodeType": "Return",
                        "src": "1871:56:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 979,
                    "nodeType": "StructuredDocumentation",
                    "src": "1571:193:8",
                    "text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
                  },
                  "id": 998,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "computeAddress",
                  "nameLocation": "1778:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 981,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "1801:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "1793:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 980,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1793:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 983,
                        "mutability": "mutable",
                        "name": "bytecodeHash",
                        "nameLocation": "1815:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "1807:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 982,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1807:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1792:36:8"
                  },
                  "returnParameters": {
                    "id": 987,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 998,
                        "src": "1852:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1852:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1851:9:8"
                  },
                  "scope": 1013,
                  "src": "1769:165:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1011,
                    "nodeType": "Block",
                    "src": "2292:1657:8",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2354:1589:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2368:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2385:4:8",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2379:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2379:11:8"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "2372:3:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3592:3:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3597:4:8",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3588:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3588:14:8"
                                  },
                                  {
                                    "name": "bytecodeHash",
                                    "nodeType": "YulIdentifier",
                                    "src": "3604:12:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3581:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3581:36:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3581:36:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3641:3:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3646:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3637:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3637:14:8"
                                  },
                                  {
                                    "name": "salt",
                                    "nodeType": "YulIdentifier",
                                    "src": "3653:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3630:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3630:28:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3630:28:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3678:3:8"
                                  },
                                  {
                                    "name": "deployer",
                                    "nodeType": "YulIdentifier",
                                    "src": "3683:8:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3671:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3671:21:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3671:21:8"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3754:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3771:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3776:4:8",
                                    "type": "",
                                    "value": "0x0b"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3767:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3767:14:8"
                              },
                              "variables": [
                                {
                                  "name": "start",
                                  "nodeType": "YulTypedName",
                                  "src": "3758:5:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "3880:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3887:4:8",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3872:7:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3872:20:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3872:20:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3905:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "3923:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3930:2:8",
                                    "type": "",
                                    "value": "85"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "3913:9:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3913:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3905:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1008,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3905:4:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1003,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3604:12:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1005,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3683:8:8",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1001,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3653:4:8",
                            "valueSize": 1
                          }
                        ],
                        "id": 1010,
                        "nodeType": "InlineAssembly",
                        "src": "2345:1598:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 999,
                    "nodeType": "StructuredDocumentation",
                    "src": "1940:232:8",
                    "text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
                  },
                  "id": 1012,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "computeAddress",
                  "nameLocation": "2186:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "2209:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "2201:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2201:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "bytecodeHash",
                        "nameLocation": "2223:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "2215:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2215:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "2245:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "2237:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2237:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2200:54:8"
                  },
                  "returnParameters": {
                    "id": 1009,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1008,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "2286:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "2278:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1007,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2278:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2277:14:8"
                  },
                  "scope": 1013,
                  "src": "2177:1772:8",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1014,
              "src": "494:3457:8",
              "usedErrors": []
            }
          ],
          "src": "101:3851:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
          "exportedSymbols": { "StorageSlot": [1123] },
          "id": 1124,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1015,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "193:23:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "StorageSlot",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1016,
                "nodeType": "StructuredDocumentation",
                "src": "218:1201:9",
                "text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
              },
              "fullyImplemented": true,
              "id": 1123,
              "linearizedBaseContracts": [1123],
              "name": "StorageSlot",
              "nameLocation": "1428:11:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "StorageSlot.AddressSlot",
                  "id": 1019,
                  "members": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1483:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1019,
                      "src": "1475:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1017,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1475:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "AddressSlot",
                  "nameLocation": "1453:11:9",
                  "nodeType": "StructDefinition",
                  "scope": 1123,
                  "src": "1446:49:9",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.BooleanSlot",
                  "id": 1022,
                  "members": [
                    {
                      "constant": false,
                      "id": 1021,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1535:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1022,
                      "src": "1530:10:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1020,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1530:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BooleanSlot",
                  "nameLocation": "1508:11:9",
                  "nodeType": "StructDefinition",
                  "scope": 1123,
                  "src": "1501:46:9",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.Bytes32Slot",
                  "id": 1025,
                  "members": [
                    {
                      "constant": false,
                      "id": 1024,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1590:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1025,
                      "src": "1582:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1023,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1582:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Bytes32Slot",
                  "nameLocation": "1560:11:9",
                  "nodeType": "StructDefinition",
                  "scope": 1123,
                  "src": "1553:49:9",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.Uint256Slot",
                  "id": 1028,
                  "members": [
                    {
                      "constant": false,
                      "id": 1027,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1645:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1028,
                      "src": "1637:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1637:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Uint256Slot",
                  "nameLocation": "1615:11:9",
                  "nodeType": "StructDefinition",
                  "scope": 1123,
                  "src": "1608:49:9",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.StringSlot",
                  "id": 1031,
                  "members": [
                    {
                      "constant": false,
                      "id": 1030,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1698:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1031,
                      "src": "1691:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1029,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1691:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "StringSlot",
                  "nameLocation": "1670:10:9",
                  "nodeType": "StructDefinition",
                  "scope": 1123,
                  "src": "1663:47:9",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.BytesSlot",
                  "id": 1034,
                  "members": [
                    {
                      "constant": false,
                      "id": 1033,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1749:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1034,
                      "src": "1743:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1032,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1743:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BytesSlot",
                  "nameLocation": "1723:9:9",
                  "nodeType": "StructDefinition",
                  "scope": 1123,
                  "src": "1716:45:9",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1044,
                    "nodeType": "Block",
                    "src": "1943:106:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2005:38:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2019:14:9",
                              "value": {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2029:4:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2019:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1041,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2019:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1037,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2029:4:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1043,
                        "nodeType": "InlineAssembly",
                        "src": "1996:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1035,
                    "nodeType": "StructuredDocumentation",
                    "src": "1767:87:9",
                    "text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
                  },
                  "id": 1045,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAddressSlot",
                  "nameLocation": "1868:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1038,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1037,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "1891:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1045,
                        "src": "1883:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1883:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1882:14:9"
                  },
                  "returnParameters": {
                    "id": 1042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1940:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1045,
                        "src": "1920:21:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot"
                        },
                        "typeName": {
                          "id": 1040,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1039,
                            "name": "AddressSlot",
                            "nameLocations": ["1920:11:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1019,
                            "src": "1920:11:9"
                          },
                          "referencedDeclaration": 1019,
                          "src": "1920:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$1019_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1919:23:9"
                  },
                  "scope": 1123,
                  "src": "1859:190:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1055,
                    "nodeType": "Block",
                    "src": "2231:106:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2293:38:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2307:14:9",
                              "value": {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2317:4:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2307:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1052,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2307:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1048,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2317:4:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1054,
                        "nodeType": "InlineAssembly",
                        "src": "2284:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1046,
                    "nodeType": "StructuredDocumentation",
                    "src": "2055:87:9",
                    "text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
                  },
                  "id": 1056,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBooleanSlot",
                  "nameLocation": "2156:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2179:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "2171:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2171:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2170:14:9"
                  },
                  "returnParameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2228:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1056,
                        "src": "2208:21:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BooleanSlot_$1022_storage_ptr",
                          "typeString": "struct StorageSlot.BooleanSlot"
                        },
                        "typeName": {
                          "id": 1051,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1050,
                            "name": "BooleanSlot",
                            "nameLocations": ["2208:11:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1022,
                            "src": "2208:11:9"
                          },
                          "referencedDeclaration": 1022,
                          "src": "2208:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BooleanSlot_$1022_storage_ptr",
                            "typeString": "struct StorageSlot.BooleanSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2207:23:9"
                  },
                  "scope": 1123,
                  "src": "2147:190:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1066,
                    "nodeType": "Block",
                    "src": "2519:106:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2581:38:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2595:14:9",
                              "value": {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2605:4:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2595:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1063,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2595:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1059,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2605:4:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1065,
                        "nodeType": "InlineAssembly",
                        "src": "2572:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1057,
                    "nodeType": "StructuredDocumentation",
                    "src": "2343:87:9",
                    "text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
                  },
                  "id": 1067,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytes32Slot",
                  "nameLocation": "2444:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2467:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "2459:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2459:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2458:14:9"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2516:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "2496:21:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Slot_$1025_storage_ptr",
                          "typeString": "struct StorageSlot.Bytes32Slot"
                        },
                        "typeName": {
                          "id": 1062,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1061,
                            "name": "Bytes32Slot",
                            "nameLocations": ["2496:11:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1025,
                            "src": "2496:11:9"
                          },
                          "referencedDeclaration": 1025,
                          "src": "2496:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bytes32Slot_$1025_storage_ptr",
                            "typeString": "struct StorageSlot.Bytes32Slot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2495:23:9"
                  },
                  "scope": 1123,
                  "src": "2435:190:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1077,
                    "nodeType": "Block",
                    "src": "2807:106:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2869:38:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2883:14:9",
                              "value": {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2893:4:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2883:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1074,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2883:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1070,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2893:4:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1076,
                        "nodeType": "InlineAssembly",
                        "src": "2860:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1068,
                    "nodeType": "StructuredDocumentation",
                    "src": "2631:87:9",
                    "text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
                  },
                  "id": 1078,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUint256Slot",
                  "nameLocation": "2732:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2755:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "2747:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2747:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2746:14:9"
                  },
                  "returnParameters": {
                    "id": 1075,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2804:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "2784:21:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Uint256Slot_$1028_storage_ptr",
                          "typeString": "struct StorageSlot.Uint256Slot"
                        },
                        "typeName": {
                          "id": 1073,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1072,
                            "name": "Uint256Slot",
                            "nameLocations": ["2784:11:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1028,
                            "src": "2784:11:9"
                          },
                          "referencedDeclaration": 1028,
                          "src": "2784:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Uint256Slot_$1028_storage_ptr",
                            "typeString": "struct StorageSlot.Uint256Slot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2783:23:9"
                  },
                  "scope": 1123,
                  "src": "2723:190:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1088,
                    "nodeType": "Block",
                    "src": "3092:106:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3154:38:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3168:14:9",
                              "value": {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "3178:4:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3168:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1085,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3168:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1081,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3178:4:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1087,
                        "nodeType": "InlineAssembly",
                        "src": "3145:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1079,
                    "nodeType": "StructuredDocumentation",
                    "src": "2919:86:9",
                    "text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
                  },
                  "id": 1089,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStringSlot",
                  "nameLocation": "3019:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1082,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1081,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "3041:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1089,
                        "src": "3033:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1080,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3032:14:9"
                  },
                  "returnParameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3089:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1089,
                        "src": "3070:20:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$1031_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        },
                        "typeName": {
                          "id": 1084,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1083,
                            "name": "StringSlot",
                            "nameLocations": ["3070:10:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1031,
                            "src": "3070:10:9"
                          },
                          "referencedDeclaration": 1031,
                          "src": "3070:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StringSlot_$1031_storage_ptr",
                            "typeString": "struct StorageSlot.StringSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3069:22:9"
                  },
                  "scope": 1123,
                  "src": "3010:188:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1099,
                    "nodeType": "Block",
                    "src": "3400:112:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3462:44:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3476:20:9",
                              "value": {
                                "name": "store.slot",
                                "nodeType": "YulIdentifier",
                                "src": "3486:10:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3476:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1096,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3476:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1092,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3486:10:9",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "id": 1098,
                        "nodeType": "InlineAssembly",
                        "src": "3453:53:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1090,
                    "nodeType": "StructuredDocumentation",
                    "src": "3204:101:9",
                    "text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
                  },
                  "id": 1100,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStringSlot",
                  "nameLocation": "3319:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "store",
                        "nameLocation": "3348:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "3333:20:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:22:9"
                  },
                  "returnParameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1096,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3397:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1100,
                        "src": "3378:20:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$1031_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        },
                        "typeName": {
                          "id": 1095,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1094,
                            "name": "StringSlot",
                            "nameLocations": ["3378:10:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1031,
                            "src": "3378:10:9"
                          },
                          "referencedDeclaration": 1031,
                          "src": "3378:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StringSlot_$1031_storage_ptr",
                            "typeString": "struct StorageSlot.StringSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3377:22:9"
                  },
                  "scope": 1123,
                  "src": "3310:202:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1110,
                    "nodeType": "Block",
                    "src": "3688:106:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3750:38:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3764:14:9",
                              "value": {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "3774:4:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3764:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1107,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3764:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1103,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3774:4:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1109,
                        "nodeType": "InlineAssembly",
                        "src": "3741:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1101,
                    "nodeType": "StructuredDocumentation",
                    "src": "3518:85:9",
                    "text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
                  },
                  "id": 1111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytesSlot",
                  "nameLocation": "3617:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "3638:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "3630:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3630:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3629:14:9"
                  },
                  "returnParameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1107,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3685:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "3667:19:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$1034_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        },
                        "typeName": {
                          "id": 1106,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1105,
                            "name": "BytesSlot",
                            "nameLocations": ["3667:9:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1034,
                            "src": "3667:9:9"
                          },
                          "referencedDeclaration": 1034,
                          "src": "3667:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BytesSlot_$1034_storage_ptr",
                            "typeString": "struct StorageSlot.BytesSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3666:21:9"
                  },
                  "scope": 1123,
                  "src": "3608:186:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1121,
                    "nodeType": "Block",
                    "src": "3991:112:9",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "4053:44:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4067:20:9",
                              "value": {
                                "name": "store.slot",
                                "nodeType": "YulIdentifier",
                                "src": "4077:10:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "4067:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1118,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "4067:6:9",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1114,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "4077:10:9",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "id": 1120,
                        "nodeType": "InlineAssembly",
                        "src": "4044:53:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1112,
                    "nodeType": "StructuredDocumentation",
                    "src": "3800:99:9",
                    "text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
                  },
                  "id": 1122,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytesSlot",
                  "nameLocation": "3913:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "store",
                        "nameLocation": "3940:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1122,
                        "src": "3926:19:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3926:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3925:21:9"
                  },
                  "returnParameters": {
                    "id": 1119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3988:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1122,
                        "src": "3970:19:9",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$1034_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        },
                        "typeName": {
                          "id": 1117,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1116,
                            "name": "BytesSlot",
                            "nameLocations": ["3970:9:9"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1034,
                            "src": "3970:9:9"
                          },
                          "referencedDeclaration": 1034,
                          "src": "3970:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BytesSlot_$1034_storage_ptr",
                            "typeString": "struct StorageSlot.BytesSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3969:21:9"
                  },
                  "scope": 1123,
                  "src": "3904:199:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1124,
              "src": "1420:2685:9",
              "usedErrors": []
            }
          ],
          "src": "193:3913:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
          "exportedSymbols": {
            "Math": [2584],
            "SignedMath": [2689],
            "Strings": [1352]
          },
          "id": 1353,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1125,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "101:23:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
              "file": "./math/Math.sol",
              "id": 1126,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1353,
              "sourceUnit": 2585,
              "src": "126:25:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
              "file": "./math/SignedMath.sol",
              "id": 1127,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1353,
              "sourceUnit": 2690,
              "src": "152:31:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Strings",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1128,
                "nodeType": "StructuredDocumentation",
                "src": "185:34:10",
                "text": " @dev String operations."
              },
              "fullyImplemented": true,
              "id": 1352,
              "linearizedBaseContracts": [1352],
              "name": "Strings",
              "nameLocation": "228:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1131,
                  "mutability": "constant",
                  "name": "_SYMBOLS",
                  "nameLocation": "267:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "242:54:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "value": {
                    "hexValue": "30313233343536373839616263646566",
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "278:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
                      "typeString": "literal_string \"0123456789abcdef\""
                    },
                    "value": "0123456789abcdef"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1134,
                  "mutability": "constant",
                  "name": "_ADDRESS_LENGTH",
                  "nameLocation": "325:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "302:43:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "343:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1181,
                    "nodeType": "Block",
                    "src": "518:625:10",
                    "statements": [
                      {
                        "id": 1180,
                        "nodeType": "UncheckedBlock",
                        "src": "528:609:10",
                        "statements": [
                          {
                            "assignments": [1143],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1143,
                                "mutability": "mutable",
                                "name": "length",
                                "nameLocation": "560:6:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 1180,
                                "src": "552:14:10",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1142,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "552:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1150,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1146,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1137,
                                    "src": "580:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1144,
                                    "name": "Math",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2584,
                                    "src": "569:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Math_$2584_$",
                                      "typeString": "type(library Math)"
                                    }
                                  },
                                  "id": 1145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "574:5:10",
                                  "memberName": "log10",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2421,
                                  "src": "569:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "569:17:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "589:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "569:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "552:38:10"
                          },
                          {
                            "assignments": [1152],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1152,
                                "mutability": "mutable",
                                "name": "buffer",
                                "nameLocation": "618:6:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 1180,
                                "src": "604:20:10",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string"
                                },
                                "typeName": {
                                  "id": 1151,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "604:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1157,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 1155,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1143,
                                  "src": "638:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "627:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                },
                                "typeName": {
                                  "id": 1153,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "631:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage_ptr",
                                    "typeString": "string"
                                  }
                                }
                              },
                              "id": 1156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "627:18:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "604:41:10"
                          },
                          {
                            "assignments": [1159],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1159,
                                "mutability": "mutable",
                                "name": "ptr",
                                "nameLocation": "667:3:10",
                                "nodeType": "VariableDeclaration",
                                "scope": 1180,
                                "src": "659:11:10",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1158,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "659:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1160,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "659:11:10"
                          },
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "740:67:10",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "758:35:10",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "buffer",
                                        "nodeType": "YulIdentifier",
                                        "src": "769:6:10"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "781:2:10",
                                            "type": "",
                                            "value": "32"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "785:6:10"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "777:3:10"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "777:15:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "765:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "765:28:10"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "758:3:10"
                                    }
                                  ]
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 1152,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "769:6:10",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1143,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "785:6:10",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1159,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "758:3:10",
                                "valueSize": 1
                              }
                            ],
                            "id": 1161,
                            "nodeType": "InlineAssembly",
                            "src": "731:76:10"
                          },
                          {
                            "body": {
                              "id": 1176,
                              "nodeType": "Block",
                              "src": "833:267:10",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "--",
                                    "prefix": false,
                                    "src": "851:5:10",
                                    "subExpression": {
                                      "id": 1163,
                                      "name": "ptr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1159,
                                      "src": "851:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1165,
                                  "nodeType": "ExpressionStatement",
                                  "src": "851:5:10"
                                },
                                {
                                  "AST": {
                                    "nodeType": "YulBlock",
                                    "src": "934:84:10",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "ptr",
                                              "nodeType": "YulIdentifier",
                                              "src": "964:3:10"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "978:5:10"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "985:2:10",
                                                      "type": "",
                                                      "value": "10"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mod",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "974:3:10"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "974:14:10"
                                                },
                                                {
                                                  "name": "_SYMBOLS",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "990:8:10"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "byte",
                                                "nodeType": "YulIdentifier",
                                                "src": "969:4:10"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "969:30:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore8",
                                            "nodeType": "YulIdentifier",
                                            "src": "956:7:10"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "956:44:10"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "956:44:10"
                                      }
                                    ]
                                  },
                                  "documentation": "@solidity memory-safe-assembly",
                                  "evmVersion": "paris",
                                  "externalReferences": [
                                    {
                                      "declaration": 1131,
                                      "isOffset": false,
                                      "isSlot": false,
                                      "src": "990:8:10",
                                      "valueSize": 1
                                    },
                                    {
                                      "declaration": 1159,
                                      "isOffset": false,
                                      "isSlot": false,
                                      "src": "964:3:10",
                                      "valueSize": 1
                                    },
                                    {
                                      "declaration": 1137,
                                      "isOffset": false,
                                      "isSlot": false,
                                      "src": "978:5:10",
                                      "valueSize": 1
                                    }
                                  ],
                                  "id": 1166,
                                  "nodeType": "InlineAssembly",
                                  "src": "925:93:10"
                                },
                                {
                                  "expression": {
                                    "id": 1169,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1167,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1137,
                                      "src": "1035:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "/=",
                                    "rightHandSide": {
                                      "hexValue": "3130",
                                      "id": 1168,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1044:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "1035:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1170,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1035:11:10"
                                },
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1173,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1171,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1137,
                                      "src": "1068:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1077:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1068:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1175,
                                  "nodeType": "IfStatement",
                                  "src": "1064:21:10",
                                  "trueBody": {
                                    "id": 1174,
                                    "nodeType": "Break",
                                    "src": "1080:5:10"
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "hexValue": "74727565",
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "827:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "id": 1177,
                            "nodeType": "WhileStatement",
                            "src": "820:280:10"
                          },
                          {
                            "expression": {
                              "id": 1178,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1152,
                              "src": "1120:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "functionReturnParameters": 1141,
                            "id": 1179,
                            "nodeType": "Return",
                            "src": "1113:13:10"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1135,
                    "nodeType": "StructuredDocumentation",
                    "src": "352:90:10",
                    "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
                  },
                  "id": 1182,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toString",
                  "nameLocation": "456:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "473:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "465:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "465:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "464:15:10"
                  },
                  "returnParameters": {
                    "id": 1141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1140,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "503:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "503:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "502:15:10"
                  },
                  "scope": 1352,
                  "src": "447:696:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1209,
                    "nodeType": "Block",
                    "src": "1313:103:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 1196,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1194,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1185,
                                      "src": "1354:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1195,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1362:1:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1354:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "",
                                    "id": 1198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1372:2:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  },
                                  "id": 1199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1354:20:10",
                                  "trueExpression": {
                                    "hexValue": "2d",
                                    "id": 1197,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1366:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                                      "typeString": "literal_string \"-\""
                                    },
                                    "value": "-"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1203,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1185,
                                          "src": "1400:5:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1201,
                                          "name": "SignedMath",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2689,
                                          "src": "1385:10:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_SignedMath_$2689_$",
                                            "typeString": "type(library SignedMath)"
                                          }
                                        },
                                        "id": 1202,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1396:3:10",
                                        "memberName": "abs",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2688,
                                        "src": "1385:14:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                                          "typeString": "function (int256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1385:21:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1200,
                                    "name": "toString",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [1182, 1210],
                                    "referencedDeclaration": 1182,
                                    "src": "1376:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1376:31:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1192,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1337:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1341:12:10",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1337:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1337:71:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1330:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1190,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1330:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1330:79:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1189,
                        "id": 1208,
                        "nodeType": "Return",
                        "src": "1323:86:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1183,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:89:10",
                    "text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
                  },
                  "id": 1210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toString",
                  "nameLocation": "1252:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1185,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1268:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "1261:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1184,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1261:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1260:14:10"
                  },
                  "returnParameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "1298:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1298:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1297:15:10"
                  },
                  "scope": 1352,
                  "src": "1243:173:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1229,
                    "nodeType": "Block",
                    "src": "1595:100:10",
                    "statements": [
                      {
                        "id": 1228,
                        "nodeType": "UncheckedBlock",
                        "src": "1605:84:10",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1219,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1213,
                                  "src": "1648:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 1222,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1213,
                                        "src": "1667:5:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1220,
                                        "name": "Math",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2584,
                                        "src": "1655:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_Math_$2584_$",
                                          "typeString": "type(library Math)"
                                        }
                                      },
                                      "id": 1221,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1660:6:10",
                                      "memberName": "log256",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2544,
                                      "src": "1655:11:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1223,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1655:18:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1676:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "1655:22:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1218,
                                "name": "toHexString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [1230, 1306, 1326],
                                "referencedDeclaration": 1306,
                                "src": "1636:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256,uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1636:42:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "functionReturnParameters": 1217,
                            "id": 1227,
                            "nodeType": "Return",
                            "src": "1629:49:10"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1211,
                    "nodeType": "StructuredDocumentation",
                    "src": "1422:94:10",
                    "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
                  },
                  "id": 1230,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "1530:11:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1550:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "1542:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1542:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1541:15:10"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1230,
                        "src": "1580:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1580:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1579:15:10"
                  },
                  "scope": 1352,
                  "src": "1521:174:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1305,
                    "nodeType": "Block",
                    "src": "1908:347:10",
                    "statements": [
                      {
                        "assignments": [1241],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1241,
                            "mutability": "mutable",
                            "name": "buffer",
                            "nameLocation": "1931:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1305,
                            "src": "1918:19:10",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1240,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1918:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1250,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1950:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1245,
                                  "name": "length",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1235,
                                  "src": "1954:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1950:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1963:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "1950:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1940:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 1242,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1944:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1940:25:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1918:47:10"
                      },
                      {
                        "expression": {
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1251,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1241,
                              "src": "1975:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1253,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1982:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1975:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1987:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                              "typeString": "literal_string \"0\""
                            },
                            "value": "0"
                          },
                          "src": "1975:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ExpressionStatement",
                        "src": "1975:15:10"
                      },
                      {
                        "expression": {
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1257,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1241,
                              "src": "2000:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1259,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 1258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2007:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2000:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "78",
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2012:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                              "typeString": "literal_string \"x\""
                            },
                            "value": "x"
                          },
                          "src": "2000:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1262,
                        "nodeType": "ExpressionStatement",
                        "src": "2000:15:10"
                      },
                      {
                        "body": {
                          "id": 1291,
                          "nodeType": "Block",
                          "src": "2070:83:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1277,
                                    "name": "buffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1241,
                                    "src": "2084:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1279,
                                  "indexExpression": {
                                    "id": 1278,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1264,
                                    "src": "2091:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2084:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1280,
                                    "name": "_SYMBOLS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1131,
                                    "src": "2096:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes16",
                                      "typeString": "bytes16"
                                    }
                                  },
                                  "id": 1284,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1281,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1233,
                                      "src": "2105:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&",
                                    "rightExpression": {
                                      "hexValue": "307866",
                                      "id": 1282,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2113:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_15_by_1",
                                        "typeString": "int_const 15"
                                      },
                                      "value": "0xf"
                                    },
                                    "src": "2105:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2096:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "src": "2084:33:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "id": 1286,
                              "nodeType": "ExpressionStatement",
                              "src": "2084:33:10"
                            },
                            {
                              "expression": {
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1287,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1233,
                                  "src": "2131:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": ">>=",
                                "rightHandSide": {
                                  "hexValue": "34",
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2141:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "2131:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1290,
                              "nodeType": "ExpressionStatement",
                              "src": "2131:11:10"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1271,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "2058:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2062:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2058:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1292,
                        "initializationExpression": {
                          "assignments": [1264],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1264,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2038:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 1292,
                              "src": "2030:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1263,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2030:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1270,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2042:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1266,
                                "name": "length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "2046:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2042:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2055:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2042:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2030:26:10"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": true,
                            "src": "2065:3:10",
                            "subExpression": {
                              "id": 1274,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "2067:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1276,
                          "nodeType": "ExpressionStatement",
                          "src": "2065:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "2025:128:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1294,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1233,
                                "src": "2170:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2179:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2170:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2182:34:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                "typeString": "literal_string \"Strings: hex length insufficient\""
                              },
                              "value": "Strings: hex length insufficient"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                                "typeString": "literal_string \"Strings: hex length insufficient\""
                              }
                            ],
                            "id": 1293,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2162:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2162:55:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "ExpressionStatement",
                        "src": "2162:55:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1302,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1241,
                              "src": "2241:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2234:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1300,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2234:6:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2234:14:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1239,
                        "id": 1304,
                        "nodeType": "Return",
                        "src": "2227:21:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1231,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:112:10",
                    "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
                  },
                  "id": 1306,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "1827:11:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1233,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1847:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1306,
                        "src": "1839:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1235,
                        "mutability": "mutable",
                        "name": "length",
                        "nameLocation": "1862:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1306,
                        "src": "1854:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1854:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:10"
                  },
                  "returnParameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1306,
                        "src": "1893:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:15:10"
                  },
                  "scope": 1352,
                  "src": "1818:437:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1325,
                    "nodeType": "Block",
                    "src": "2480:76:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1319,
                                      "name": "addr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1309,
                                      "src": "2525:4:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2517:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint160_$",
                                      "typeString": "type(uint160)"
                                    },
                                    "typeName": {
                                      "id": 1317,
                                      "name": "uint160",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2517:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2517:13:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                ],
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2509:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1315,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2509:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2509:22:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1322,
                              "name": "_ADDRESS_LENGTH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "2533:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 1314,
                            "name": "toHexString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1230, 1306, 1326],
                            "referencedDeclaration": 1306,
                            "src": "2497:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256,uint256) pure returns (string memory)"
                            }
                          },
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2497:52:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1313,
                        "id": 1324,
                        "nodeType": "Return",
                        "src": "2490:59:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1307,
                    "nodeType": "StructuredDocumentation",
                    "src": "2261:141:10",
                    "text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
                  },
                  "id": 1326,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toHexString",
                  "nameLocation": "2416:11:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "2436:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1326,
                        "src": "2428:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2428:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2427:14:10"
                  },
                  "returnParameters": {
                    "id": 1313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1312,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1326,
                        "src": "2465:13:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2465:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2464:15:10"
                  },
                  "scope": 1352,
                  "src": "2407:149:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1350,
                    "nodeType": "Block",
                    "src": "2711:66:10",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1339,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1329,
                                    "src": "2744:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2738:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1337,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2738:5:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2738:8:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1336,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2728:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2728:19:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1345,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1331,
                                    "src": "2767:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2761:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1343,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2761:5:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2761:8:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1342,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "2751:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2751:19:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2728:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1335,
                        "id": 1349,
                        "nodeType": "Return",
                        "src": "2721:49:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1327,
                    "nodeType": "StructuredDocumentation",
                    "src": "2562:66:10",
                    "text": " @dev Returns true if the two strings are equal."
                  },
                  "id": 1351,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "equal",
                  "nameLocation": "2642:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1329,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2662:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1351,
                        "src": "2648:15:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1328,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2648:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2679:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1351,
                        "src": "2665:15:10",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2665:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2647:34:10"
                  },
                  "returnParameters": {
                    "id": 1335,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1334,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1351,
                        "src": "2705:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2704:6:10"
                  },
                  "scope": 1352,
                  "src": "2633:144:10",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1353,
              "src": "220:2559:10",
              "usedErrors": []
            }
          ],
          "src": "101:2679:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
          "exportedSymbols": {
            "ECDSA": [1718],
            "Math": [2584],
            "SignedMath": [2689],
            "Strings": [1352]
          },
          "id": 1719,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1354,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "112:23:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
              "file": "../Strings.sol",
              "id": 1355,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1719,
              "sourceUnit": 1353,
              "src": "137:24:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ECDSA",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1356,
                "nodeType": "StructuredDocumentation",
                "src": "163:205:11",
                "text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
              },
              "fullyImplemented": true,
              "id": 1718,
              "linearizedBaseContracts": [1718],
              "name": "ECDSA",
              "nameLocation": "377:5:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ECDSA.RecoverError",
                  "id": 1362,
                  "members": [
                    {
                      "id": 1357,
                      "name": "NoError",
                      "nameLocation": "417:7:11",
                      "nodeType": "EnumValue",
                      "src": "417:7:11"
                    },
                    {
                      "id": 1358,
                      "name": "InvalidSignature",
                      "nameLocation": "434:16:11",
                      "nodeType": "EnumValue",
                      "src": "434:16:11"
                    },
                    {
                      "id": 1359,
                      "name": "InvalidSignatureLength",
                      "nameLocation": "460:22:11",
                      "nodeType": "EnumValue",
                      "src": "460:22:11"
                    },
                    {
                      "id": 1360,
                      "name": "InvalidSignatureS",
                      "nameLocation": "492:17:11",
                      "nodeType": "EnumValue",
                      "src": "492:17:11"
                    },
                    {
                      "id": 1361,
                      "name": "InvalidSignatureV",
                      "nameLocation": "519:17:11",
                      "nodeType": "EnumValue",
                      "src": "519:17:11"
                    }
                  ],
                  "name": "RecoverError",
                  "nameLocation": "394:12:11",
                  "nodeType": "EnumDefinition",
                  "src": "389:175:11"
                },
                {
                  "body": {
                    "id": 1405,
                    "nodeType": "Block",
                    "src": "624:457:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RecoverError_$1362",
                            "typeString": "enum ECDSA.RecoverError"
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1368,
                            "name": "error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1365,
                            "src": "638:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$1362",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1369,
                              "name": "RecoverError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1362,
                              "src": "647:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                "typeString": "type(enum ECDSA.RecoverError)"
                              }
                            },
                            "id": 1370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "660:7:11",
                            "memberName": "NoError",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1357,
                            "src": "647:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$1362",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "src": "638:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_RecoverError_$1362",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "id": 1377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1374,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1365,
                              "src": "734:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1375,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1362,
                                "src": "743:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 1376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "756:16:11",
                              "memberName": "InvalidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1358,
                              "src": "743:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "src": "734:38:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              "id": 1386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1383,
                                "name": "error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1365,
                                "src": "843:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$1362",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1384,
                                  "name": "RecoverError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1362,
                                  "src": "852:12:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                    "typeString": "type(enum ECDSA.RecoverError)"
                                  }
                                },
                                "id": 1385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "865:22:11",
                                "memberName": "InvalidSignatureLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1359,
                                "src": "852:35:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$1362",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "src": "843:44:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_RecoverError_$1362",
                                  "typeString": "enum ECDSA.RecoverError"
                                },
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1392,
                                  "name": "error",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1365,
                                  "src": "965:5:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$1362",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1393,
                                    "name": "RecoverError",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1362,
                                    "src": "974:12:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                      "typeString": "type(enum ECDSA.RecoverError)"
                                    }
                                  },
                                  "id": 1394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "987:17:11",
                                  "memberName": "InvalidSignatureS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1360,
                                  "src": "974:30:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$1362",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "src": "965:39:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1401,
                              "nodeType": "IfStatement",
                              "src": "961:114:11",
                              "trueBody": {
                                "id": 1400,
                                "nodeType": "Block",
                                "src": "1006:69:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
                                          "id": 1397,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1027:36:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                            "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                                          },
                                          "value": "ECDSA: invalid signature 's' value"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
                                            "typeString": "literal_string \"ECDSA: invalid signature 's' value\""
                                          }
                                        ],
                                        "id": 1396,
                                        "name": "revert",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [-19, -19],
                                        "referencedDeclaration": -19,
                                        "src": "1020:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (string memory) pure"
                                        }
                                      },
                                      "id": 1398,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1020:44:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1399,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1020:44:11"
                                  }
                                ]
                              }
                            },
                            "id": 1402,
                            "nodeType": "IfStatement",
                            "src": "839:236:11",
                            "trueBody": {
                              "id": 1391,
                              "nodeType": "Block",
                              "src": "889:66:11",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                                        "id": 1388,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "910:33:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                          "typeString": "literal_string \"ECDSA: invalid signature length\""
                                        },
                                        "value": "ECDSA: invalid signature length"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
                                          "typeString": "literal_string \"ECDSA: invalid signature length\""
                                        }
                                      ],
                                      "id": 1387,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [-19, -19],
                                      "referencedDeclaration": -19,
                                      "src": "903:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 1389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "903:41:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1390,
                                  "nodeType": "ExpressionStatement",
                                  "src": "903:41:11"
                                }
                              ]
                            }
                          },
                          "id": 1403,
                          "nodeType": "IfStatement",
                          "src": "730:345:11",
                          "trueBody": {
                            "id": 1382,
                            "nodeType": "Block",
                            "src": "774:59:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                                      "id": 1379,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "795:26:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                        "typeString": "literal_string \"ECDSA: invalid signature\""
                                      },
                                      "value": "ECDSA: invalid signature"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
                                        "typeString": "literal_string \"ECDSA: invalid signature\""
                                      }
                                    ],
                                    "id": 1378,
                                    "name": "revert",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [-19, -19],
                                    "referencedDeclaration": -19,
                                    "src": "788:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (string memory) pure"
                                    }
                                  },
                                  "id": 1380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "788:34:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1381,
                                "nodeType": "ExpressionStatement",
                                "src": "788:34:11"
                              }
                            ]
                          }
                        },
                        "id": 1404,
                        "nodeType": "IfStatement",
                        "src": "634:441:11",
                        "trueBody": {
                          "id": 1373,
                          "nodeType": "Block",
                          "src": "669:55:11",
                          "statements": [
                            {
                              "functionReturnParameters": 1367,
                              "id": 1372,
                              "nodeType": "Return",
                              "src": "683:7:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1406,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_throwError",
                  "nameLocation": "579:11:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "error",
                        "nameLocation": "604:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "591:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$1362",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 1364,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1363,
                            "name": "RecoverError",
                            "nameLocations": ["591:12:11"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1362,
                            "src": "591:12:11"
                          },
                          "referencedDeclaration": 1362,
                          "src": "591:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$1362",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "590:20:11"
                  },
                  "returnParameters": {
                    "id": 1367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "624:0:11"
                  },
                  "scope": 1718,
                  "src": "570:511:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1451,
                    "nodeType": "Block",
                    "src": "2249:626:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1419,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "2263:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2273:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2263:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2283:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "2263:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1449,
                          "nodeType": "Block",
                          "src": "2788:81:11",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1443,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2818:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1442,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2810:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1441,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2810:7:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1444,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2810:10:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1445,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1362,
                                      "src": "2822:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 1446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2835:22:11",
                                    "memberName": "InvalidSignatureLength",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1359,
                                    "src": "2822:35:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$1362",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  }
                                ],
                                "id": 1447,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2809:49:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 1418,
                              "id": 1448,
                              "nodeType": "Return",
                              "src": "2802:56:11"
                            }
                          ]
                        },
                        "id": 1450,
                        "nodeType": "IfStatement",
                        "src": "2259:610:11",
                        "trueBody": {
                          "id": 1440,
                          "nodeType": "Block",
                          "src": "2287:495:11",
                          "statements": [
                            {
                              "assignments": [1424],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1424,
                                  "mutability": "mutable",
                                  "name": "r",
                                  "nameLocation": "2309:1:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1440,
                                  "src": "2301:9:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 1423,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2301:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1425,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2301:9:11"
                            },
                            {
                              "assignments": [1427],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1427,
                                  "mutability": "mutable",
                                  "name": "s",
                                  "nameLocation": "2332:1:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1440,
                                  "src": "2324:9:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 1426,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2324:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1428,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2324:9:11"
                            },
                            {
                              "assignments": [1430],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1430,
                                  "mutability": "mutable",
                                  "name": "v",
                                  "nameLocation": "2353:1:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1440,
                                  "src": "2347:7:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "typeName": {
                                    "id": 1429,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2347:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1431,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2347:7:11"
                            },
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "2555:171:11",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2573:32:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nodeType": "YulIdentifier",
                                              "src": "2588:9:11"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2599:4:11",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2584:3:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2584:20:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2578:5:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2578:27:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "r",
                                        "nodeType": "YulIdentifier",
                                        "src": "2573:1:11"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2622:32:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nodeType": "YulIdentifier",
                                              "src": "2637:9:11"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2648:4:11",
                                              "type": "",
                                              "value": "0x40"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2633:3:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2633:20:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2627:5:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2627:27:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "s",
                                        "nodeType": "YulIdentifier",
                                        "src": "2622:1:11"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2671:41:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2681:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "signature",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2694:9:11"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2705:4:11",
                                                  "type": "",
                                                  "value": "0x60"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2690:3:11"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2690:20:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2684:5:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2684:27:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "byte",
                                        "nodeType": "YulIdentifier",
                                        "src": "2676:4:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2676:36:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "v",
                                        "nodeType": "YulIdentifier",
                                        "src": "2671:1:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "documentation": "@solidity memory-safe-assembly",
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 1424,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2573:1:11",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1427,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2622:1:11",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1411,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2588:9:11",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1411,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2637:9:11",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1411,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2694:9:11",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1430,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2671:1:11",
                                  "valueSize": 1
                                }
                              ],
                              "id": 1432,
                              "nodeType": "InlineAssembly",
                              "src": "2546:180:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1434,
                                    "name": "hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1409,
                                    "src": "2757:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1435,
                                    "name": "v",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1430,
                                    "src": "2763:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "id": 1436,
                                    "name": "r",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1424,
                                    "src": "2766:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1437,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1427,
                                    "src": "2769:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1433,
                                  "name": "tryRecover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [1452, 1526, 1620],
                                  "referencedDeclaration": 1620,
                                  "src": "2746:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1362_$",
                                    "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                                  }
                                },
                                "id": 1438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2746:25:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 1418,
                              "id": 1439,
                              "nodeType": "Return",
                              "src": "2739:32:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1407,
                    "nodeType": "StructuredDocumentation",
                    "src": "1087:1053:11",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
                  },
                  "id": 1452,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "2154:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1409,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "2173:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "2165:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1408,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2165:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1411,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "2192:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "2179:22:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2179:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2164:38:11"
                  },
                  "returnParameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1414,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "2226:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2226:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1452,
                        "src": "2235:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$1362",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 1416,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1415,
                            "name": "RecoverError",
                            "nameLocations": ["2235:12:11"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1362,
                            "src": "2235:12:11"
                          },
                          "referencedDeclaration": 1362,
                          "src": "2235:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$1362",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2225:23:11"
                  },
                  "scope": 1718,
                  "src": "2145:730:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1478,
                    "nodeType": "Block",
                    "src": "3748:140:11",
                    "statements": [
                      {
                        "assignments": [1463, 1466],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1463,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "3767:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1478,
                            "src": "3759:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3759:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1466,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "3791:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1478,
                            "src": "3778:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$1362",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 1465,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1464,
                                "name": "RecoverError",
                                "nameLocations": ["3778:12:11"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1362,
                                "src": "3778:12:11"
                              },
                              "referencedDeclaration": 1362,
                              "src": "3778:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1471,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1468,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1455,
                              "src": "3811:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1469,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1457,
                              "src": "3817:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1467,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1452, 1526, 1620],
                            "referencedDeclaration": 1452,
                            "src": "3800:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1362_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3800:27:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3758:69:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1473,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1466,
                              "src": "3849:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            ],
                            "id": 1472,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "3837:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1362_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError) pure"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3837:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1475,
                        "nodeType": "ExpressionStatement",
                        "src": "3837:18:11"
                      },
                      {
                        "expression": {
                          "id": 1476,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1463,
                          "src": "3872:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1461,
                        "id": 1477,
                        "nodeType": "Return",
                        "src": "3865:16:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1453,
                    "nodeType": "StructuredDocumentation",
                    "src": "2881:775:11",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
                  },
                  "id": 1479,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "3670:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1455,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "3686:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1479,
                        "src": "3678:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1454,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3678:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1457,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "3705:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1479,
                        "src": "3692:22:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1456,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3692:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3677:38:11"
                  },
                  "returnParameters": {
                    "id": 1461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1479,
                        "src": "3739:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3739:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3738:9:11"
                  },
                  "scope": 1718,
                  "src": "3661:227:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1525,
                    "nodeType": "Block",
                    "src": "4245:203:11",
                    "statements": [
                      {
                        "assignments": [1495],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1495,
                            "mutability": "mutable",
                            "name": "s",
                            "nameLocation": "4263:1:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1525,
                            "src": "4255:9:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1494,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4255:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1502,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1496,
                            "name": "vs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "4267:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                                "id": 1499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4280:66:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9967"
                                },
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                  "typeString": "int_const 5789...(69 digits omitted)...9967"
                                }
                              ],
                              "id": 1498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4272:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 1497,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "4272:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4272:75:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4267:80:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4255:92:11"
                      },
                      {
                        "assignments": [1504],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1504,
                            "mutability": "mutable",
                            "name": "v",
                            "nameLocation": "4363:1:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1525,
                            "src": "4357:7:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 1503,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4357:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1517,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1512,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 1509,
                                          "name": "vs",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1486,
                                          "src": "4382:2:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 1508,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4374:7:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 1507,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4374:7:11",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1510,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4374:11:11",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">>",
                                    "rightExpression": {
                                      "hexValue": "323535",
                                      "id": 1511,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4389:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_255_by_1",
                                        "typeString": "int_const 255"
                                      },
                                      "value": "255"
                                    },
                                    "src": "4374:18:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1513,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4373:20:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "3237",
                                "id": 1514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4396:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_27_by_1",
                                  "typeString": "int_const 27"
                                },
                                "value": "27"
                              },
                              "src": "4373:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4367:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 1505,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4367:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4367:32:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4357:42:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1519,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1482,
                              "src": "4427:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1520,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1504,
                              "src": "4433:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1521,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1484,
                              "src": "4436:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1522,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "4439:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1518,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1452, 1526, 1620],
                            "referencedDeclaration": 1620,
                            "src": "4416:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1362_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4416:25:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "functionReturnParameters": 1493,
                        "id": 1524,
                        "nodeType": "Return",
                        "src": "4409:32:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1480,
                    "nodeType": "StructuredDocumentation",
                    "src": "3894:243:11",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
                  },
                  "id": 1526,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "4151:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4170:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "4162:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4162:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1484,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4184:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "4176:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4176:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1486,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "4195:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "4187:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4187:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4161:37:11"
                  },
                  "returnParameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1489,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "4222:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4222:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "4231:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$1362",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 1491,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1490,
                            "name": "RecoverError",
                            "nameLocations": ["4231:12:11"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1362,
                            "src": "4231:12:11"
                          },
                          "referencedDeclaration": 1362,
                          "src": "4231:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$1362",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4221:23:11"
                  },
                  "scope": 1718,
                  "src": "4142:306:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1555,
                    "nodeType": "Block",
                    "src": "4699:136:11",
                    "statements": [
                      {
                        "assignments": [1539, 1542],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1539,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "4718:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1555,
                            "src": "4710:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1538,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4710:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1542,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "4742:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1555,
                            "src": "4729:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$1362",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 1541,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1540,
                                "name": "RecoverError",
                                "nameLocations": ["4729:12:11"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1362,
                                "src": "4729:12:11"
                              },
                              "referencedDeclaration": 1362,
                              "src": "4729:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1548,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1544,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1529,
                              "src": "4762:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1545,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1531,
                              "src": "4768:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1546,
                              "name": "vs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1533,
                              "src": "4771:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1543,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1452, 1526, 1620],
                            "referencedDeclaration": 1526,
                            "src": "4751:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1362_$",
                              "typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4751:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4709:65:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1550,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1542,
                              "src": "4796:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            ],
                            "id": 1549,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "4784:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1362_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError) pure"
                            }
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4784:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1552,
                        "nodeType": "ExpressionStatement",
                        "src": "4784:18:11"
                      },
                      {
                        "expression": {
                          "id": 1553,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "4819:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1537,
                        "id": 1554,
                        "nodeType": "Return",
                        "src": "4812:16:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1527,
                    "nodeType": "StructuredDocumentation",
                    "src": "4454:154:11",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
                  },
                  "id": 1556,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "4622:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1529,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4638:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1556,
                        "src": "4630:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1528,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4630:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1531,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4652:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1556,
                        "src": "4644:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "4663:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1556,
                        "src": "4655:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4655:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4629:37:11"
                  },
                  "returnParameters": {
                    "id": 1537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1536,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1556,
                        "src": "4690:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4690:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4689:9:11"
                  },
                  "scope": 1718,
                  "src": "4613:222:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1619,
                    "nodeType": "Block",
                    "src": "5120:1345:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1575,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1565,
                                "src": "6016:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6008:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1573,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6008:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6008:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                            "id": 1577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6021:66:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                              "typeString": "int_const 5789...(69 digits omitted)...7168"
                            },
                            "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                          },
                          "src": "6008:79:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1588,
                        "nodeType": "IfStatement",
                        "src": "6004:161:11",
                        "trueBody": {
                          "id": 1587,
                          "nodeType": "Block",
                          "src": "6089:76:11",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1581,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6119:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1580,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6111:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1579,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6111:7:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6111:10:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1583,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1362,
                                      "src": "6123:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 1584,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6136:17:11",
                                    "memberName": "InvalidSignatureS",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1360,
                                    "src": "6123:30:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$1362",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  }
                                ],
                                "id": 1585,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6110:44:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 1572,
                              "id": 1586,
                              "nodeType": "Return",
                              "src": "6103:51:11"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [1590],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1590,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "6267:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1619,
                            "src": "6259:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6259:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1597,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1592,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1559,
                              "src": "6286:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1593,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1561,
                              "src": "6292:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1594,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1563,
                              "src": "6295:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1595,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1565,
                              "src": "6298:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1591,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "6276:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6276:24:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6259:41:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1598,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1590,
                            "src": "6314:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6332:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6324:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1599,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6324:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6324:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6314:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1613,
                        "nodeType": "IfStatement",
                        "src": "6310:101:11",
                        "trueBody": {
                          "id": 1612,
                          "nodeType": "Block",
                          "src": "6336:75:11",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1606,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6366:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1605,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6358:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1604,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6358:7:11",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1607,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6358:10:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1608,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1362,
                                      "src": "6370:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 1609,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6383:16:11",
                                    "memberName": "InvalidSignature",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1358,
                                    "src": "6370:29:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$1362",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  }
                                ],
                                "id": 1610,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6357:43:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError)"
                                }
                              },
                              "functionReturnParameters": 1572,
                              "id": 1611,
                              "nodeType": "Return",
                              "src": "6350:50:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 1614,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "6429:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1615,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1362,
                                "src": "6437:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$1362_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 1616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6450:7:11",
                              "memberName": "NoError",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1357,
                              "src": "6437:20:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "id": 1617,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6428:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "functionReturnParameters": 1572,
                        "id": 1618,
                        "nodeType": "Return",
                        "src": "6421:37:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1557,
                    "nodeType": "StructuredDocumentation",
                    "src": "4841:163:11",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
                  },
                  "id": 1620,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "5018:10:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1559,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "5037:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "5029:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1558,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5029:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1561,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "5049:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "5043:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1560,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5043:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1563,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "5060:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "5052:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1562,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5052:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1565,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "5071:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "5063:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1564,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5063:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5028:45:11"
                  },
                  "returnParameters": {
                    "id": 1572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1568,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "5097:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5097:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "5106:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$1362",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 1570,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1569,
                            "name": "RecoverError",
                            "nameLocations": ["5106:12:11"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1362,
                            "src": "5106:12:11"
                          },
                          "referencedDeclaration": 1362,
                          "src": "5106:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$1362",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5096:23:11"
                  },
                  "scope": 1718,
                  "src": "5009:1456:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1652,
                    "nodeType": "Block",
                    "src": "6692:138:11",
                    "statements": [
                      {
                        "assignments": [1635, 1638],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1635,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "6711:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1652,
                            "src": "6703:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1634,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6703:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1638,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "6735:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1652,
                            "src": "6722:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$1362",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 1637,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1636,
                                "name": "RecoverError",
                                "nameLocations": ["6722:12:11"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1362,
                                "src": "6722:12:11"
                              },
                              "referencedDeclaration": 1362,
                              "src": "6722:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1645,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1640,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1623,
                              "src": "6755:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1641,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "6761:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1642,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1627,
                              "src": "6764:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1643,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6767:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1639,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1452, 1526, 1620],
                            "referencedDeclaration": 1620,
                            "src": "6744:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1362_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6744:25:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1362_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6702:67:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1647,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "6791:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$1362",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            ],
                            "id": 1646,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "6779:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1362_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError) pure"
                            }
                          },
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6779:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1649,
                        "nodeType": "ExpressionStatement",
                        "src": "6779:18:11"
                      },
                      {
                        "expression": {
                          "id": 1650,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1635,
                          "src": "6814:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1633,
                        "id": 1651,
                        "nodeType": "Return",
                        "src": "6807:16:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1621,
                    "nodeType": "StructuredDocumentation",
                    "src": "6471:122:11",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 1653,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "6607:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1623,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "6623:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1653,
                        "src": "6615:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1622,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6615:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "6635:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1653,
                        "src": "6629:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6629:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "6646:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1653,
                        "src": "6638:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6638:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1629,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "6657:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1653,
                        "src": "6649:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6649:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6614:45:11"
                  },
                  "returnParameters": {
                    "id": 1633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1632,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1653,
                        "src": "6683:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1631,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6683:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6682:9:11"
                  },
                  "scope": 1718,
                  "src": "6598:232:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1662,
                    "nodeType": "Block",
                    "src": "7206:310:11",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "7362:148:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7383:4:11",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7389:34:11",
                                    "type": "",
                                    "value": "\u0019Ethereum Signed Message:\n32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7376:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7376:48:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7376:48:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7444:4:11",
                                    "type": "",
                                    "value": "0x1c"
                                  },
                                  {
                                    "name": "hash",
                                    "nodeType": "YulIdentifier",
                                    "src": "7450:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7437:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7437:18:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7437:18:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7468:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7489:4:11",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7495:4:11",
                                    "type": "",
                                    "value": "0x3c"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "7479:9:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7479:21:11"
                              },
                              "variableNames": [
                                {
                                  "name": "message",
                                  "nodeType": "YulIdentifier",
                                  "src": "7468:7:11"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1656,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7450:4:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1659,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7468:7:11",
                            "valueSize": 1
                          }
                        ],
                        "id": 1661,
                        "nodeType": "InlineAssembly",
                        "src": "7353:157:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1654,
                    "nodeType": "StructuredDocumentation",
                    "src": "6836:279:11",
                    "text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
                  },
                  "id": 1663,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toEthSignedMessageHash",
                  "nameLocation": "7129:22:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1657,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1656,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "7160:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1663,
                        "src": "7152:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1655,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7152:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7151:14:11"
                  },
                  "returnParameters": {
                    "id": 1660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1659,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "7197:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1663,
                        "src": "7189:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1658,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7189:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7188:17:11"
                  },
                  "scope": 1718,
                  "src": "7120:396:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1684,
                    "nodeType": "Block",
                    "src": "7881:116:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
                                  "id": 1674,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7925:32:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n"
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1677,
                                        "name": "s",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1666,
                                        "src": "7976:1:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1678,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "7978:6:11",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "7976:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1675,
                                      "name": "Strings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1352,
                                      "src": "7959:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Strings_$1352_$",
                                        "typeString": "type(library Strings)"
                                      }
                                    },
                                    "id": 1676,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7967:8:11",
                                    "memberName": "toString",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1182,
                                    "src": "7959:16:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1679,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7959:26:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 1680,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1666,
                                  "src": "7987:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1672,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7908:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7912:12:11",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "7908:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7908:81:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1671,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "7898:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7898:92:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1670,
                        "id": 1683,
                        "nodeType": "Return",
                        "src": "7891:99:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1664,
                    "nodeType": "StructuredDocumentation",
                    "src": "7522:274:11",
                    "text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
                  },
                  "id": 1685,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toEthSignedMessageHash",
                  "nameLocation": "7810:22:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1666,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "7846:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1685,
                        "src": "7833:14:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7833:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7832:16:11"
                  },
                  "returnParameters": {
                    "id": 1670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1669,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1685,
                        "src": "7872:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1668,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7872:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7871:9:11"
                  },
                  "scope": 1718,
                  "src": "7801:196:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1696,
                    "nodeType": "Block",
                    "src": "8443:290:11",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "8505:222:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8519:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8536:4:11",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8530:5:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8530:11:11"
                              },
                              "variables": [
                                {
                                  "name": "ptr",
                                  "nodeType": "YulTypedName",
                                  "src": "8523:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8561:3:11"
                                  },
                                  {
                                    "hexValue": "1901",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8566:10:11",
                                    "type": "",
                                    "value": "\u0019\u0001"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8554:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8554:23:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8554:23:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8601:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8606:4:11",
                                        "type": "",
                                        "value": "0x02"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8597:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8597:14:11"
                                  },
                                  {
                                    "name": "domainSeparator",
                                    "nodeType": "YulIdentifier",
                                    "src": "8613:15:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8590:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8590:39:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8590:39:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8653:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8658:4:11",
                                        "type": "",
                                        "value": "0x22"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8649:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8649:14:11"
                                  },
                                  {
                                    "name": "structHash",
                                    "nodeType": "YulIdentifier",
                                    "src": "8665:10:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8642:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8642:34:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8642:34:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8689:28:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8707:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8712:4:11",
                                    "type": "",
                                    "value": "0x42"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "8697:9:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8697:20:11"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8689:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1693,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8689:4:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1688,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8613:15:11",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1690,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8665:10:11",
                            "valueSize": 1
                          }
                        ],
                        "id": 1695,
                        "nodeType": "InlineAssembly",
                        "src": "8496:231:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1686,
                    "nodeType": "StructuredDocumentation",
                    "src": "8003:328:11",
                    "text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
                  },
                  "id": 1697,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toTypedDataHash",
                  "nameLocation": "8345:15:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1688,
                        "mutability": "mutable",
                        "name": "domainSeparator",
                        "nameLocation": "8369:15:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "8361:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1687,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8361:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1690,
                        "mutability": "mutable",
                        "name": "structHash",
                        "nameLocation": "8394:10:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "8386:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1689,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8386:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8360:45:11"
                  },
                  "returnParameters": {
                    "id": 1694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1693,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "8437:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "8429:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1692,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8429:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8428:14:11"
                  },
                  "scope": 1718,
                  "src": "8336:397:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1716,
                    "nodeType": "Block",
                    "src": "9048:80:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1900",
                                  "id": 1710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9092:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
                                    "typeString": "literal_string hex\"1900\""
                                  },
                                  "value": "\u0019\u0000"
                                },
                                {
                                  "id": 1711,
                                  "name": "validator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1700,
                                  "src": "9104:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1712,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1702,
                                  "src": "9115:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
                                    "typeString": "literal_string hex\"1900\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1708,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9075:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "9079:12:11",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9075:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9075:45:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1707,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "9065:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9065:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1706,
                        "id": 1715,
                        "nodeType": "Return",
                        "src": "9058:63:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1698,
                    "nodeType": "StructuredDocumentation",
                    "src": "8739:193:11",
                    "text": " @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."
                  },
                  "id": 1717,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toDataWithIntendedValidatorHash",
                  "nameLocation": "8946:31:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1700,
                        "mutability": "mutable",
                        "name": "validator",
                        "nameLocation": "8986:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1717,
                        "src": "8978:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1699,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8978:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1702,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9010:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1717,
                        "src": "8997:17:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1701,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8997:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8977:38:11"
                  },
                  "returnParameters": {
                    "id": 1706,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1705,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1717,
                        "src": "9039:7:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1704,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9039:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9038:9:11"
                  },
                  "scope": 1718,
                  "src": "8937:191:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1719,
              "src": "369:8761:11",
              "usedErrors": []
            }
          ],
          "src": "112:9019:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/utils/math/Math.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
          "exportedSymbols": { "Math": [2584] },
          "id": 2585,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1720,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "103:23:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Math",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1721,
                "nodeType": "StructuredDocumentation",
                "src": "128:73:12",
                "text": " @dev Standard math utilities missing in the Solidity language."
              },
              "fullyImplemented": true,
              "id": 2584,
              "linearizedBaseContracts": [2584],
              "name": "Math",
              "nameLocation": "210:4:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Math.Rounding",
                  "id": 1725,
                  "members": [
                    {
                      "id": 1722,
                      "name": "Down",
                      "nameLocation": "245:4:12",
                      "nodeType": "EnumValue",
                      "src": "245:4:12"
                    },
                    {
                      "id": 1723,
                      "name": "Up",
                      "nameLocation": "287:2:12",
                      "nodeType": "EnumValue",
                      "src": "287:2:12"
                    },
                    {
                      "id": 1724,
                      "name": "Zero",
                      "nameLocation": "318:4:12",
                      "nodeType": "EnumValue",
                      "src": "318:4:12"
                    }
                  ],
                  "name": "Rounding",
                  "nameLocation": "226:8:12",
                  "nodeType": "EnumDefinition",
                  "src": "221:122:12"
                },
                {
                  "body": {
                    "id": 1742,
                    "nodeType": "Block",
                    "src": "480:37:12",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1735,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1728,
                              "src": "497:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1736,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1730,
                              "src": "501:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "497:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 1739,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1730,
                            "src": "509:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "497:13:12",
                          "trueExpression": {
                            "id": 1738,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "505:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1734,
                        "id": 1741,
                        "nodeType": "Return",
                        "src": "490:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1726,
                    "nodeType": "StructuredDocumentation",
                    "src": "349:59:12",
                    "text": " @dev Returns the largest of two numbers."
                  },
                  "id": 1743,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "max",
                  "nameLocation": "422:3:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1731,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1728,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "434:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "426:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1727,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1730,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "445:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "437:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1729,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "437:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "425:22:12"
                  },
                  "returnParameters": {
                    "id": 1734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1733,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "471:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1732,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "471:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "470:9:12"
                  },
                  "scope": 2584,
                  "src": "413:104:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1760,
                    "nodeType": "Block",
                    "src": "655:37:12",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1753,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1746,
                              "src": "672:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1754,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1748,
                              "src": "676:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "672:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 1757,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1748,
                            "src": "684:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "672:13:12",
                          "trueExpression": {
                            "id": 1756,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1746,
                            "src": "680:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1752,
                        "id": 1759,
                        "nodeType": "Return",
                        "src": "665:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1744,
                    "nodeType": "StructuredDocumentation",
                    "src": "523:60:12",
                    "text": " @dev Returns the smallest of two numbers."
                  },
                  "id": 1761,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "min",
                  "nameLocation": "597:3:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1749,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1746,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "609:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1761,
                        "src": "601:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "601:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1748,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "620:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1761,
                        "src": "612:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "612:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "600:22:12"
                  },
                  "returnParameters": {
                    "id": 1752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1751,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1761,
                        "src": "646:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1750,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "646:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "645:9:12"
                  },
                  "scope": 2584,
                  "src": "588:104:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1783,
                    "nodeType": "Block",
                    "src": "876:82:12",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1771,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1764,
                                  "src": "931:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "id": 1772,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1766,
                                  "src": "935:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "931:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1774,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "930:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1777,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1775,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1764,
                                    "src": "941:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "^",
                                  "rightExpression": {
                                    "id": 1776,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1766,
                                    "src": "945:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "941:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1778,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "940:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "950:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "940:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "930:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1770,
                        "id": 1782,
                        "nodeType": "Return",
                        "src": "923:28:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1762,
                    "nodeType": "StructuredDocumentation",
                    "src": "698:102:12",
                    "text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
                  },
                  "id": 1784,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "average",
                  "nameLocation": "814:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1764,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "830:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "822:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1766,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "841:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "833:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1765,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "833:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:22:12"
                  },
                  "returnParameters": {
                    "id": 1770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1769,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "867:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "866:9:12"
                  },
                  "scope": 2584,
                  "src": "805:153:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1808,
                    "nodeType": "Block",
                    "src": "1228:123:12",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1794,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1787,
                              "src": "1316:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1321:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1316:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1798,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1787,
                                      "src": "1330:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1799,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1334:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "1330:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1801,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1329:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1802,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1789,
                                "src": "1339:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1329:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1343:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1329:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "1316:28:12",
                          "trueExpression": {
                            "hexValue": "30",
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1325:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1793,
                        "id": 1807,
                        "nodeType": "Return",
                        "src": "1309:35:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1785,
                    "nodeType": "StructuredDocumentation",
                    "src": "964:188:12",
                    "text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
                  },
                  "id": 1809,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ceilDiv",
                  "nameLocation": "1166:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1787,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1182:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1809,
                        "src": "1174:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1786,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1174:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1789,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1193:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1809,
                        "src": "1185:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1788,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1173:22:12"
                  },
                  "returnParameters": {
                    "id": 1793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1809,
                        "src": "1219:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1219:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1218:9:12"
                  },
                  "scope": 2584,
                  "src": "1157:194:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1931,
                    "nodeType": "Block",
                    "src": "1765:4115:12",
                    "statements": [
                      {
                        "id": 1930,
                        "nodeType": "UncheckedBlock",
                        "src": "1775:4099:12",
                        "statements": [
                          {
                            "assignments": [1822],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1822,
                                "mutability": "mutable",
                                "name": "prod0",
                                "nameLocation": "2104:5:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 1930,
                                "src": "2096:13:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1821,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2096:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1823,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2096:13:12"
                          },
                          {
                            "assignments": [1825],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1825,
                                "mutability": "mutable",
                                "name": "prod1",
                                "nameLocation": "2176:5:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 1930,
                                "src": "2168:13:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1824,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2168:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1826,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2168:13:12"
                          },
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "2248:157:12",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2266:30:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "2283:1:12"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "2286:1:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2293:1:12",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "2289:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2289:6:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "2276:6:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2276:20:12"
                                  },
                                  "variables": [
                                    {
                                      "name": "mm",
                                      "nodeType": "YulTypedName",
                                      "src": "2270:2:12",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2313:18:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "2326:1:12"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "2329:1:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "2322:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2322:9:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "prod0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2313:5:12"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2348:43:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "mm",
                                            "nodeType": "YulIdentifier",
                                            "src": "2365:2:12"
                                          },
                                          {
                                            "name": "prod0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2369:5:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2361:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2361:14:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "mm",
                                            "nodeType": "YulIdentifier",
                                            "src": "2380:2:12"
                                          },
                                          {
                                            "name": "prod0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2384:5:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "2377:2:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2377:13:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2357:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2357:34:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "prod1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2348:5:12"
                                    }
                                  ]
                                }
                              ]
                            },
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2313:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2369:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2384:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1825,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2348:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1812,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2283:1:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1812,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2326:1:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1814,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2286:1:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1814,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "2329:1:12",
                                "valueSize": 1
                              }
                            ],
                            "id": 1827,
                            "nodeType": "InlineAssembly",
                            "src": "2239:166:12"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1828,
                                "name": "prod1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1825,
                                "src": "2486:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2495:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2486:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1836,
                            "nodeType": "IfStatement",
                            "src": "2482:368:12",
                            "trueBody": {
                              "id": 1835,
                              "nodeType": "Block",
                              "src": "2498:352:12",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1833,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1831,
                                      "name": "prod0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1822,
                                      "src": "2816:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 1832,
                                      "name": "denominator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1816,
                                      "src": "2824:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2816:19:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 1820,
                                  "id": 1834,
                                  "nodeType": "Return",
                                  "src": "2809:26:12"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1838,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "2960:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "id": 1839,
                                    "name": "prod1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1825,
                                    "src": "2974:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2960:19:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "4d6174683a206d756c446976206f766572666c6f77",
                                  "id": 1841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2981:23:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
                                    "typeString": "literal_string \"Math: mulDiv overflow\""
                                  },
                                  "value": "Math: mulDiv overflow"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
                                    "typeString": "literal_string \"Math: mulDiv overflow\""
                                  }
                                ],
                                "id": 1837,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [-18, -18],
                                "referencedDeclaration": -18,
                                "src": "2952:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2952:53:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1843,
                            "nodeType": "ExpressionStatement",
                            "src": "2952:53:12"
                          },
                          {
                            "assignments": [1845],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1845,
                                "mutability": "mutable",
                                "name": "remainder",
                                "nameLocation": "3269:9:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 1930,
                                "src": "3261:17:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1844,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3261:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1846,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3261:17:12"
                          },
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "3301:291:12",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3370:38:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "3390:1:12"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "3393:1:12"
                                      },
                                      {
                                        "name": "denominator",
                                        "nodeType": "YulIdentifier",
                                        "src": "3396:11:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "3383:6:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3383:25:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "remainder",
                                      "nodeType": "YulIdentifier",
                                      "src": "3370:9:12"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3490:41:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "prod1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3503:5:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "remainder",
                                            "nodeType": "YulIdentifier",
                                            "src": "3513:9:12"
                                          },
                                          {
                                            "name": "prod0",
                                            "nodeType": "YulIdentifier",
                                            "src": "3524:5:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "gt",
                                          "nodeType": "YulIdentifier",
                                          "src": "3510:2:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3510:20:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3499:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3499:32:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "prod1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3490:5:12"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3548:30:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "prod0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3561:5:12"
                                      },
                                      {
                                        "name": "remainder",
                                        "nodeType": "YulIdentifier",
                                        "src": "3568:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3557:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3557:21:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "prod0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3548:5:12"
                                    }
                                  ]
                                }
                              ]
                            },
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 1816,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3396:11:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3524:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3548:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3561:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1825,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3490:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1825,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3503:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1845,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3370:9:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1845,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3513:9:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1845,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3568:9:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1812,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3390:1:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1814,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "3393:1:12",
                                "valueSize": 1
                              }
                            ],
                            "id": 1847,
                            "nodeType": "InlineAssembly",
                            "src": "3292:300:12"
                          },
                          {
                            "assignments": [1849],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1849,
                                "mutability": "mutable",
                                "name": "twos",
                                "nameLocation": "3907:4:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 1930,
                                "src": "3899:12:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1848,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3899:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1857,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1850,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1816,
                                "src": "3914:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1852,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "~",
                                      "prefix": true,
                                      "src": "3929:12:12",
                                      "subExpression": {
                                        "id": 1851,
                                        "name": "denominator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1816,
                                        "src": "3930:11:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3944:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3929:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1855,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3928:18:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3914:32:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3899:47:12"
                          },
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "3969:362:12",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4034:37:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "denominator",
                                        "nodeType": "YulIdentifier",
                                        "src": "4053:11:12"
                                      },
                                      {
                                        "name": "twos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4066:4:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "4049:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4049:22:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "denominator",
                                      "nodeType": "YulIdentifier",
                                      "src": "4034:11:12"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4138:25:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "prod0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4151:5:12"
                                      },
                                      {
                                        "name": "twos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4158:4:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "4147:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4147:16:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "prod0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4138:5:12"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4278:39:12",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4298:1:12",
                                                "type": "",
                                                "value": "0"
                                              },
                                              {
                                                "name": "twos",
                                                "nodeType": "YulIdentifier",
                                                "src": "4301:4:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "4294:3:12"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4294:12:12"
                                          },
                                          {
                                            "name": "twos",
                                            "nodeType": "YulIdentifier",
                                            "src": "4308:4:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "4290:3:12"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4290:23:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4315:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4286:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4286:31:12"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "twos",
                                      "nodeType": "YulIdentifier",
                                      "src": "4278:4:12"
                                    }
                                  ]
                                }
                              ]
                            },
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 1816,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4034:11:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1816,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4053:11:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4138:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1822,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4151:5:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1849,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4066:4:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1849,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4158:4:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1849,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4278:4:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1849,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4301:4:12",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1849,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "4308:4:12",
                                "valueSize": 1
                              }
                            ],
                            "id": 1858,
                            "nodeType": "InlineAssembly",
                            "src": "3960:371:12"
                          },
                          {
                            "expression": {
                              "id": 1863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1859,
                                "name": "prod0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1822,
                                "src": "4397:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "|=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1860,
                                  "name": "prod1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1825,
                                  "src": "4406:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1861,
                                  "name": "twos",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1849,
                                  "src": "4414:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4406:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4397:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1864,
                            "nodeType": "ExpressionStatement",
                            "src": "4397:21:12"
                          },
                          {
                            "assignments": [1866],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1866,
                                "mutability": "mutable",
                                "name": "inverse",
                                "nameLocation": "4744:7:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 1930,
                                "src": "4736:15:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1865,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4736:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1873,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "33",
                                      "id": 1867,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4755:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1868,
                                      "name": "denominator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1816,
                                      "src": "4759:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4755:15:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1870,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4754:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "^",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4774:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "4754:21:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4736:39:12"
                          },
                          {
                            "expression": {
                              "id": 1880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1874,
                                "name": "inverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1866,
                                "src": "4992:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "*=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5003:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1876,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "5007:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1877,
                                    "name": "inverse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1866,
                                    "src": "5021:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5007:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5003:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4992:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1881,
                            "nodeType": "ExpressionStatement",
                            "src": "4992:36:12"
                          },
                          {
                            "expression": {
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1882,
                                "name": "inverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1866,
                                "src": "5061:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "*=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1883,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5072:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1886,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1884,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "5076:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1885,
                                    "name": "inverse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1866,
                                    "src": "5090:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5076:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5072:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5061:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1889,
                            "nodeType": "ExpressionStatement",
                            "src": "5061:36:12"
                          },
                          {
                            "expression": {
                              "id": 1896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1890,
                                "name": "inverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1866,
                                "src": "5131:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "*=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1891,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5142:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1892,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "5146:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1893,
                                    "name": "inverse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1866,
                                    "src": "5160:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5146:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5142:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5131:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1897,
                            "nodeType": "ExpressionStatement",
                            "src": "5131:36:12"
                          },
                          {
                            "expression": {
                              "id": 1904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1898,
                                "name": "inverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1866,
                                "src": "5201:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "*=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5212:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1900,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "5216:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1901,
                                    "name": "inverse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1866,
                                    "src": "5230:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5216:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5212:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5201:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1905,
                            "nodeType": "ExpressionStatement",
                            "src": "5201:36:12"
                          },
                          {
                            "expression": {
                              "id": 1912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1906,
                                "name": "inverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1866,
                                "src": "5271:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "*=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5282:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1910,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1908,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "5286:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1909,
                                    "name": "inverse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1866,
                                    "src": "5300:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5286:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5282:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5271:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1913,
                            "nodeType": "ExpressionStatement",
                            "src": "5271:36:12"
                          },
                          {
                            "expression": {
                              "id": 1920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1914,
                                "name": "inverse",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1866,
                                "src": "5342:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "*=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5353:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1916,
                                    "name": "denominator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1816,
                                    "src": "5357:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1917,
                                    "name": "inverse",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1866,
                                    "src": "5371:7:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5357:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5353:25:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5342:36:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1921,
                            "nodeType": "ExpressionStatement",
                            "src": "5342:36:12"
                          },
                          {
                            "expression": {
                              "id": 1926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1922,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1819,
                                "src": "5812:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1925,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1923,
                                  "name": "prod0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1822,
                                  "src": "5821:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1924,
                                  "name": "inverse",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1866,
                                  "src": "5829:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5821:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5812:24:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1927,
                            "nodeType": "ExpressionStatement",
                            "src": "5812:24:12"
                          },
                          {
                            "expression": {
                              "id": 1928,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1819,
                              "src": "5857:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1820,
                            "id": 1929,
                            "nodeType": "Return",
                            "src": "5850:13:12"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1810,
                    "nodeType": "StructuredDocumentation",
                    "src": "1357:305:12",
                    "text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
                  },
                  "id": 1932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mulDiv",
                  "nameLocation": "1676:6:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1812,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "1691:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1932,
                        "src": "1683:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1811,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1683:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1814,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "1702:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1932,
                        "src": "1694:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1813,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1694:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1816,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "1713:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1932,
                        "src": "1705:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1815,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1705:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1682:43:12"
                  },
                  "returnParameters": {
                    "id": 1820,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1819,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "1757:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1932,
                        "src": "1749:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1818,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1749:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1748:16:12"
                  },
                  "scope": 2584,
                  "src": "1667:4213:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1975,
                    "nodeType": "Block",
                    "src": "6122:189:12",
                    "statements": [
                      {
                        "assignments": [1948],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1948,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "6140:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1975,
                            "src": "6132:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1947,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6132:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1954,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1950,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1935,
                              "src": "6156:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1951,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1937,
                              "src": "6159:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1952,
                              "name": "denominator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1939,
                              "src": "6162:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1949,
                            "name": "mulDiv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1932, 1976],
                            "referencedDeclaration": 1932,
                            "src": "6149:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6149:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6132:42:12"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Rounding_$1725",
                              "typeString": "enum Math.Rounding"
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1955,
                              "name": "rounding",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1942,
                              "src": "6188:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Rounding_$1725",
                                "typeString": "enum Math.Rounding"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1956,
                                "name": "Rounding",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1725,
                                "src": "6200:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Rounding_$1725_$",
                                  "typeString": "type(enum Math.Rounding)"
                                }
                              },
                              "id": 1957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6209:2:12",
                              "memberName": "Up",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1723,
                              "src": "6200:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Rounding_$1725",
                                "typeString": "enum Math.Rounding"
                              }
                            },
                            "src": "6188:23:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1960,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1935,
                                  "src": "6222:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1961,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1937,
                                  "src": "6225:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1962,
                                  "name": "denominator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1939,
                                  "src": "6228:11:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1959,
                                "name": "mulmod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -16,
                                "src": "6215:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6215:25:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6243:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6215:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6188:56:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1972,
                        "nodeType": "IfStatement",
                        "src": "6184:98:12",
                        "trueBody": {
                          "id": 1971,
                          "nodeType": "Block",
                          "src": "6246:36:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 1969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1967,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1948,
                                  "src": "6260:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6270:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6260:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1970,
                              "nodeType": "ExpressionStatement",
                              "src": "6260:11:12"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1973,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1948,
                          "src": "6298:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1946,
                        "id": 1974,
                        "nodeType": "Return",
                        "src": "6291:13:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1933,
                    "nodeType": "StructuredDocumentation",
                    "src": "5886:121:12",
                    "text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
                  },
                  "id": 1976,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mulDiv",
                  "nameLocation": "6021:6:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1935,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "6036:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1976,
                        "src": "6028:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1934,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6028:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1937,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "6047:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1976,
                        "src": "6039:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1936,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6039:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1939,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "6058:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1976,
                        "src": "6050:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1938,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6050:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1942,
                        "mutability": "mutable",
                        "name": "rounding",
                        "nameLocation": "6080:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1976,
                        "src": "6071:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$1725",
                          "typeString": "enum Math.Rounding"
                        },
                        "typeName": {
                          "id": 1941,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1940,
                            "name": "Rounding",
                            "nameLocations": ["6071:8:12"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1725,
                            "src": "6071:8:12"
                          },
                          "referencedDeclaration": 1725,
                          "src": "6071:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Rounding_$1725",
                            "typeString": "enum Math.Rounding"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6027:62:12"
                  },
                  "returnParameters": {
                    "id": 1946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1945,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1976,
                        "src": "6113:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6113:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6112:9:12"
                  },
                  "scope": 2584,
                  "src": "6012:299:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2087,
                    "nodeType": "Block",
                    "src": "6587:1585:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1984,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1979,
                            "src": "6601:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6606:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6601:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1990,
                        "nodeType": "IfStatement",
                        "src": "6597:45:12",
                        "trueBody": {
                          "id": 1989,
                          "nodeType": "Block",
                          "src": "6609:33:12",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6630:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1983,
                              "id": 1988,
                              "nodeType": "Return",
                              "src": "6623:8:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [1992],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1992,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "7329:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2087,
                            "src": "7321:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1991,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7321:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2001,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 1993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7338:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1995,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1979,
                                      "src": "7349:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1994,
                                    "name": "log2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [2256, 2292],
                                    "referencedDeclaration": 2256,
                                    "src": "7344:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1996,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7344:7:12",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1997,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7355:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7344:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1999,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7343:14:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7338:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7321:36:12"
                      },
                      {
                        "id": 2086,
                        "nodeType": "UncheckedBlock",
                        "src": "7758:408:12",
                        "statements": [
                          {
                            "expression": {
                              "id": 2011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2002,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "7782:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2007,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2003,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "7792:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2006,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2004,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1979,
                                          "src": "7801:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2005,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "7805:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7801:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7792:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2008,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7791:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2009,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7816:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7791:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7782:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2012,
                            "nodeType": "ExpressionStatement",
                            "src": "7782:35:12"
                          },
                          {
                            "expression": {
                              "id": 2022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2013,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "7831:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2018,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2014,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "7841:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2017,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2015,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1979,
                                          "src": "7850:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2016,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "7854:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7850:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7841:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2019,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7840:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7865:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7840:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7831:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2023,
                            "nodeType": "ExpressionStatement",
                            "src": "7831:35:12"
                          },
                          {
                            "expression": {
                              "id": 2033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2024,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "7880:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2029,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2025,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "7890:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2028,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2026,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1979,
                                          "src": "7899:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2027,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "7903:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7899:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7890:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2030,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7889:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2031,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7914:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7889:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7880:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2034,
                            "nodeType": "ExpressionStatement",
                            "src": "7880:35:12"
                          },
                          {
                            "expression": {
                              "id": 2044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2035,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "7929:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2040,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2036,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "7939:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2039,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2037,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1979,
                                          "src": "7948:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2038,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "7952:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7948:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7939:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2041,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7938:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7963:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7938:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7929:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2045,
                            "nodeType": "ExpressionStatement",
                            "src": "7929:35:12"
                          },
                          {
                            "expression": {
                              "id": 2055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2046,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "7978:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2051,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2047,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "7988:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2050,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2048,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1979,
                                          "src": "7997:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2049,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "8001:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7997:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7988:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2052,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7987:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8012:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7987:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7978:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2056,
                            "nodeType": "ExpressionStatement",
                            "src": "7978:35:12"
                          },
                          {
                            "expression": {
                              "id": 2066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2057,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "8027:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2062,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2058,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "8037:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2061,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2059,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1979,
                                          "src": "8046:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2060,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "8050:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8046:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8037:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2063,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8036:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2064,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8061:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8036:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8027:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2067,
                            "nodeType": "ExpressionStatement",
                            "src": "8027:35:12"
                          },
                          {
                            "expression": {
                              "id": 2077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2068,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1992,
                                "src": "8076:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2073,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2069,
                                        "name": "result",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1992,
                                        "src": "8086:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2072,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2070,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1979,
                                          "src": "8095:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 2071,
                                          "name": "result",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1992,
                                          "src": "8099:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8095:10:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8086:19:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2074,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8085:21:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8110:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "8085:26:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8076:35:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2078,
                            "nodeType": "ExpressionStatement",
                            "src": "8076:35:12"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2080,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1992,
                                  "src": "8136:6:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2081,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1979,
                                    "src": "8144:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 2082,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1992,
                                    "src": "8148:6:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8144:10:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2079,
                                "name": "min",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1761,
                                "src": "8132:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8132:23:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1983,
                            "id": 2085,
                            "nodeType": "Return",
                            "src": "8125:30:12"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1977,
                    "nodeType": "StructuredDocumentation",
                    "src": "6317:208:12",
                    "text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
                  },
                  "id": 2088,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sqrt",
                  "nameLocation": "6539:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1980,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1979,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "6552:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2088,
                        "src": "6544:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1978,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6544:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6543:11:12"
                  },
                  "returnParameters": {
                    "id": 1983,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1982,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2088,
                        "src": "6578:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1981,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6578:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6577:9:12"
                  },
                  "scope": 2584,
                  "src": "6530:1642:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2123,
                    "nodeType": "Block",
                    "src": "8348:161:12",
                    "statements": [
                      {
                        "id": 2122,
                        "nodeType": "UncheckedBlock",
                        "src": "8358:145:12",
                        "statements": [
                          {
                            "assignments": [2100],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2100,
                                "mutability": "mutable",
                                "name": "result",
                                "nameLocation": "8390:6:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2122,
                                "src": "8382:14:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2099,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8382:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2104,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 2102,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2091,
                                  "src": "8404:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2101,
                                "name": "sqrt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [2088, 2124],
                                "referencedDeclaration": 2088,
                                "src": "8399:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8399:7:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8382:24:12"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2105,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2100,
                                "src": "8427:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "components": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Rounding_$1725",
                                          "typeString": "enum Math.Rounding"
                                        },
                                        "id": 2109,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2106,
                                          "name": "rounding",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2094,
                                          "src": "8437:8:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2107,
                                            "name": "Rounding",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1725,
                                            "src": "8449:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Rounding_$1725_$",
                                              "typeString": "type(enum Math.Rounding)"
                                            }
                                          },
                                          "id": 2108,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "8458:2:12",
                                          "memberName": "Up",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1723,
                                          "src": "8449:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "src": "8437:23:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2114,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2112,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 2110,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2100,
                                            "src": "8464:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 2111,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2100,
                                            "src": "8473:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "8464:15:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 2113,
                                          "name": "a",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2091,
                                          "src": "8482:1:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8464:19:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "8437:46:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseExpression": {
                                      "hexValue": "30",
                                      "id": 2117,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8490:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "id": 2118,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "Conditional",
                                    "src": "8437:54:12",
                                    "trueExpression": {
                                      "hexValue": "31",
                                      "id": 2116,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8486:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "id": 2119,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "8436:56:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "8427:65:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2098,
                            "id": 2121,
                            "nodeType": "Return",
                            "src": "8420:72:12"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2089,
                    "nodeType": "StructuredDocumentation",
                    "src": "8178:89:12",
                    "text": " @notice Calculates sqrt(a), following the selected rounding direction."
                  },
                  "id": 2124,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sqrt",
                  "nameLocation": "8281:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2095,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2091,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "8294:1:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2124,
                        "src": "8286:9:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2090,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8286:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2094,
                        "mutability": "mutable",
                        "name": "rounding",
                        "nameLocation": "8306:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2124,
                        "src": "8297:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$1725",
                          "typeString": "enum Math.Rounding"
                        },
                        "typeName": {
                          "id": 2093,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2092,
                            "name": "Rounding",
                            "nameLocations": ["8297:8:12"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1725,
                            "src": "8297:8:12"
                          },
                          "referencedDeclaration": 1725,
                          "src": "8297:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Rounding_$1725",
                            "typeString": "enum Math.Rounding"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8285:30:12"
                  },
                  "returnParameters": {
                    "id": 2098,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2097,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2124,
                        "src": "8339:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2096,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8339:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8338:9:12"
                  },
                  "scope": 2584,
                  "src": "8272:237:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2255,
                    "nodeType": "Block",
                    "src": "8694:922:12",
                    "statements": [
                      {
                        "assignments": [2133],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2133,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "8712:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2255,
                            "src": "8704:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2132,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8704:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2135,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8721:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8704:18:12"
                      },
                      {
                        "id": 2252,
                        "nodeType": "UncheckedBlock",
                        "src": "8732:855:12",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2136,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "8760:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "313238",
                                  "id": 2137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8769:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_128_by_1",
                                    "typeString": "int_const 128"
                                  },
                                  "value": "128"
                                },
                                "src": "8760:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8775:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8760:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2150,
                            "nodeType": "IfStatement",
                            "src": "8756:99:12",
                            "trueBody": {
                              "id": 2149,
                              "nodeType": "Block",
                              "src": "8778:77:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2143,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2141,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2127,
                                      "src": "8796:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "313238",
                                      "id": 2142,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8806:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_128_by_1",
                                        "typeString": "int_const 128"
                                      },
                                      "value": "128"
                                    },
                                    "src": "8796:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2144,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8796:13:12"
                                },
                                {
                                  "expression": {
                                    "id": 2147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2145,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "8827:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "313238",
                                      "id": 2146,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8837:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_128_by_1",
                                        "typeString": "int_const 128"
                                      },
                                      "value": "128"
                                    },
                                    "src": "8827:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2148,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8827:13:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2151,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "8872:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "3634",
                                  "id": 2152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8881:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64_by_1",
                                    "typeString": "int_const 64"
                                  },
                                  "value": "64"
                                },
                                "src": "8872:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8886:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8872:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2165,
                            "nodeType": "IfStatement",
                            "src": "8868:96:12",
                            "trueBody": {
                              "id": 2164,
                              "nodeType": "Block",
                              "src": "8889:75:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2156,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2127,
                                      "src": "8907:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "3634",
                                      "id": 2157,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8917:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "8907:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2159,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8907:12:12"
                                },
                                {
                                  "expression": {
                                    "id": 2162,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2160,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "8937:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "3634",
                                      "id": 2161,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8947:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "8937:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2163,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8937:12:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2166,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "8981:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 2167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8990:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "8981:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8995:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8981:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2180,
                            "nodeType": "IfStatement",
                            "src": "8977:96:12",
                            "trueBody": {
                              "id": 2179,
                              "nodeType": "Block",
                              "src": "8998:75:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2173,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2171,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2127,
                                      "src": "9016:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "3332",
                                      "id": 2172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9026:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "9016:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2174,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9016:12:12"
                                },
                                {
                                  "expression": {
                                    "id": 2177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2175,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "9046:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "3332",
                                      "id": 2176,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9056:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "9046:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2178,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9046:12:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2181,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "9090:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "3136",
                                  "id": 2182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9099:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_16_by_1",
                                    "typeString": "int_const 16"
                                  },
                                  "value": "16"
                                },
                                "src": "9090:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9104:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9090:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2195,
                            "nodeType": "IfStatement",
                            "src": "9086:96:12",
                            "trueBody": {
                              "id": 2194,
                              "nodeType": "Block",
                              "src": "9107:75:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2186,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2127,
                                      "src": "9125:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "3136",
                                      "id": 2187,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9135:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_16_by_1",
                                        "typeString": "int_const 16"
                                      },
                                      "value": "16"
                                    },
                                    "src": "9125:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2189,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9125:12:12"
                                },
                                {
                                  "expression": {
                                    "id": 2192,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2190,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "9155:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "3136",
                                      "id": 2191,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9165:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_16_by_1",
                                        "typeString": "int_const 16"
                                      },
                                      "value": "16"
                                    },
                                    "src": "9155:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2193,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9155:12:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2196,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "9199:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "38",
                                  "id": 2197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9208:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "9199:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9212:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9199:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2210,
                            "nodeType": "IfStatement",
                            "src": "9195:93:12",
                            "trueBody": {
                              "id": 2209,
                              "nodeType": "Block",
                              "src": "9215:73:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2203,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2201,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2127,
                                      "src": "9233:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "38",
                                      "id": 2202,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9243:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_8_by_1",
                                        "typeString": "int_const 8"
                                      },
                                      "value": "8"
                                    },
                                    "src": "9233:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2204,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9233:11:12"
                                },
                                {
                                  "expression": {
                                    "id": 2207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2205,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "9262:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "38",
                                      "id": 2206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9272:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_8_by_1",
                                        "typeString": "int_const 8"
                                      },
                                      "value": "8"
                                    },
                                    "src": "9262:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2208,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9262:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2211,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "9305:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 2212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9314:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "9305:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9318:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9305:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2225,
                            "nodeType": "IfStatement",
                            "src": "9301:93:12",
                            "trueBody": {
                              "id": 2224,
                              "nodeType": "Block",
                              "src": "9321:73:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2216,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2127,
                                      "src": "9339:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "34",
                                      "id": 2217,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9349:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    },
                                    "src": "9339:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2219,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9339:11:12"
                                },
                                {
                                  "expression": {
                                    "id": 2222,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2220,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "9368:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "34",
                                      "id": 2221,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9378:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    },
                                    "src": "9368:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2223,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9368:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2226,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "9411:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 2227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9420:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "9411:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9424:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9411:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2240,
                            "nodeType": "IfStatement",
                            "src": "9407:93:12",
                            "trueBody": {
                              "id": 2239,
                              "nodeType": "Block",
                              "src": "9427:73:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2231,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2127,
                                      "src": "9445:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "32",
                                      "id": 2232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9455:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "9445:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2234,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9445:11:12"
                                },
                                {
                                  "expression": {
                                    "id": 2237,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2235,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "9474:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "32",
                                      "id": 2236,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9484:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "9474:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2238,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9474:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2241,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "9517:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9526:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9517:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9530:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9517:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2251,
                            "nodeType": "IfStatement",
                            "src": "9513:64:12",
                            "trueBody": {
                              "id": 2250,
                              "nodeType": "Block",
                              "src": "9533:44:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2248,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2246,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "9551:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "31",
                                      "id": 2247,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9561:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "9551:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2249,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9551:11:12"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 2253,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2133,
                          "src": "9603:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2131,
                        "id": 2254,
                        "nodeType": "Return",
                        "src": "9596:13:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2125,
                    "nodeType": "StructuredDocumentation",
                    "src": "8515:113:12",
                    "text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
                  },
                  "id": 2256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "log2",
                  "nameLocation": "8642:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2127,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8655:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "8647:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2126,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8647:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8646:15:12"
                  },
                  "returnParameters": {
                    "id": 2131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2130,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "8685:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8685:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8684:9:12"
                  },
                  "scope": 2584,
                  "src": "8633:983:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2291,
                    "nodeType": "Block",
                    "src": "9849:165:12",
                    "statements": [
                      {
                        "id": 2290,
                        "nodeType": "UncheckedBlock",
                        "src": "9859:149:12",
                        "statements": [
                          {
                            "assignments": [2268],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2268,
                                "mutability": "mutable",
                                "name": "result",
                                "nameLocation": "9891:6:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2290,
                                "src": "9883:14:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2267,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9883:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2272,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 2270,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2259,
                                  "src": "9905:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2269,
                                "name": "log2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [2256, 2292],
                                "referencedDeclaration": 2256,
                                "src": "9900:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9900:11:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9883:28:12"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2273,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2268,
                                "src": "9932:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "components": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2283,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Rounding_$1725",
                                          "typeString": "enum Math.Rounding"
                                        },
                                        "id": 2277,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2274,
                                          "name": "rounding",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2262,
                                          "src": "9942:8:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2275,
                                            "name": "Rounding",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1725,
                                            "src": "9954:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Rounding_$1725_$",
                                              "typeString": "type(enum Math.Rounding)"
                                            }
                                          },
                                          "id": 2276,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "9963:2:12",
                                          "memberName": "Up",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1723,
                                          "src": "9954:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "src": "9942:23:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2282,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2280,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "31",
                                            "id": 2278,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9969:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<<",
                                          "rightExpression": {
                                            "id": 2279,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2268,
                                            "src": "9974:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9969:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 2281,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2259,
                                          "src": "9983:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "9969:19:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "9942:46:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseExpression": {
                                      "hexValue": "30",
                                      "id": 2285,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9995:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "id": 2286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "Conditional",
                                    "src": "9942:54:12",
                                    "trueExpression": {
                                      "hexValue": "31",
                                      "id": 2284,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9991:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "id": 2287,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9941:56:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "9932:65:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2266,
                            "id": 2289,
                            "nodeType": "Return",
                            "src": "9925:72:12"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2257,
                    "nodeType": "StructuredDocumentation",
                    "src": "9622:142:12",
                    "text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
                  },
                  "id": 2292,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "log2",
                  "nameLocation": "9778:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2259,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9791:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2292,
                        "src": "9783:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2258,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9783:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2262,
                        "mutability": "mutable",
                        "name": "rounding",
                        "nameLocation": "9807:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2292,
                        "src": "9798:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$1725",
                          "typeString": "enum Math.Rounding"
                        },
                        "typeName": {
                          "id": 2261,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2260,
                            "name": "Rounding",
                            "nameLocations": ["9798:8:12"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1725,
                            "src": "9798:8:12"
                          },
                          "referencedDeclaration": 1725,
                          "src": "9798:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Rounding_$1725",
                            "typeString": "enum Math.Rounding"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9782:34:12"
                  },
                  "returnParameters": {
                    "id": 2266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2265,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2292,
                        "src": "9840:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9840:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9839:9:12"
                  },
                  "scope": 2584,
                  "src": "9769:245:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2420,
                    "nodeType": "Block",
                    "src": "10201:854:12",
                    "statements": [
                      {
                        "assignments": [2301],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2301,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "10219:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2420,
                            "src": "10211:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2300,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10211:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2303,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10228:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10211:18:12"
                      },
                      {
                        "id": 2417,
                        "nodeType": "UncheckedBlock",
                        "src": "10239:787:12",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2304,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "10267:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(57 digits omitted)...0000"
                                },
                                "id": 2307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10276:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3634",
                                  "id": 2306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10282:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64_by_1",
                                    "typeString": "int_const 64"
                                  },
                                  "value": "64"
                                },
                                "src": "10276:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(57 digits omitted)...0000"
                                }
                              },
                              "src": "10267:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2320,
                            "nodeType": "IfStatement",
                            "src": "10263:103:12",
                            "trueBody": {
                              "id": 2319,
                              "nodeType": "Block",
                              "src": "10286:80:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2309,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "10304:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "/=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
                                        "typeString": "int_const 1000...(57 digits omitted)...0000"
                                      },
                                      "id": 2312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 2310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10313:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "3634",
                                        "id": 2311,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10319:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_64_by_1",
                                          "typeString": "int_const 64"
                                        },
                                        "value": "64"
                                      },
                                      "src": "10313:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
                                        "typeString": "int_const 1000...(57 digits omitted)...0000"
                                      }
                                    },
                                    "src": "10304:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2314,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10304:17:12"
                                },
                                {
                                  "expression": {
                                    "id": 2317,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2315,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2301,
                                      "src": "10339:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "3634",
                                      "id": 2316,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10349:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "10339:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2318,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10339:12:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2321,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "10383:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(25 digits omitted)...0000"
                                },
                                "id": 2324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10392:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 2323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10398:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "10392:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(25 digits omitted)...0000"
                                }
                              },
                              "src": "10383:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2337,
                            "nodeType": "IfStatement",
                            "src": "10379:103:12",
                            "trueBody": {
                              "id": 2336,
                              "nodeType": "Block",
                              "src": "10402:80:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2326,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "10420:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "/=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
                                        "typeString": "int_const 1000...(25 digits omitted)...0000"
                                      },
                                      "id": 2329,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 2327,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10429:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "3332",
                                        "id": 2328,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10435:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_32_by_1",
                                          "typeString": "int_const 32"
                                        },
                                        "value": "32"
                                      },
                                      "src": "10429:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
                                        "typeString": "int_const 1000...(25 digits omitted)...0000"
                                      }
                                    },
                                    "src": "10420:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2331,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10420:17:12"
                                },
                                {
                                  "expression": {
                                    "id": 2334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2332,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2301,
                                      "src": "10455:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "3332",
                                      "id": 2333,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10465:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "10455:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2335,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10455:12:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2338,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "10499:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_10000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000"
                                },
                                "id": 2341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10508:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3136",
                                  "id": 2340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10514:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_16_by_1",
                                    "typeString": "int_const 16"
                                  },
                                  "value": "16"
                                },
                                "src": "10508:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000_by_1",
                                  "typeString": "int_const 10000000000000000"
                                }
                              },
                              "src": "10499:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2354,
                            "nodeType": "IfStatement",
                            "src": "10495:103:12",
                            "trueBody": {
                              "id": 2353,
                              "nodeType": "Block",
                              "src": "10518:80:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2343,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "10536:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "/=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                                        "typeString": "int_const 10000000000000000"
                                      },
                                      "id": 2346,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 2344,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10545:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "3136",
                                        "id": 2345,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10551:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_16_by_1",
                                          "typeString": "int_const 16"
                                        },
                                        "value": "16"
                                      },
                                      "src": "10545:8:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000000000000000_by_1",
                                        "typeString": "int_const 10000000000000000"
                                      }
                                    },
                                    "src": "10536:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2348,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10536:17:12"
                                },
                                {
                                  "expression": {
                                    "id": 2351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2349,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2301,
                                      "src": "10571:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "3136",
                                      "id": 2350,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10581:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_16_by_1",
                                        "typeString": "int_const 16"
                                      },
                                      "value": "16"
                                    },
                                    "src": "10571:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2352,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10571:12:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2355,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "10615:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                },
                                "id": 2358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10624:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "38",
                                  "id": 2357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10630:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "10624:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                }
                              },
                              "src": "10615:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2371,
                            "nodeType": "IfStatement",
                            "src": "10611:100:12",
                            "trueBody": {
                              "id": 2370,
                              "nodeType": "Block",
                              "src": "10633:78:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2360,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "10651:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "/=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_100000000_by_1",
                                        "typeString": "int_const 100000000"
                                      },
                                      "id": 2363,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 2361,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10660:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "38",
                                        "id": 2362,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10666:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_8_by_1",
                                          "typeString": "int_const 8"
                                        },
                                        "value": "8"
                                      },
                                      "src": "10660:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100000000_by_1",
                                        "typeString": "int_const 100000000"
                                      }
                                    },
                                    "src": "10651:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2365,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10651:16:12"
                                },
                                {
                                  "expression": {
                                    "id": 2368,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2366,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2301,
                                      "src": "10685:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "38",
                                      "id": 2367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10695:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_8_by_1",
                                        "typeString": "int_const 8"
                                      },
                                      "value": "8"
                                    },
                                    "src": "10685:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2369,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10685:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2372,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "10728:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "id": 2375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10737:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 2374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10743:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "10737:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                }
                              },
                              "src": "10728:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2388,
                            "nodeType": "IfStatement",
                            "src": "10724:100:12",
                            "trueBody": {
                              "id": 2387,
                              "nodeType": "Block",
                              "src": "10746:78:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2377,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "10764:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "/=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      },
                                      "id": 2380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 2378,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10773:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "34",
                                        "id": 2379,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10779:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_4_by_1",
                                          "typeString": "int_const 4"
                                        },
                                        "value": "4"
                                      },
                                      "src": "10773:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000_by_1",
                                        "typeString": "int_const 10000"
                                      }
                                    },
                                    "src": "10764:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2382,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10764:16:12"
                                },
                                {
                                  "expression": {
                                    "id": 2385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2383,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2301,
                                      "src": "10798:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "34",
                                      "id": 2384,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10808:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    },
                                    "src": "10798:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2386,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10798:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2389,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "10841:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "id": 2392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10850:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 2391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10856:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "10850:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              },
                              "src": "10841:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2405,
                            "nodeType": "IfStatement",
                            "src": "10837:100:12",
                            "trueBody": {
                              "id": 2404,
                              "nodeType": "Block",
                              "src": "10859:78:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2398,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2394,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2295,
                                      "src": "10877:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "/=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "id": 2397,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 2395,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10886:2:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "hexValue": "32",
                                        "id": 2396,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10892:1:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "10886:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    },
                                    "src": "10877:16:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2399,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10877:16:12"
                                },
                                {
                                  "expression": {
                                    "id": 2402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2400,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2301,
                                      "src": "10911:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "32",
                                      "id": 2401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10921:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "10911:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2403,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10911:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2406,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2295,
                                "src": "10954:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "id": 2409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10963:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10969:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "10963:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                }
                              },
                              "src": "10954:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2416,
                            "nodeType": "IfStatement",
                            "src": "10950:66:12",
                            "trueBody": {
                              "id": 2415,
                              "nodeType": "Block",
                              "src": "10972:44:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2411,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2301,
                                      "src": "10990:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "31",
                                      "id": 2412,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11000:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10990:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2414,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10990:11:12"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 2418,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "11042:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2299,
                        "id": 2419,
                        "nodeType": "Return",
                        "src": "11035:13:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2293,
                    "nodeType": "StructuredDocumentation",
                    "src": "10020:114:12",
                    "text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
                  },
                  "id": 2421,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "log10",
                  "nameLocation": "10148:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2295,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10162:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2421,
                        "src": "10154:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10154:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10153:15:12"
                  },
                  "returnParameters": {
                    "id": 2299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2298,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2421,
                        "src": "10192:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10192:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10191:9:12"
                  },
                  "scope": 2584,
                  "src": "10139:916:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2456,
                    "nodeType": "Block",
                    "src": "11290:167:12",
                    "statements": [
                      {
                        "id": 2455,
                        "nodeType": "UncheckedBlock",
                        "src": "11300:151:12",
                        "statements": [
                          {
                            "assignments": [2433],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2433,
                                "mutability": "mutable",
                                "name": "result",
                                "nameLocation": "11332:6:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2455,
                                "src": "11324:14:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2432,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11324:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2437,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 2435,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2424,
                                  "src": "11347:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2434,
                                "name": "log10",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [2421, 2457],
                                "referencedDeclaration": 2421,
                                "src": "11341:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11341:12:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "11324:29:12"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2438,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2433,
                                "src": "11374:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "components": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2448,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Rounding_$1725",
                                          "typeString": "enum Math.Rounding"
                                        },
                                        "id": 2442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2439,
                                          "name": "rounding",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2427,
                                          "src": "11384:8:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2440,
                                            "name": "Rounding",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1725,
                                            "src": "11396:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Rounding_$1725_$",
                                              "typeString": "type(enum Math.Rounding)"
                                            }
                                          },
                                          "id": 2441,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "11405:2:12",
                                          "memberName": "Up",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1723,
                                          "src": "11396:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "src": "11384:23:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2447,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2445,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 2443,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11411:2:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "**",
                                          "rightExpression": {
                                            "id": 2444,
                                            "name": "result",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2433,
                                            "src": "11417:6:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11411:12:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 2446,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2424,
                                          "src": "11426:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11411:20:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "11384:47:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseExpression": {
                                      "hexValue": "30",
                                      "id": 2450,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11438:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "id": 2451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "Conditional",
                                    "src": "11384:55:12",
                                    "trueExpression": {
                                      "hexValue": "31",
                                      "id": 2449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11434:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "id": 2452,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "11383:57:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "11374:66:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2431,
                            "id": 2454,
                            "nodeType": "Return",
                            "src": "11367:73:12"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2422,
                    "nodeType": "StructuredDocumentation",
                    "src": "11061:143:12",
                    "text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
                  },
                  "id": 2457,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "log10",
                  "nameLocation": "11218:5:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2424,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "11232:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2457,
                        "src": "11224:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11224:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2427,
                        "mutability": "mutable",
                        "name": "rounding",
                        "nameLocation": "11248:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2457,
                        "src": "11239:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$1725",
                          "typeString": "enum Math.Rounding"
                        },
                        "typeName": {
                          "id": 2426,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2425,
                            "name": "Rounding",
                            "nameLocations": ["11239:8:12"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1725,
                            "src": "11239:8:12"
                          },
                          "referencedDeclaration": 1725,
                          "src": "11239:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Rounding_$1725",
                            "typeString": "enum Math.Rounding"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11223:34:12"
                  },
                  "returnParameters": {
                    "id": 2431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2457,
                        "src": "11281:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2429,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11281:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11280:9:12"
                  },
                  "scope": 2584,
                  "src": "11209:248:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2543,
                    "nodeType": "Block",
                    "src": "11771:600:12",
                    "statements": [
                      {
                        "assignments": [2466],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2466,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "11789:6:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2543,
                            "src": "11781:14:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2465,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11781:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2468,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 2467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11798:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11781:18:12"
                      },
                      {
                        "id": 2540,
                        "nodeType": "UncheckedBlock",
                        "src": "11809:533:12",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2469,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2460,
                                  "src": "11837:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "313238",
                                  "id": 2470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11846:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_128_by_1",
                                    "typeString": "int_const 128"
                                  },
                                  "value": "128"
                                },
                                "src": "11837:12:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11852:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11837:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2483,
                            "nodeType": "IfStatement",
                            "src": "11833:98:12",
                            "trueBody": {
                              "id": 2482,
                              "nodeType": "Block",
                              "src": "11855:76:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2474,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2460,
                                      "src": "11873:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "313238",
                                      "id": 2475,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11883:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_128_by_1",
                                        "typeString": "int_const 128"
                                      },
                                      "value": "128"
                                    },
                                    "src": "11873:13:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2477,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11873:13:12"
                                },
                                {
                                  "expression": {
                                    "id": 2480,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2478,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2466,
                                      "src": "11904:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "3136",
                                      "id": 2479,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11914:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_16_by_1",
                                        "typeString": "int_const 16"
                                      },
                                      "value": "16"
                                    },
                                    "src": "11904:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2481,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11904:12:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2484,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2460,
                                  "src": "11948:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "3634",
                                  "id": 2485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11957:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_64_by_1",
                                    "typeString": "int_const 64"
                                  },
                                  "value": "64"
                                },
                                "src": "11948:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11962:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11948:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2498,
                            "nodeType": "IfStatement",
                            "src": "11944:95:12",
                            "trueBody": {
                              "id": 2497,
                              "nodeType": "Block",
                              "src": "11965:74:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2491,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2489,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2460,
                                      "src": "11983:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "3634",
                                      "id": 2490,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11993:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_64_by_1",
                                        "typeString": "int_const 64"
                                      },
                                      "value": "64"
                                    },
                                    "src": "11983:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2492,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11983:12:12"
                                },
                                {
                                  "expression": {
                                    "id": 2495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2493,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2466,
                                      "src": "12013:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "38",
                                      "id": 2494,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12023:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_8_by_1",
                                        "typeString": "int_const 8"
                                      },
                                      "value": "8"
                                    },
                                    "src": "12013:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2496,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12013:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2499,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2460,
                                  "src": "12056:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 2500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12065:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "12056:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12070:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12056:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2513,
                            "nodeType": "IfStatement",
                            "src": "12052:95:12",
                            "trueBody": {
                              "id": 2512,
                              "nodeType": "Block",
                              "src": "12073:74:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2504,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2460,
                                      "src": "12091:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "3332",
                                      "id": 2505,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12101:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "12091:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2507,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12091:12:12"
                                },
                                {
                                  "expression": {
                                    "id": 2510,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2508,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2466,
                                      "src": "12121:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "34",
                                      "id": 2509,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12131:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    },
                                    "src": "12121:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2511,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12121:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2514,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2460,
                                  "src": "12164:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "3136",
                                  "id": 2515,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12173:2:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_16_by_1",
                                    "typeString": "int_const 16"
                                  },
                                  "value": "16"
                                },
                                "src": "12164:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12178:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12164:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2528,
                            "nodeType": "IfStatement",
                            "src": "12160:95:12",
                            "trueBody": {
                              "id": 2527,
                              "nodeType": "Block",
                              "src": "12181:74:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2519,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2460,
                                      "src": "12199:5:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": ">>=",
                                    "rightHandSide": {
                                      "hexValue": "3136",
                                      "id": 2520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12209:2:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_16_by_1",
                                        "typeString": "int_const 16"
                                      },
                                      "value": "16"
                                    },
                                    "src": "12199:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2522,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12199:12:12"
                                },
                                {
                                  "expression": {
                                    "id": 2525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2523,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2466,
                                      "src": "12229:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "32",
                                      "id": 2524,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12239:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "12229:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2526,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12229:11:12"
                                }
                              ]
                            }
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2529,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2460,
                                  "src": "12272:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "38",
                                  "id": 2530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12281:1:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "12272:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12285:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12272:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2539,
                            "nodeType": "IfStatement",
                            "src": "12268:64:12",
                            "trueBody": {
                              "id": 2538,
                              "nodeType": "Block",
                              "src": "12288:44:12",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2536,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 2534,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2466,
                                      "src": "12306:6:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "hexValue": "31",
                                      "id": 2535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12316:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "12306:11:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2537,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12306:11:12"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 2541,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2466,
                          "src": "12358:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2464,
                        "id": 2542,
                        "nodeType": "Return",
                        "src": "12351:13:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2458,
                    "nodeType": "StructuredDocumentation",
                    "src": "11463:240:12",
                    "text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
                  },
                  "id": 2544,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "log256",
                  "nameLocation": "11717:6:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2460,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "11732:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2544,
                        "src": "11724:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2459,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11724:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11723:15:12"
                  },
                  "returnParameters": {
                    "id": 2464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2463,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2544,
                        "src": "11762:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11762:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11761:9:12"
                  },
                  "scope": 2584,
                  "src": "11708:663:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2582,
                    "nodeType": "Block",
                    "src": "12608:174:12",
                    "statements": [
                      {
                        "id": 2581,
                        "nodeType": "UncheckedBlock",
                        "src": "12618:158:12",
                        "statements": [
                          {
                            "assignments": [2556],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2556,
                                "mutability": "mutable",
                                "name": "result",
                                "nameLocation": "12650:6:12",
                                "nodeType": "VariableDeclaration",
                                "scope": 2581,
                                "src": "12642:14:12",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2555,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12642:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2560,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 2558,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2547,
                                  "src": "12666:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2557,
                                "name": "log256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [2544, 2583],
                                "referencedDeclaration": 2544,
                                "src": "12659:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12659:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "12642:30:12"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2561,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2556,
                                "src": "12693:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "components": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 2574,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_Rounding_$1725",
                                          "typeString": "enum Math.Rounding"
                                        },
                                        "id": 2565,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2562,
                                          "name": "rounding",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2550,
                                          "src": "12703:8:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 2563,
                                            "name": "Rounding",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1725,
                                            "src": "12715:8:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_Rounding_$1725_$",
                                              "typeString": "type(enum Math.Rounding)"
                                            }
                                          },
                                          "id": 2564,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "12724:2:12",
                                          "memberName": "Up",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1723,
                                          "src": "12715:11:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_Rounding_$1725",
                                            "typeString": "enum Math.Rounding"
                                          }
                                        },
                                        "src": "12703:23:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2573,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2571,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "31",
                                            "id": 2566,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12730:1:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<<",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2569,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 2567,
                                                  "name": "result",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2556,
                                                  "src": "12736:6:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<<",
                                                "rightExpression": {
                                                  "hexValue": "33",
                                                  "id": 2568,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "12746:1:12",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_3_by_1",
                                                    "typeString": "int_const 3"
                                                  },
                                                  "value": "3"
                                                },
                                                "src": "12736:11:12",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 2570,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "12735:13:12",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12730:18:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 2572,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2547,
                                          "src": "12751:5:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12730:26:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "12703:53:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseExpression": {
                                      "hexValue": "30",
                                      "id": 2576,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12763:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "id": 2577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "Conditional",
                                    "src": "12703:61:12",
                                    "trueExpression": {
                                      "hexValue": "31",
                                      "id": 2575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12759:1:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "id": 2578,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "12702:63:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "12693:72:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2554,
                            "id": 2580,
                            "nodeType": "Return",
                            "src": "12686:79:12"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2545,
                    "nodeType": "StructuredDocumentation",
                    "src": "12377:144:12",
                    "text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
                  },
                  "id": 2583,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "log256",
                  "nameLocation": "12535:6:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2547,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "12550:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2583,
                        "src": "12542:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2546,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12542:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2550,
                        "mutability": "mutable",
                        "name": "rounding",
                        "nameLocation": "12566:8:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2583,
                        "src": "12557:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Rounding_$1725",
                          "typeString": "enum Math.Rounding"
                        },
                        "typeName": {
                          "id": 2549,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2548,
                            "name": "Rounding",
                            "nameLocations": ["12557:8:12"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1725,
                            "src": "12557:8:12"
                          },
                          "referencedDeclaration": 1725,
                          "src": "12557:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Rounding_$1725",
                            "typeString": "enum Math.Rounding"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12541:34:12"
                  },
                  "returnParameters": {
                    "id": 2554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2553,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2583,
                        "src": "12599:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12599:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12598:9:12"
                  },
                  "scope": 2584,
                  "src": "12526:256:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2585,
              "src": "202:12582:12",
              "usedErrors": []
            }
          ],
          "src": "103:12682:12"
        },
        "id": 12
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
          "exportedSymbols": { "SignedMath": [2689] },
          "id": 2690,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2586,
              "literals": ["solidity", "^", "0.8", ".0"],
              "nodeType": "PragmaDirective",
              "src": "109:23:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SignedMath",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2587,
                "nodeType": "StructuredDocumentation",
                "src": "134:80:13",
                "text": " @dev Standard signed math utilities missing in the Solidity language."
              },
              "fullyImplemented": true,
              "id": 2689,
              "linearizedBaseContracts": [2689],
              "name": "SignedMath",
              "nameLocation": "223:10:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2604,
                    "nodeType": "Block",
                    "src": "375:37:13",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2597,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2590,
                              "src": "392:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 2598,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2592,
                              "src": "396:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "392:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2601,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2592,
                            "src": "404:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 2602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "392:13:13",
                          "trueExpression": {
                            "id": 2600,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2590,
                            "src": "400:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 2596,
                        "id": 2603,
                        "nodeType": "Return",
                        "src": "385:20:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2588,
                    "nodeType": "StructuredDocumentation",
                    "src": "240:66:13",
                    "text": " @dev Returns the largest of two signed numbers."
                  },
                  "id": 2605,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "max",
                  "nameLocation": "320:3:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2590,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "331:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2605,
                        "src": "324:8:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2589,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2592,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "341:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2605,
                        "src": "334:8:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2591,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "323:20:13"
                  },
                  "returnParameters": {
                    "id": 2596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2595,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2605,
                        "src": "367:6:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2594,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "367:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "366:8:13"
                  },
                  "scope": 2689,
                  "src": "311:101:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2622,
                    "nodeType": "Block",
                    "src": "554:37:13",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 2617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2615,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2608,
                              "src": "571:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 2616,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2610,
                              "src": "575:1:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "571:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 2619,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2610,
                            "src": "583:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "id": 2620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "571:13:13",
                          "trueExpression": {
                            "id": 2618,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2608,
                            "src": "579:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 2614,
                        "id": 2621,
                        "nodeType": "Return",
                        "src": "564:20:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2606,
                    "nodeType": "StructuredDocumentation",
                    "src": "418:67:13",
                    "text": " @dev Returns the smallest of two signed numbers."
                  },
                  "id": 2623,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "min",
                  "nameLocation": "499:3:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2611,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2608,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "510:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2623,
                        "src": "503:8:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2607,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "503:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2610,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "520:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2623,
                        "src": "513:8:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2609,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "513:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "502:20:13"
                  },
                  "returnParameters": {
                    "id": 2614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2613,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2623,
                        "src": "546:6:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2612,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "545:8:13"
                  },
                  "scope": 2689,
                  "src": "490:101:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2666,
                    "nodeType": "Block",
                    "src": "796:162:13",
                    "statements": [
                      {
                        "assignments": [2634],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2634,
                            "mutability": "mutable",
                            "name": "x",
                            "nameLocation": "865:1:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2666,
                            "src": "858:8:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 2633,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "858:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2647,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2635,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2626,
                                  "src": "870:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "id": 2636,
                                  "name": "b",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2628,
                                  "src": "874:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "870:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "id": 2638,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "869:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      },
                                      "id": 2641,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2639,
                                        "name": "a",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2626,
                                        "src": "881:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "^",
                                      "rightExpression": {
                                        "id": 2640,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2628,
                                        "src": "885:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "881:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "id": 2642,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "880:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 2643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "891:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "880:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "id": 2645,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "879:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "869:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "858:35:13"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 2664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2648,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2634,
                            "src": "910:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 2662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2656,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 2653,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2634,
                                            "src": "930:1:13",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          ],
                                          "id": 2652,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "922:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 2651,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "922:7:13",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 2654,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "922:10:13",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">>",
                                      "rightExpression": {
                                        "hexValue": "323535",
                                        "id": 2655,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "936:3:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_255_by_1",
                                          "typeString": "int_const 255"
                                        },
                                        "value": "255"
                                      },
                                      "src": "922:17:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2650,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "915:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_int256_$",
                                      "typeString": "type(int256)"
                                    },
                                    "typeName": {
                                      "id": 2649,
                                      "name": "int256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "915:6:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2657,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "915:25:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      },
                                      "id": 2660,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2658,
                                        "name": "a",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2626,
                                        "src": "944:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "^",
                                      "rightExpression": {
                                        "id": 2659,
                                        "name": "b",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2628,
                                        "src": "948:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "src": "944:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "id": 2661,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "943:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "915:35:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "id": 2663,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "914:37:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "910:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 2632,
                        "id": 2665,
                        "nodeType": "Return",
                        "src": "903:48:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2624,
                    "nodeType": "StructuredDocumentation",
                    "src": "597:126:13",
                    "text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
                  },
                  "id": 2667,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "average",
                  "nameLocation": "737:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2629,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2626,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "752:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2667,
                        "src": "745:8:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2625,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2628,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "762:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2667,
                        "src": "755:8:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2627,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "744:20:13"
                  },
                  "returnParameters": {
                    "id": 2632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2631,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2667,
                        "src": "788:6:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2630,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "788:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "787:8:13"
                  },
                  "scope": 2689,
                  "src": "728:230:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2687,
                    "nodeType": "Block",
                    "src": "1102:158:13",
                    "statements": [
                      {
                        "id": 2686,
                        "nodeType": "UncheckedBlock",
                        "src": "1112:142:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 2679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2677,
                                      "name": "n",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2670,
                                      "src": "1227:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2678,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1232:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1227:6:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 2682,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "1240:2:13",
                                    "subExpression": {
                                      "id": 2681,
                                      "name": "n",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2670,
                                      "src": "1241:1:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "id": 2683,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1227:15:13",
                                  "trueExpression": {
                                    "id": 2680,
                                    "name": "n",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2670,
                                    "src": "1236:1:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 2676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1219:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 2675,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1219:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1219:24:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2674,
                            "id": 2685,
                            "nodeType": "Return",
                            "src": "1212:31:13"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2668,
                    "nodeType": "StructuredDocumentation",
                    "src": "964:78:13",
                    "text": " @dev Returns the absolute unsigned value of a signed value."
                  },
                  "id": 2688,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "abs",
                  "nameLocation": "1056:3:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2670,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "1067:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "1060:8:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2669,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1060:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1059:10:13"
                  },
                  "returnParameters": {
                    "id": 2674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2673,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "1093:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1093:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1092:9:13"
                  },
                  "scope": 2689,
                  "src": "1047:213:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2690,
              "src": "215:1047:13",
              "usedErrors": []
            }
          ],
          "src": "109:1154:13"
        },
        "id": 13
      },
      "contracts/aa/Account.sol": {
        "ast": {
          "absolutePath": "contracts/aa/Account.sol",
          "exportedSymbols": {
            "Account": [3353],
            "Address": [932],
            "Base64": [3568],
            "ECDSA": [1718],
            "Initializable": [602],
            "JPoint": [3584],
            "Math": [2584],
            "PassKeyId": [3577],
            "Secp256r1": [4345],
            "SignedMath": [2689],
            "Strings": [1352],
            "UserOp": [4356],
            "UserOpLib": [4417]
          },
          "id": 3354,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2691,
              "literals": ["solidity", "^", "0.8", ".19"],
              "nodeType": "PragmaDirective",
              "src": "36:24:14"
            },
            {
              "absolutePath": "contracts/aa/utils/UserOp.sol",
              "file": "./utils/UserOp.sol",
              "id": 2692,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3354,
              "sourceUnit": 4418,
              "src": "62:28:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/aa/utils/Secp256r1.sol",
              "file": "./utils/Secp256r1.sol",
              "id": 2693,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3354,
              "sourceUnit": 4346,
              "src": "91:31:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/aa/utils/Base64.sol",
              "file": "./utils/Base64.sol",
              "id": 2694,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3354,
              "sourceUnit": 3569,
              "src": "123:28:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
              "id": 2695,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3354,
              "sourceUnit": 603,
              "src": "153:63:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "id": 2696,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3354,
              "sourceUnit": 1719,
              "src": "217:62:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2697,
                    "name": "Initializable",
                    "nameLocations": ["301:13:14"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 602,
                    "src": "301:13:14"
                  },
                  "id": 2698,
                  "nodeType": "InheritanceSpecifier",
                  "src": "301:13:14"
                }
              ],
              "canonicalName": "Account",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3353,
              "linearizedBaseContracts": [3353, 602],
              "name": "Account",
              "nameLocation": "290:7:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 2702,
                  "libraryName": {
                    "id": 2699,
                    "name": "UserOpLib",
                    "nameLocations": ["327:9:14"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4417,
                    "src": "327:9:14"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "321:27:14",
                  "typeName": {
                    "id": 2701,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2700,
                      "name": "UserOp",
                      "nameLocations": ["341:6:14"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4356,
                      "src": "341:6:14"
                    },
                    "referencedDeclaration": 4356,
                    "src": "341:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOp_$4356_storage_ptr",
                      "typeString": "struct UserOp"
                    }
                  }
                },
                {
                  "global": false,
                  "id": 2705,
                  "libraryName": {
                    "id": 2703,
                    "name": "ECDSA",
                    "nameLocations": ["359:5:14"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1718,
                    "src": "359:5:14"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "353:24:14",
                  "typeName": {
                    "id": 2704,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                },
                {
                  "constant": false,
                  "id": 2707,
                  "mutability": "mutable",
                  "name": "addressOwner",
                  "nameLocation": "391:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "383:20:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "passKeyOwner",
                  "nameLocation": "419:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "409:22:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                    "typeString": "struct PassKeyId"
                  },
                  "typeName": {
                    "id": 2709,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2708,
                      "name": "PassKeyId",
                      "nameLocations": ["409:9:14"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3577,
                      "src": "409:9:14"
                    },
                    "referencedDeclaration": 3577,
                    "src": "409:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                      "typeString": "struct PassKeyId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2712,
                  "mutability": "mutable",
                  "name": "isPassKeyOwnerEnabled",
                  "nameLocation": "443:21:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "438:26:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2711,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "479:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "471:13:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2720,
                    "nodeType": "Block",
                    "src": "505:39:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2717,
                            "name": "_disableInitializers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "515:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "515:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2719,
                        "nodeType": "ExpressionStatement",
                        "src": "515:22:14"
                      }
                    ]
                  },
                  "id": 2721,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2715,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "502:2:14"
                  },
                  "returnParameters": {
                    "id": 2716,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "505:0:14"
                  },
                  "scope": 3353,
                  "src": "491:53:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2728,
                    "nodeType": "Block",
                    "src": "631:36:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2726,
                          "name": "addressOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2707,
                          "src": "648:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2725,
                        "id": 2727,
                        "nodeType": "Return",
                        "src": "641:19:14"
                      }
                    ]
                  },
                  "functionSelector": "b627e20f",
                  "id": 2729,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAddressOwner",
                  "nameLocation": "583:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "598:2:14"
                  },
                  "returnParameters": {
                    "id": 2725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2724,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2729,
                        "src": "622:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2723,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "622:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "621:9:14"
                  },
                  "scope": 3353,
                  "src": "574:93:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2737,
                    "nodeType": "Block",
                    "src": "739:36:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2735,
                          "name": "passKeyOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2710,
                          "src": "756:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                            "typeString": "struct PassKeyId storage ref"
                          }
                        },
                        "functionReturnParameters": 2734,
                        "id": 2736,
                        "nodeType": "Return",
                        "src": "749:19:14"
                      }
                    ]
                  },
                  "functionSelector": "8fb41072",
                  "id": 2738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPassKeyOwner",
                  "nameLocation": "682:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2730,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "697:2:14"
                  },
                  "returnParameters": {
                    "id": 2734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2733,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2738,
                        "src": "721:16:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                          "typeString": "struct PassKeyId"
                        },
                        "typeName": {
                          "id": 2732,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2731,
                            "name": "PassKeyId",
                            "nameLocations": ["721:9:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3577,
                            "src": "721:9:14"
                          },
                          "referencedDeclaration": 3577,
                          "src": "721:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                            "typeString": "struct PassKeyId"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "720:18:14"
                  },
                  "scope": 3353,
                  "src": "673:102:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2745,
                    "nodeType": "Block",
                    "src": "839:45:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2743,
                          "name": "isPassKeyOwnerEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2712,
                          "src": "856:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2742,
                        "id": 2744,
                        "nodeType": "Return",
                        "src": "849:28:14"
                      }
                    ]
                  },
                  "functionSelector": "be9ef843",
                  "id": 2746,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "passKeyOwnerEnabled",
                  "nameLocation": "790:19:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2739,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "809:2:14"
                  },
                  "returnParameters": {
                    "id": 2742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2741,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2746,
                        "src": "833:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2740,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "833:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "832:6:14"
                  },
                  "scope": 3353,
                  "src": "781:103:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2753,
                    "nodeType": "Block",
                    "src": "940:29:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2751,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2714,
                          "src": "957:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2750,
                        "id": 2752,
                        "nodeType": "Return",
                        "src": "950:12:14"
                      }
                    ]
                  },
                  "functionSelector": "d087d288",
                  "id": 2754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNonce",
                  "nameLocation": "899:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2747,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "907:2:14"
                  },
                  "returnParameters": {
                    "id": 2750,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2749,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2754,
                        "src": "931:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2748,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:9:14"
                  },
                  "scope": 3353,
                  "src": "890:79:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2786,
                    "nodeType": "Block",
                    "src": "1040:426:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2760,
                                "name": "isPassKeyOwnerEnabled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2712,
                                "src": "1071:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 2761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1096:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1071:29:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636f756e743a20416c72656164792061646472657373206f776e657220656e61626c6564",
                              "id": 2763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1114:40:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6ea98b2aade4ee56b047f7fad4ff7b21701dfa2d616d441c124a19b48144b6c",
                                "typeString": "literal_string \"Account: Already address owner enabled\""
                              },
                              "value": "Account: Already address owner enabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6ea98b2aade4ee56b047f7fad4ff7b21701dfa2d616d441c124a19b48144b6c",
                                "typeString": "literal_string \"Account: Already address owner enabled\""
                              }
                            ],
                            "id": 2759,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1050:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1050:114:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2765,
                        "nodeType": "ExpressionStatement",
                        "src": "1050:114:14"
                      },
                      {
                        "assignments": [2767],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2767,
                            "mutability": "mutable",
                            "name": "newOwner",
                            "nameLocation": "1245:8:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2786,
                            "src": "1237:16:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1237:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2768,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1237:16:14"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1272:60:14",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1286:36:14",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "argument",
                                        "nodeType": "YulIdentifier",
                                        "src": "1308:8:14"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1318:2:14",
                                        "type": "",
                                        "value": "20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1304:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1304:17:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1298:5:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1298:24:14"
                              },
                              "variableNames": [
                                {
                                  "name": "newOwner",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:8:14"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2756,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1308:8:14",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2767,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1286:8:14",
                            "valueSize": 1
                          }
                        ],
                        "id": 2769,
                        "nodeType": "InlineAssembly",
                        "src": "1263:69:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1371:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 2773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1374:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "",
                                  "id": 2774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1377:2:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "id": 2771,
                                "name": "PassKeyId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3577,
                                "src": "1361:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_PassKeyId_$3577_storage_ptr_$",
                                  "typeString": "type(struct PassKeyId storage pointer)"
                                }
                              },
                              "id": 2775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1361:19:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            ],
                            "id": 2770,
                            "name": "_changePassKeyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2853,
                            "src": "1341:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$__$",
                              "typeString": "function (struct PassKeyId memory)"
                            }
                          },
                          "id": 2776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1341:40:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2777,
                        "nodeType": "ExpressionStatement",
                        "src": "1341:40:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2779,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2767,
                              "src": "1411:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2778,
                            "name": "_changeAddressOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2863,
                            "src": "1391:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1391:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2781,
                        "nodeType": "ExpressionStatement",
                        "src": "1391:29:14"
                      },
                      {
                        "expression": {
                          "id": 2784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2782,
                            "name": "isPassKeyOwnerEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2712,
                            "src": "1430:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1454:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1430:29:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2785,
                        "nodeType": "ExpressionStatement",
                        "src": "1430:29:14"
                      }
                    ]
                  },
                  "id": 2787,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeOwnershipToAddress",
                  "nameLocation": "984:24:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2756,
                        "mutability": "mutable",
                        "name": "argument",
                        "nameLocation": "1022:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2787,
                        "src": "1009:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2755,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1009:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1008:23:14"
                  },
                  "returnParameters": {
                    "id": 2758,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1040:0:14"
                  },
                  "scope": 3353,
                  "src": "975:491:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2841,
                    "nodeType": "Block",
                    "src": "1544:472:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2793,
                                "name": "isPassKeyOwnerEnabled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2712,
                                "src": "1575:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 2794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1600:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "1575:30:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636f756e743a20416c726561647920706173736b6579206f776e657220656e61626c6564",
                              "id": 2796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1619:40:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ade28ecbe05afbe0a16abe84a19982c52fced354a615b5ddebee48b939e04297",
                                "typeString": "literal_string \"Account: Already passkey owner enabled\""
                              },
                              "value": "Account: Already passkey owner enabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ade28ecbe05afbe0a16abe84a19982c52fced354a615b5ddebee48b939e04297",
                                "typeString": "literal_string \"Account: Already passkey owner enabled\""
                              }
                            ],
                            "id": 2792,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1554:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1554:115:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2798,
                        "nodeType": "ExpressionStatement",
                        "src": "1554:115:14"
                      },
                      {
                        "assignments": [2800, 2802, 2804],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2800,
                            "mutability": "mutable",
                            "name": "pubKeyX",
                            "nameLocation": "1688:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2841,
                            "src": "1680:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2799,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1680:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2802,
                            "mutability": "mutable",
                            "name": "pubKeyY",
                            "nameLocation": "1705:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2841,
                            "src": "1697:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2801,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1697:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2804,
                            "mutability": "mutable",
                            "name": "keyId",
                            "nameLocation": "1728:5:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2841,
                            "src": "1714:19:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 2803,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1714:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2816,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2807,
                              "name": "argument",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2789,
                              "src": "1761:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1784:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2808,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1784:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1793:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2810,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1793:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1802:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 2812,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1802:6:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 2814,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1783:26:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_string_storage_ptr_$_$",
                                "typeString": "tuple(type(uint256),type(uint256),type(string storage pointer))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_string_storage_ptr_$_$",
                                "typeString": "tuple(type(uint256),type(uint256),type(string storage pointer))"
                              }
                            ],
                            "expression": {
                              "id": 2805,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1737:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1741:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1737:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1737:82:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$",
                            "typeString": "tuple(uint256,uint256,string memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1679:140:14"
                      },
                      {
                        "assignments": [2819],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2819,
                            "mutability": "mutable",
                            "name": "newOwner",
                            "nameLocation": "1846:8:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2841,
                            "src": "1829:25:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                              "typeString": "struct PassKeyId"
                            },
                            "typeName": {
                              "id": 2818,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2817,
                                "name": "PassKeyId",
                                "nameLocations": ["1829:9:14"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3577,
                                "src": "1829:9:14"
                              },
                              "referencedDeclaration": 3577,
                              "src": "1829:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                                "typeString": "struct PassKeyId"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2825,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2821,
                              "name": "pubKeyX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2800,
                              "src": "1867:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2822,
                              "name": "pubKeyY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2802,
                              "src": "1876:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2823,
                              "name": "keyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2804,
                              "src": "1885:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2820,
                            "name": "PassKeyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3577,
                            "src": "1857:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_PassKeyId_$3577_storage_ptr_$",
                              "typeString": "type(struct PassKeyId storage pointer)"
                            }
                          },
                          "id": 2824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1857:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                            "typeString": "struct PassKeyId memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1829:62:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1929:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1921:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2827,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1921:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1921:10:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2826,
                            "name": "_changeAddressOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2863,
                            "src": "1901:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1901:31:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2832,
                        "nodeType": "ExpressionStatement",
                        "src": "1901:31:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2834,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2819,
                              "src": "1962:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            ],
                            "id": 2833,
                            "name": "_changePassKeyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2853,
                            "src": "1942:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$__$",
                              "typeString": "function (struct PassKeyId memory)"
                            }
                          },
                          "id": 2835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1942:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2836,
                        "nodeType": "ExpressionStatement",
                        "src": "1942:29:14"
                      },
                      {
                        "expression": {
                          "id": 2839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2837,
                            "name": "isPassKeyOwnerEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2712,
                            "src": "1981:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2005:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1981:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2840,
                        "nodeType": "ExpressionStatement",
                        "src": "1981:28:14"
                      }
                    ]
                  },
                  "id": 2842,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeOwnershipToPassKeyAddress",
                  "nameLocation": "1481:31:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2789,
                        "mutability": "mutable",
                        "name": "argument",
                        "nameLocation": "1526:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2842,
                        "src": "1513:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2788,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1513:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1512:23:14"
                  },
                  "returnParameters": {
                    "id": 2791,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1544:0:14"
                  },
                  "scope": 3353,
                  "src": "1472:544:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2852,
                    "nodeType": "Block",
                    "src": "2129:40:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2848,
                            "name": "passKeyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2710,
                            "src": "2139:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                              "typeString": "struct PassKeyId storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2849,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2845,
                            "src": "2154:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                              "typeString": "struct PassKeyId memory"
                            }
                          },
                          "src": "2139:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                            "typeString": "struct PassKeyId storage ref"
                          }
                        },
                        "id": 2851,
                        "nodeType": "ExpressionStatement",
                        "src": "2139:23:14"
                      }
                    ]
                  },
                  "id": 2853,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_changePassKeyOwner",
                  "nameLocation": "2074:19:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2845,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2111:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2853,
                        "src": "2094:25:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                          "typeString": "struct PassKeyId"
                        },
                        "typeName": {
                          "id": 2844,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2843,
                            "name": "PassKeyId",
                            "nameLocations": ["2094:9:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3577,
                            "src": "2094:9:14"
                          },
                          "referencedDeclaration": 3577,
                          "src": "2094:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                            "typeString": "struct PassKeyId"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2093:27:14"
                  },
                  "returnParameters": {
                    "id": 2847,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2129:0:14"
                  },
                  "scope": 3353,
                  "src": "2065:104:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2862,
                    "nodeType": "Block",
                    "src": "2230:40:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2858,
                            "name": "addressOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2707,
                            "src": "2240:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2859,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2855,
                            "src": "2255:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2240:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2861,
                        "nodeType": "ExpressionStatement",
                        "src": "2240:23:14"
                      }
                    ]
                  },
                  "id": 2863,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_changeAddressOwner",
                  "nameLocation": "2184:19:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2855,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2212:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2863,
                        "src": "2204:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2854,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2204:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2203:18:14"
                  },
                  "returnParameters": {
                    "id": 2857,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2230:0:14"
                  },
                  "scope": 3353,
                  "src": "2175:95:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2879,
                    "nodeType": "Block",
                    "src": "2349:75:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2871,
                            "name": "isPassKeyOwnerEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2712,
                            "src": "2359:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2383:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2359:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2874,
                        "nodeType": "ExpressionStatement",
                        "src": "2359:28:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2876,
                              "name": "anOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2866,
                              "src": "2409:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            ],
                            "id": 2875,
                            "name": "_initialize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2891,
                            "src": "2397:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$__$",
                              "typeString": "function (struct PassKeyId memory)"
                            }
                          },
                          "id": 2877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2397:20:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2878,
                        "nodeType": "ExpressionStatement",
                        "src": "2397:20:14"
                      }
                    ]
                  },
                  "functionSelector": "759a68c0",
                  "id": 2880,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2869,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2868,
                        "name": "initializer",
                        "nameLocations": ["2337:11:14"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 504,
                        "src": "2337:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:11:14"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "2285:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2867,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2866,
                        "mutability": "mutable",
                        "name": "anOwner",
                        "nameLocation": "2313:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2880,
                        "src": "2296:24:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                          "typeString": "struct PassKeyId"
                        },
                        "typeName": {
                          "id": 2865,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2864,
                            "name": "PassKeyId",
                            "nameLocations": ["2296:9:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3577,
                            "src": "2296:9:14"
                          },
                          "referencedDeclaration": 3577,
                          "src": "2296:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                            "typeString": "struct PassKeyId"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2295:26:14"
                  },
                  "returnParameters": {
                    "id": 2870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2349:0:14"
                  },
                  "scope": 3353,
                  "src": "2276:148:14",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2890,
                    "nodeType": "Block",
                    "src": "2494:39:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2886,
                            "name": "passKeyOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2710,
                            "src": "2504:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                              "typeString": "struct PassKeyId storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2887,
                            "name": "anOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2883,
                            "src": "2519:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                              "typeString": "struct PassKeyId memory"
                            }
                          },
                          "src": "2504:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                            "typeString": "struct PassKeyId storage ref"
                          }
                        },
                        "id": 2889,
                        "nodeType": "ExpressionStatement",
                        "src": "2504:22:14"
                      }
                    ]
                  },
                  "id": 2891,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_initialize",
                  "nameLocation": "2439:11:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2884,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2883,
                        "mutability": "mutable",
                        "name": "anOwner",
                        "nameLocation": "2468:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2891,
                        "src": "2451:24:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                          "typeString": "struct PassKeyId"
                        },
                        "typeName": {
                          "id": 2882,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2881,
                            "name": "PassKeyId",
                            "nameLocations": ["2451:9:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3577,
                            "src": "2451:9:14"
                          },
                          "referencedDeclaration": 3577,
                          "src": "2451:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                            "typeString": "struct PassKeyId"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2450:26:14"
                  },
                  "returnParameters": {
                    "id": 2885,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2494:0:14"
                  },
                  "scope": 3353,
                  "src": "2430:103:14",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2974,
                    "nodeType": "Block",
                    "src": "2636:809:14",
                    "statements": [
                      {
                        "assignments": [2898],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2898,
                            "mutability": "mutable",
                            "name": "sigVerification",
                            "nameLocation": "2691:15:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2974,
                            "src": "2683:23:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2897,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2683:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2902,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2900,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2894,
                              "src": "2725:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            ],
                            "id": 2899,
                            "name": "_validateUserOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3194,
                            "src": "2709:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UserOp_$4356_calldata_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct UserOp calldata) view returns (uint256)"
                            }
                          },
                          "id": 2901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2709:23:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2683:49:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2904,
                                "name": "sigVerification",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2898,
                                "src": "2750:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2769:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2750:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636f756e743a205369676e617475726520766572696669636174696f6e206661696c6564",
                              "id": 2907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2772:40:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e1d770bf5c1432fdc1f1cdef4b574f4afc7ec7d461e8909e9c76b9d3d064d3ee",
                                "typeString": "literal_string \"Account: Signature verification failed\""
                              },
                              "value": "Account: Signature verification failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e1d770bf5c1432fdc1f1cdef4b574f4afc7ec7d461e8909e9c76b9d3d064d3ee",
                                "typeString": "literal_string \"Account: Signature verification failed\""
                              }
                            ],
                            "id": 2903,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2742:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2742:71:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2909,
                        "nodeType": "ExpressionStatement",
                        "src": "2742:71:14"
                      },
                      {
                        "assignments": [2911],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2911,
                            "mutability": "mutable",
                            "name": "nonceVerification",
                            "nameLocation": "2857:17:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2974,
                            "src": "2849:25:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2910,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2849:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2915,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2913,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2894,
                              "src": "2892:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            ],
                            "id": 2912,
                            "name": "_validateNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3212,
                            "src": "2877:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UserOp_$4356_calldata_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct UserOp calldata) view returns (uint256)"
                            }
                          },
                          "id": 2914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2877:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2849:50:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2917,
                                "name": "nonceVerification",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2911,
                                "src": "2917:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2938:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2917:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636f756e743a204e6f6e636520766572696669636174696f6e206661696c6564",
                              "id": 2920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2941:36:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c85fa2bd6d894dd5c3a5d7983fc412dc7e09fddeef87c1fb3533b2261ee92cb",
                                "typeString": "literal_string \"Account: Nonce verification failed\""
                              },
                              "value": "Account: Nonce verification failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9c85fa2bd6d894dd5c3a5d7983fc412dc7e09fddeef87c1fb3533b2261ee92cb",
                                "typeString": "literal_string \"Account: Nonce verification failed\""
                              }
                            ],
                            "id": 2916,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2909:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2909:69:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2922,
                        "nodeType": "ExpressionStatement",
                        "src": "2909:69:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2923,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2894,
                              "src": "3011:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            },
                            "id": 2924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3018:12:14",
                            "memberName": "functionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4349,
                            "src": "3011:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3034:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3011:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2933,
                        "nodeType": "IfStatement",
                        "src": "3007:79:14",
                        "trueBody": {
                          "id": 2932,
                          "nodeType": "Block",
                          "src": "3037:49:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2928,
                                      "name": "userop",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2894,
                                      "src": "3059:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                        "typeString": "struct UserOp calldata"
                                      }
                                    },
                                    "id": 2929,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3066:8:14",
                                    "memberName": "argument",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4351,
                                    "src": "3059:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 2927,
                                  "name": "execute",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3006,
                                  "src": "3051:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory)"
                                  }
                                },
                                "id": 2930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3051:24:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2931,
                              "nodeType": "ExpressionStatement",
                              "src": "3051:24:14"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2934,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2894,
                              "src": "3099:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            },
                            "id": 2935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3106:12:14",
                            "memberName": "functionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4349,
                            "src": "3099:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3122:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3099:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2944,
                        "nodeType": "IfStatement",
                        "src": "3095:84:14",
                        "trueBody": {
                          "id": 2943,
                          "nodeType": "Block",
                          "src": "3125:54:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2939,
                                      "name": "userop",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2894,
                                      "src": "3152:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                        "typeString": "struct UserOp calldata"
                                      }
                                    },
                                    "id": 2940,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3159:8:14",
                                    "memberName": "argument",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4351,
                                    "src": "3152:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 2938,
                                  "name": "executeBatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3115,
                                  "src": "3139:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory)"
                                  }
                                },
                                "id": 2941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3139:29:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2942,
                              "nodeType": "ExpressionStatement",
                              "src": "3139:29:14"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2945,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2894,
                              "src": "3192:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            },
                            "id": 2946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3199:12:14",
                            "memberName": "functionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4349,
                            "src": "3192:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 2947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3215:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "3192:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2955,
                        "nodeType": "IfStatement",
                        "src": "3188:96:14",
                        "trueBody": {
                          "id": 2954,
                          "nodeType": "Block",
                          "src": "3218:66:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2950,
                                      "name": "userop",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2894,
                                      "src": "3257:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                        "typeString": "struct UserOp calldata"
                                      }
                                    },
                                    "id": 2951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3264:8:14",
                                    "memberName": "argument",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4351,
                                    "src": "3257:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 2949,
                                  "name": "changeOwnershipToAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2787,
                                  "src": "3232:24:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory)"
                                  }
                                },
                                "id": 2952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3232:41:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2953,
                              "nodeType": "ExpressionStatement",
                              "src": "3232:41:14"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2956,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2894,
                              "src": "3297:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            },
                            "id": 2957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3304:12:14",
                            "memberName": "functionType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4349,
                            "src": "3297:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 2958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3320:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "3297:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2966,
                        "nodeType": "IfStatement",
                        "src": "3293:103:14",
                        "trueBody": {
                          "id": 2965,
                          "nodeType": "Block",
                          "src": "3323:73:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2961,
                                      "name": "userop",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2894,
                                      "src": "3369:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                        "typeString": "struct UserOp calldata"
                                      }
                                    },
                                    "id": 2962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3376:8:14",
                                    "memberName": "argument",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4351,
                                    "src": "3369:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 2960,
                                  "name": "changeOwnershipToPassKeyAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2842,
                                  "src": "3337:31:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory)"
                                  }
                                },
                                "id": 2963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3337:48:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2964,
                              "nodeType": "ExpressionStatement",
                              "src": "3337:48:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2967,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2714,
                            "src": "3405:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2968,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2714,
                              "src": "3413:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 2969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3421:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3413:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3405:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2972,
                        "nodeType": "ExpressionStatement",
                        "src": "3405:17:14"
                      },
                      {
                        "functionReturnParameters": 2896,
                        "id": 2973,
                        "nodeType": "Return",
                        "src": "3432:7:14"
                      }
                    ]
                  },
                  "functionSelector": "f0f05cef",
                  "id": 2975,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "entrypoint",
                  "nameLocation": "2594:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2894,
                        "mutability": "mutable",
                        "name": "userop",
                        "nameLocation": "2621:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2975,
                        "src": "2605:22:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                          "typeString": "struct UserOp"
                        },
                        "typeName": {
                          "id": 2893,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2892,
                            "name": "UserOp",
                            "nameLocations": ["2605:6:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4356,
                            "src": "2605:6:14"
                          },
                          "referencedDeclaration": 4356,
                          "src": "2605:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOp_$4356_storage_ptr",
                            "typeString": "struct UserOp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2604:24:14"
                  },
                  "returnParameters": {
                    "id": 2896,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2636:0:14"
                  },
                  "scope": 3353,
                  "src": "2585:860:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3005,
                    "nodeType": "Block",
                    "src": "3591:183:14",
                    "statements": [
                      {
                        "assignments": [2982, 2984, 2986],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2982,
                            "mutability": "mutable",
                            "name": "dest",
                            "nameLocation": "3610:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3005,
                            "src": "3602:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2981,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3602:7:14",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2984,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "3624:5:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3005,
                            "src": "3616:13:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2983,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3616:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2986,
                            "mutability": "mutable",
                            "name": "func",
                            "nameLocation": "3644:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3005,
                            "src": "3631:17:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2985,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3631:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2998,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2989,
                              "name": "argument",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2978,
                              "src": "3676:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 2991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3699:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2990,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3699:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2993,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3708:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2992,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3708:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 2995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3717:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 2994,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3717:5:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 2996,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3698:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                "typeString": "tuple(type(address),type(uint256),type(bytes storage pointer))"
                              }
                            ],
                            "expression": {
                              "id": 2987,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3652:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3656:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3652:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3652:81:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(address payable,uint256,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3601:132:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3000,
                              "name": "dest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2982,
                              "src": "3749:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3001,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2984,
                              "src": "3755:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3002,
                              "name": "func",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2986,
                              "src": "3762:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2999,
                            "name": "_call",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3141,
                            "src": "3743:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory)"
                            }
                          },
                          "id": 3003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3743:24:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3004,
                        "nodeType": "ExpressionStatement",
                        "src": "3743:24:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2976,
                    "nodeType": "StructuredDocumentation",
                    "src": "3451:87:14",
                    "text": " execute a transaction (called directly from owner, or by entryPoint)"
                  },
                  "id": 3006,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "3552:7:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2978,
                        "mutability": "mutable",
                        "name": "argument",
                        "nameLocation": "3573:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3006,
                        "src": "3560:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2977,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3560:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3559:23:14"
                  },
                  "returnParameters": {
                    "id": 2980,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3591:0:14"
                  },
                  "scope": 3353,
                  "src": "3543:231:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3114,
                    "nodeType": "Block",
                    "src": "4001:654:14",
                    "statements": [
                      {
                        "assignments": [3016, 3019, 3022],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3016,
                            "mutability": "mutable",
                            "name": "dest",
                            "nameLocation": "4042:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3114,
                            "src": "4025:21:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3014,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4025:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3015,
                              "nodeType": "ArrayTypeName",
                              "src": "4025:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3019,
                            "mutability": "mutable",
                            "name": "value",
                            "nameLocation": "4077:5:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3114,
                            "src": "4060:22:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3017,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4060:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3018,
                              "nodeType": "ArrayTypeName",
                              "src": "4060:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3022,
                            "mutability": "mutable",
                            "name": "func",
                            "nameLocation": "4111:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3114,
                            "src": "4096:19:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                              "typeString": "bytes[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3020,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4096:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage_ptr",
                                  "typeString": "bytes"
                                }
                              },
                              "id": 3021,
                              "nodeType": "ArrayTypeName",
                              "src": "4096:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                                "typeString": "bytes[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3037,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3025,
                              "name": "argument",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3009,
                              "src": "4139:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "baseExpression": {
                                    "id": 3027,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4150:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3026,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4150:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3028,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4150:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                                    "typeString": "type(address[] memory)"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 3030,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4161:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 3029,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4161:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3031,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4161:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                    "typeString": "type(uint256[] memory)"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 3033,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4172:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 3032,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4172:5:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3034,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4172:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "type(bytes memory[] memory)"
                                  }
                                }
                              ],
                              "id": 3035,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4149:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                                "typeString": "tuple(type(address[] memory),type(uint256[] memory),type(bytes memory[] memory))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_$",
                                "typeString": "tuple(type(address[] memory),type(uint256[] memory),type(bytes memory[] memory))"
                              }
                            ],
                            "expression": {
                              "id": 3023,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4128:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4132:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "4128:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4128:53:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "tuple(address[] memory,uint256[] memory,bytes memory[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4011:170:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3039,
                                    "name": "dest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3016,
                                    "src": "4212:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3040,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4217:6:14",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4212:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3041,
                                    "name": "func",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3022,
                                    "src": "4227:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "bytes memory[] memory"
                                    }
                                  },
                                  "id": 3042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4232:6:14",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4227:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4212:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 3053,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3047,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3044,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3019,
                                          "src": "4259:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3045,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4265:6:14",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "4259:12:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 3046,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4275:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "4259:17:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3052,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3048,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3019,
                                          "src": "4280:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 3049,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4286:6:14",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "4280:12:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 3050,
                                          "name": "func",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3022,
                                          "src": "4296:4:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "bytes memory[] memory"
                                          }
                                        },
                                        "id": 3051,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4301:6:14",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "4296:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4280:27:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "4259:48:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 3054,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4258:50:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4212:96:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "77726f6e67206172726179206c656e67746873",
                              "id": 3056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4322:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e",
                                "typeString": "literal_string \"wrong array lengths\""
                              },
                              "value": "wrong array lengths"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_046f63b53432b31c38dcec6b5f05e3d65602d684f9163a89310aaaf94e08558e",
                                "typeString": "literal_string \"wrong array lengths\""
                              }
                            ],
                            "id": 3038,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4191:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4191:162:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3058,
                        "nodeType": "ExpressionStatement",
                        "src": "4191:162:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3059,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3019,
                              "src": "4367:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4373:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4367:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4383:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4367:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3112,
                          "nodeType": "Block",
                          "src": "4517:132:14",
                          "statements": [
                            {
                              "body": {
                                "id": 3110,
                                "nodeType": "Block",
                                "src": "4573:66:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 3099,
                                            "name": "dest",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3016,
                                            "src": "4597:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 3101,
                                          "indexExpression": {
                                            "id": 3100,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3088,
                                            "src": "4602:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4597:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 3102,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3019,
                                            "src": "4606:5:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 3104,
                                          "indexExpression": {
                                            "id": 3103,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3088,
                                            "src": "4612:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4606:8:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 3105,
                                            "name": "func",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3022,
                                            "src": "4616:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "bytes memory[] memory"
                                            }
                                          },
                                          "id": 3107,
                                          "indexExpression": {
                                            "id": 3106,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3088,
                                            "src": "4621:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4616:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 3098,
                                        "name": "_call",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3141,
                                        "src": "4591:5:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (address,uint256,bytes memory)"
                                        }
                                      },
                                      "id": 3108,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4591:33:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3109,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4591:33:14"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3091,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3088,
                                  "src": "4551:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3092,
                                    "name": "dest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3016,
                                    "src": "4555:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4560:6:14",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4555:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4551:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3111,
                              "initializationExpression": {
                                "assignments": [3088],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 3088,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "4544:1:14",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3111,
                                    "src": "4536:9:14",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 3087,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4536:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 3090,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 3089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4548:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "4536:13:14"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 3096,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "4568:3:14",
                                  "subExpression": {
                                    "id": 3095,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3088,
                                    "src": "4568:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3097,
                                "nodeType": "ExpressionStatement",
                                "src": "4568:3:14"
                              },
                              "nodeType": "ForStatement",
                              "src": "4531:108:14"
                            }
                          ]
                        },
                        "id": 3113,
                        "nodeType": "IfStatement",
                        "src": "4363:286:14",
                        "trueBody": {
                          "id": 3086,
                          "nodeType": "Block",
                          "src": "4386:125:14",
                          "statements": [
                            {
                              "body": {
                                "id": 3084,
                                "nodeType": "Block",
                                "src": "4442:59:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 3075,
                                            "name": "dest",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3016,
                                            "src": "4466:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 3077,
                                          "indexExpression": {
                                            "id": 3076,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3064,
                                            "src": "4471:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4466:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "hexValue": "30",
                                          "id": 3078,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4475:1:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 3079,
                                            "name": "func",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3022,
                                            "src": "4478:4:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "bytes memory[] memory"
                                            }
                                          },
                                          "id": 3081,
                                          "indexExpression": {
                                            "id": 3080,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3064,
                                            "src": "4483:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "4478:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 3074,
                                        "name": "_call",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3141,
                                        "src": "4460:5:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (address,uint256,bytes memory)"
                                        }
                                      },
                                      "id": 3082,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4460:26:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3083,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4460:26:14"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3067,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3064,
                                  "src": "4420:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3068,
                                    "name": "dest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3016,
                                    "src": "4424:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 3069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4429:6:14",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "4424:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4420:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3085,
                              "initializationExpression": {
                                "assignments": [3064],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 3064,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "4413:1:14",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3085,
                                    "src": "4405:9:14",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 3063,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4405:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 3066,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 3065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4417:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "4405:13:14"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 3072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "4437:3:14",
                                  "subExpression": {
                                    "id": 3071,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3064,
                                    "src": "4437:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3073,
                                "nodeType": "ExpressionStatement",
                                "src": "4437:3:14"
                              },
                              "nodeType": "ForStatement",
                              "src": "4400:101:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3007,
                    "nodeType": "StructuredDocumentation",
                    "src": "3780:163:14",
                    "text": " execute a sequence of transactions\n @dev to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value"
                  },
                  "id": 3115,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeBatch",
                  "nameLocation": "3957:12:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3009,
                        "mutability": "mutable",
                        "name": "argument",
                        "nameLocation": "3983:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3115,
                        "src": "3970:21:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3008,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3970:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3969:23:14"
                  },
                  "returnParameters": {
                    "id": 3011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4001:0:14"
                  },
                  "scope": 3353,
                  "src": "3948:707:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3140,
                    "nodeType": "Block",
                    "src": "4735:212:14",
                    "statements": [
                      {
                        "assignments": [3125, 3127],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3125,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4751:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3140,
                            "src": "4746:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3124,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4746:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3127,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "4773:6:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3140,
                            "src": "4760:19:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3126,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4760:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3134,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3132,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3121,
                              "src": "4809:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3128,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3117,
                                "src": "4783:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4790:4:14",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "4783:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 3131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": ["value"],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 3130,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3119,
                                "src": "4802:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "4783:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 3133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4783:31:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4745:69:14"
                      },
                      {
                        "condition": {
                          "id": 3136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4828:8:14",
                          "subExpression": {
                            "id": 3135,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3125,
                            "src": "4829:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3139,
                        "nodeType": "IfStatement",
                        "src": "4824:117:14",
                        "trueBody": {
                          "id": 3138,
                          "nodeType": "Block",
                          "src": "4838:103:14",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "4861:70:14",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "result",
                                              "nodeType": "YulIdentifier",
                                              "src": "4890:6:14"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4898:2:14",
                                              "type": "",
                                              "value": "32"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4886:3:14"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4886:15:14"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "result",
                                              "nodeType": "YulIdentifier",
                                              "src": "4909:6:14"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "4903:5:14"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4903:13:14"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4879:6:14"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4879:38:14"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4879:38:14"
                                  }
                                ]
                              },
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 3127,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4890:6:14",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 3127,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "4909:6:14",
                                  "valueSize": 1
                                }
                              ],
                              "id": 3137,
                              "nodeType": "InlineAssembly",
                              "src": "4852:79:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 3141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_call",
                  "nameLocation": "4670:5:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3117,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4684:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3141,
                        "src": "4676:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3119,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4700:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3141,
                        "src": "4692:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4692:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3121,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4720:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3141,
                        "src": "4707:17:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3120,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4707:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4675:50:14"
                  },
                  "returnParameters": {
                    "id": 3123,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4735:0:14"
                  },
                  "scope": 3353,
                  "src": "4661:286:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3193,
                    "nodeType": "Block",
                    "src": "5102:500:14",
                    "statements": [
                      {
                        "assignments": [3150],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3150,
                            "mutability": "mutable",
                            "name": "userOpHash",
                            "nameLocation": "5120:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3193,
                            "src": "5112:18:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3149,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5112:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3154,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3152,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3144,
                              "src": "5147:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            ],
                            "id": 3151,
                            "name": "getUserOpHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3348,
                            "src": "5133:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UserOp_$4356_calldata_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct UserOp calldata) view returns (bytes32)"
                            }
                          },
                          "id": 3153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5133:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5112:42:14"
                      },
                      {
                        "condition": {
                          "id": 3155,
                          "name": "isPassKeyOwnerEnabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2712,
                          "src": "5168:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3191,
                          "nodeType": "Block",
                          "src": "5425:171:14",
                          "statements": [
                            {
                              "assignments": [3174],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3174,
                                  "mutability": "mutable",
                                  "name": "hash",
                                  "nameLocation": "5447:4:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3191,
                                  "src": "5439:12:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 3173,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5439:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3178,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 3175,
                                    "name": "userOpHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3150,
                                    "src": "5454:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 3176,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5465:22:14",
                                  "memberName": "toEthSignedMessageHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1663,
                                  "src": "5454:33:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$",
                                    "typeString": "function (bytes32) pure returns (bytes32)"
                                  }
                                },
                                "id": 3177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5454:35:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5439:50:14"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3179,
                                  "name": "addressOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2707,
                                  "src": "5507:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3182,
                                        "name": "userop",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3144,
                                        "src": "5536:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                          "typeString": "struct UserOp calldata"
                                        }
                                      },
                                      "id": 3183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5543:9:14",
                                      "memberName": "signature",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4355,
                                      "src": "5536:16:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes calldata"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3180,
                                      "name": "hash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3174,
                                      "src": "5523:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 3181,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5528:7:14",
                                    "memberName": "recover",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1479,
                                    "src": "5523:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
                                      "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                    }
                                  },
                                  "id": 3184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5523:30:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "5507:46:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3188,
                              "nodeType": "IfStatement",
                              "src": "5503:60:14",
                              "trueBody": {
                                "expression": {
                                  "hexValue": "31",
                                  "id": 3186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5562:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "functionReturnParameters": 3148,
                                "id": 3187,
                                "nodeType": "Return",
                                "src": "5555:8:14"
                              }
                            },
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 3189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5584:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 3148,
                              "id": 3190,
                              "nodeType": "Return",
                              "src": "5577:8:14"
                            }
                          ]
                        },
                        "id": 3192,
                        "nodeType": "IfStatement",
                        "src": "5164:432:14",
                        "trueBody": {
                          "id": 3172,
                          "nodeType": "Block",
                          "src": "5191:228:14",
                          "statements": [
                            {
                              "assignments": [3157],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3157,
                                  "mutability": "mutable",
                                  "name": "isSigValid",
                                  "nameLocation": "5210:10:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3172,
                                  "src": "5205:15:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 3156,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5205:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3164,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3159,
                                      "name": "userop",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3144,
                                      "src": "5259:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                        "typeString": "struct UserOp calldata"
                                      }
                                    },
                                    "id": 3160,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5266:9:14",
                                    "memberName": "signature",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4355,
                                    "src": "5259:16:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  },
                                  {
                                    "id": 3161,
                                    "name": "userOpHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3150,
                                    "src": "5293:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 3162,
                                    "name": "passKeyOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2710,
                                    "src": "5321:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                                      "typeString": "struct PassKeyId storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_PassKeyId_$3577_storage",
                                      "typeString": "struct PassKeyId storage ref"
                                    }
                                  ],
                                  "id": 3158,
                                  "name": "validatePassKeySig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3324,
                                  "src": "5223:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes32_$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (bytes memory,bytes32,struct PassKeyId memory) view returns (bool)"
                                  }
                                },
                                "id": 3163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5223:124:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5205:142:14"
                            },
                            {
                              "condition": {
                                "id": 3166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "5365:11:14",
                                "subExpression": {
                                  "id": 3165,
                                  "name": "isSigValid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3157,
                                  "src": "5366:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3169,
                              "nodeType": "IfStatement",
                              "src": "5361:25:14",
                              "trueBody": {
                                "expression": {
                                  "hexValue": "31",
                                  "id": 3167,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5385:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "functionReturnParameters": 3148,
                                "id": 3168,
                                "nodeType": "Return",
                                "src": "5378:8:14"
                              }
                            },
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 3170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5407:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 3148,
                              "id": 3171,
                              "nodeType": "Return",
                              "src": "5400:8:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 3194,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateUserOp",
                  "nameLocation": "5016:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3144,
                        "mutability": "mutable",
                        "name": "userop",
                        "nameLocation": "5057:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3194,
                        "src": "5041:22:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                          "typeString": "struct UserOp"
                        },
                        "typeName": {
                          "id": 3143,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3142,
                            "name": "UserOp",
                            "nameLocations": ["5041:6:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4356,
                            "src": "5041:6:14"
                          },
                          "referencedDeclaration": 4356,
                          "src": "5041:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOp_$4356_storage_ptr",
                            "typeString": "struct UserOp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5031:38:14"
                  },
                  "returnParameters": {
                    "id": 3148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3147,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3194,
                        "src": "5093:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5093:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5092:9:14"
                  },
                  "scope": 3353,
                  "src": "5007:595:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3211,
                    "nodeType": "Block",
                    "src": "5745:70:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3202,
                              "name": "userop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3197,
                              "src": "5759:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                "typeString": "struct UserOp calldata"
                              }
                            },
                            "id": 3203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5766:5:14",
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4353,
                            "src": "5759:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3204,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2714,
                            "src": "5775:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5759:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3208,
                        "nodeType": "IfStatement",
                        "src": "5755:35:14",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 3206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5789:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 3201,
                          "id": 3207,
                          "nodeType": "Return",
                          "src": "5782:8:14"
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 3209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5807:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 3201,
                        "id": 3210,
                        "nodeType": "Return",
                        "src": "5800:8:14"
                      }
                    ]
                  },
                  "id": 3212,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_validateNonce",
                  "nameLocation": "5660:14:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3197,
                        "mutability": "mutable",
                        "name": "userop",
                        "nameLocation": "5700:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3212,
                        "src": "5684:22:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                          "typeString": "struct UserOp"
                        },
                        "typeName": {
                          "id": 3196,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3195,
                            "name": "UserOp",
                            "nameLocations": ["5684:6:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4356,
                            "src": "5684:6:14"
                          },
                          "referencedDeclaration": 4356,
                          "src": "5684:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOp_$4356_storage_ptr",
                            "typeString": "struct UserOp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5674:38:14"
                  },
                  "returnParameters": {
                    "id": 3201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3200,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3212,
                        "src": "5736:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5736:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5735:9:14"
                  },
                  "scope": 3353,
                  "src": "5651:164:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3323,
                    "nodeType": "Block",
                    "src": "5976:987:14",
                    "statements": [
                      {
                        "assignments": [3225, 3227, 3229, 3231, 3233, 3235],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3225,
                            "mutability": "mutable",
                            "name": "keyHash",
                            "nameLocation": "6008:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6000:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3224,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6000:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3227,
                            "mutability": "mutable",
                            "name": "sigx",
                            "nameLocation": "6037:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6029:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3226,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6029:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3229,
                            "mutability": "mutable",
                            "name": "sigy",
                            "nameLocation": "6063:4:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6055:12:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3228,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6055:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3231,
                            "mutability": "mutable",
                            "name": "authenticatorData",
                            "nameLocation": "6094:17:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6081:30:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3230,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6081:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3233,
                            "mutability": "mutable",
                            "name": "clientDataJSONPre",
                            "nameLocation": "6139:17:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6125:31:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3232,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "6125:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3235,
                            "mutability": "mutable",
                            "name": "clientDataJSONPost",
                            "nameLocation": "6184:18:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6170:32:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3234,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "6170:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3253,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3238,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3214,
                              "src": "6243:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 3240,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6271:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 3239,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6271:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6280:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3241,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6280:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6289:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3243,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6289:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6298:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 3245,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6298:5:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6305:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 3247,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6305:6:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6313:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 3249,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6313:6:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 3251,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6270:50:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$",
                                "typeString": "tuple(type(bytes32),type(uint256),type(uint256),type(bytes storage pointer),type(string storage pointer),type(string storage pointer))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$",
                                "typeString": "tuple(type(bytes32),type(uint256),type(uint256),type(bytes storage pointer),type(string storage pointer),type(string storage pointer))"
                              }
                            ],
                            "expression": {
                              "id": 3236,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6215:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6219:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6215:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6215:119:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
                            "typeString": "tuple(bytes32,uint256,uint256,bytes memory,string memory,string memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5986:348:14"
                      },
                      {
                        "assignments": [3255],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3255,
                            "mutability": "mutable",
                            "name": "execHashBase64",
                            "nameLocation": "6359:14:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6345:28:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3254,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "6345:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3264,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3261,
                                  "name": "execHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3216,
                                  "src": "6403:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 3259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6390:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 3258,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6390:5:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6396:6:14",
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "6390:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6390:22:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 3256,
                              "name": "Base64",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3568,
                              "src": "6376:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Base64_$3568_$",
                                "typeString": "type(library Base64)"
                              }
                            },
                            "id": 3257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6383:6:14",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3567,
                            "src": "6376:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (string memory)"
                            }
                          },
                          "id": 3263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6376:37:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6345:68:14"
                      },
                      {
                        "assignments": [3266],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3266,
                            "mutability": "mutable",
                            "name": "clientDataJSON",
                            "nameLocation": "6437:14:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6423:28:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3265,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "6423:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3274,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3270,
                              "name": "clientDataJSONPre",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3233,
                              "src": "6481:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3271,
                              "name": "execHashBase64",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3255,
                              "src": "6512:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3272,
                              "name": "clientDataJSONPost",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3235,
                              "src": "6540:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 3268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6454:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 3267,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "6454:6:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6461:6:14",
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "6454:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function () pure returns (string memory)"
                            }
                          },
                          "id": 3273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6454:114:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6423:145:14"
                      },
                      {
                        "assignments": [3276],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3276,
                            "mutability": "mutable",
                            "name": "clientHash",
                            "nameLocation": "6586:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6578:18:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3275,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6578:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3283,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3280,
                                  "name": "clientDataJSON",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3266,
                                  "src": "6612:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 3279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6606:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 3278,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6606:5:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6606:21:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3277,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -22,
                            "src": "6599:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6599:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6578:50:14"
                      },
                      {
                        "assignments": [3285],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3285,
                            "mutability": "mutable",
                            "name": "sigHash",
                            "nameLocation": "6646:7:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6638:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3284,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6638:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3294,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3290,
                                  "name": "authenticatorData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3231,
                                  "src": "6676:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 3291,
                                  "name": "clientHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3276,
                                  "src": "6695:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 3288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6663:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 3287,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6663:5:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6669:6:14",
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "6663:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6663:43:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3286,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -22,
                            "src": "6656:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6656:51:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6638:69:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3296,
                                    "name": "passkey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3219,
                                    "src": "6726:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                      "typeString": "struct PassKeyId memory"
                                    }
                                  },
                                  "id": 3297,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6734:7:14",
                                  "memberName": "pubKeyY",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3574,
                                  "src": "6726:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6745:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6726:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3300,
                                    "name": "passkey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3219,
                                    "src": "6750:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                      "typeString": "struct PassKeyId memory"
                                    }
                                  },
                                  "id": 3301,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6758:7:14",
                                  "memberName": "pubKeyY",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3574,
                                  "src": "6750:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6769:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6750:20:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6726:44:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4b6579206e6f7420666f756e64",
                              "id": 3305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6772:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a43b9424b10eeb4f05b3c31f20ae9b500023c8e0afaacb897d48553eb53545b4",
                                "typeString": "literal_string \"Key not found\""
                              },
                              "value": "Key not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a43b9424b10eeb4f05b3c31f20ae9b500023c8e0afaacb897d48553eb53545b4",
                                "typeString": "literal_string \"Key not found\""
                              }
                            ],
                            "id": 3295,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "6718:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6718:70:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3307,
                        "nodeType": "ExpressionStatement",
                        "src": "6718:70:14"
                      },
                      {
                        "assignments": [3309],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3309,
                            "mutability": "mutable",
                            "name": "isSigValid",
                            "nameLocation": "6803:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 3323,
                            "src": "6798:15:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3308,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "6798:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3320,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3312,
                              "name": "passkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3219,
                              "src": "6846:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            },
                            {
                              "id": 3313,
                              "name": "sigx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3227,
                              "src": "6867:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3314,
                              "name": "sigy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3229,
                              "src": "6885:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3317,
                                  "name": "sigHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3285,
                                  "src": "6911:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 3316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6903:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 3315,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6903:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6903:16:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3310,
                              "name": "Secp256r1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4345,
                              "src": "6816:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Secp256r1_$4345_$",
                                "typeString": "type(library Secp256r1)"
                              }
                            },
                            "id": 3311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6826:6:14",
                            "memberName": "Verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3656,
                            "src": "6816:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_PassKeyId_$3577_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (struct PassKeyId memory,uint256,uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 3319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6816:113:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6798:131:14"
                      },
                      {
                        "expression": {
                          "id": 3321,
                          "name": "isSigValid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3309,
                          "src": "6946:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3223,
                        "id": 3322,
                        "nodeType": "Return",
                        "src": "6939:17:14"
                      }
                    ]
                  },
                  "id": 3324,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "validatePassKeySig",
                  "nameLocation": "5830:18:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3214,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "5871:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3324,
                        "src": "5858:22:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3213,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5858:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3216,
                        "mutability": "mutable",
                        "name": "execHash",
                        "nameLocation": "5898:8:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3324,
                        "src": "5890:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3215,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5890:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3219,
                        "mutability": "mutable",
                        "name": "passkey",
                        "nameLocation": "5933:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3324,
                        "src": "5916:24:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                          "typeString": "struct PassKeyId"
                        },
                        "typeName": {
                          "id": 3218,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3217,
                            "name": "PassKeyId",
                            "nameLocations": ["5916:9:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3577,
                            "src": "5916:9:14"
                          },
                          "referencedDeclaration": 3577,
                          "src": "5916:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                            "typeString": "struct PassKeyId"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5848:98:14"
                  },
                  "returnParameters": {
                    "id": 3223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3324,
                        "src": "5970:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5970:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5969:6:14"
                  },
                  "scope": 3353,
                  "src": "5821:1142:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3347,
                    "nodeType": "Block",
                    "src": "7088:102:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 3335,
                                      "name": "userop",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3327,
                                      "src": "7138:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                        "typeString": "struct UserOp calldata"
                                      }
                                    },
                                    "id": 3336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7145:4:14",
                                    "memberName": "hash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4406,
                                    "src": "7138:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOp_$4356_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_UserOp_$4356_calldata_ptr_$",
                                      "typeString": "function (struct UserOp calldata) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 3337,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7138:13:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 3340,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "7161:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Account_$3353",
                                        "typeString": "contract Account"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Account_$3353",
                                        "typeString": "contract Account"
                                      }
                                    ],
                                    "id": 3339,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7153:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3338,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7153:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7153:13:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 3342,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7168:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3343,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7174:7:14",
                                  "memberName": "chainid",
                                  "nodeType": "MemberAccess",
                                  "src": "7168:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3333,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7127:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7131:6:14",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "7127:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7127:55:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3332,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "7117:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7117:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 3331,
                        "id": 3346,
                        "nodeType": "Return",
                        "src": "7098:85:14"
                      }
                    ]
                  },
                  "functionSelector": "fd5c8d72",
                  "id": 3348,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserOpHash",
                  "nameLocation": "7006:13:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3327,
                        "mutability": "mutable",
                        "name": "userop",
                        "nameLocation": "7045:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 3348,
                        "src": "7029:22:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                          "typeString": "struct UserOp"
                        },
                        "typeName": {
                          "id": 3326,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3325,
                            "name": "UserOp",
                            "nameLocations": ["7029:6:14"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4356,
                            "src": "7029:6:14"
                          },
                          "referencedDeclaration": 4356,
                          "src": "7029:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOp_$4356_storage_ptr",
                            "typeString": "struct UserOp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7019:38:14"
                  },
                  "returnParameters": {
                    "id": 3331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3330,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3348,
                        "src": "7079:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3329,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7079:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7078:9:14"
                  },
                  "scope": 3353,
                  "src": "6997:193:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3351,
                    "nodeType": "Block",
                    "src": "7272:2:14",
                    "statements": []
                  },
                  "id": 3352,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3349,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7252:2:14"
                  },
                  "returnParameters": {
                    "id": 3350,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7272:0:14"
                  },
                  "scope": 3353,
                  "src": "7245:29:14",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3354,
              "src": "281:6995:14",
              "usedErrors": []
            }
          ],
          "src": "36:7241:14"
        },
        "id": 14
      },
      "contracts/aa/AccountFactory.sol": {
        "ast": {
          "absolutePath": "contracts/aa/AccountFactory.sol",
          "exportedSymbols": {
            "Account": [3353],
            "AccountFactory": [3509],
            "Address": [932],
            "Base64": [3568],
            "Create2": [1013],
            "ECDSA": [1718],
            "ERC1967Proxy": [67],
            "ERC1967Upgrade": [371],
            "IBeacon": [433],
            "IERC1822Proxiable": [30],
            "IERC1967": [20],
            "Initializable": [602],
            "JPoint": [3584],
            "Math": [2584],
            "PassKeyId": [3577],
            "Proxy": [423],
            "Secp256r1": [4345],
            "SignedMath": [2689],
            "StorageSlot": [1123],
            "Strings": [1352],
            "UserOp": [4356],
            "UserOpLib": [4417]
          },
          "id": 3510,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3355,
              "literals": ["solidity", "^", "0.8", ".12"],
              "nodeType": "PragmaDirective",
              "src": "36:24:15"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
              "file": "@openzeppelin/contracts/utils/Create2.sol",
              "id": 3356,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3510,
              "sourceUnit": 1014,
              "src": "62:51:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
              "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
              "id": 3357,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3510,
              "sourceUnit": 68,
              "src": "114:64:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/aa/Account.sol",
              "file": "./Account.sol",
              "id": 3358,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3510,
              "sourceUnit": 3354,
              "src": "180:23:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/aa/utils/Secp256r1.sol",
              "file": "./utils/Secp256r1.sol",
              "id": 3359,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3510,
              "sourceUnit": 4346,
              "src": "204:31:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "AccountFactory",
              "contractDependencies": [67, 3353],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3509,
              "linearizedBaseContracts": [3509],
              "name": "AccountFactory",
              "nameLocation": "246:14:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "11464fbe",
                  "id": 3362,
                  "mutability": "immutable",
                  "name": "accountImplementation",
                  "nameLocation": "292:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3509,
                  "src": "267:46:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Account_$3353",
                    "typeString": "contract Account"
                  },
                  "typeName": {
                    "id": 3361,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3360,
                      "name": "Account",
                      "nameLocations": ["267:7:15"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3353,
                      "src": "267:7:15"
                    },
                    "referencedDeclaration": 3353,
                    "src": "267:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Account_$3353",
                      "typeString": "contract Account"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3372,
                    "nodeType": "Block",
                    "src": "334:54:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 3370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3365,
                            "name": "accountImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3362,
                            "src": "344:21:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Account_$3353",
                              "typeString": "contract Account"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "368:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Account_$3353_$",
                                "typeString": "function () returns (contract Account)"
                              },
                              "typeName": {
                                "id": 3367,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3366,
                                  "name": "Account",
                                  "nameLocations": ["372:7:15"],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3353,
                                  "src": "372:7:15"
                                },
                                "referencedDeclaration": 3353,
                                "src": "372:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Account_$3353",
                                  "typeString": "contract Account"
                                }
                              }
                            },
                            "id": 3369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "368:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Account_$3353",
                              "typeString": "contract Account"
                            }
                          },
                          "src": "344:37:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Account_$3353",
                            "typeString": "contract Account"
                          }
                        },
                        "id": 3371,
                        "nodeType": "ExpressionStatement",
                        "src": "344:37:15"
                      }
                    ]
                  },
                  "id": 3373,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3363,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "331:2:15"
                  },
                  "returnParameters": {
                    "id": 3364,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "334:0:15"
                  },
                  "scope": 3509,
                  "src": "320:68:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3452,
                    "nodeType": "Block",
                    "src": "927:523:15",
                    "statements": [
                      {
                        "assignments": [3390],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3390,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "954:5:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3452,
                            "src": "937:22:15",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                              "typeString": "struct PassKeyId"
                            },
                            "typeName": {
                              "id": 3389,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3388,
                                "name": "PassKeyId",
                                "nameLocations": ["937:9:15"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3577,
                                "src": "937:9:15"
                              },
                              "referencedDeclaration": 3577,
                              "src": "937:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                                "typeString": "struct PassKeyId"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3396,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3392,
                              "name": "pubKeyX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3376,
                              "src": "972:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3393,
                              "name": "pubKeyY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3378,
                              "src": "981:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3394,
                              "name": "keyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3380,
                              "src": "990:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3391,
                            "name": "PassKeyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3577,
                            "src": "962:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_PassKeyId_$3577_storage_ptr_$",
                              "typeString": "type(struct PassKeyId storage pointer)"
                            }
                          },
                          "id": 3395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "962:34:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                            "typeString": "struct PassKeyId memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "937:59:15"
                      },
                      {
                        "assignments": [3398],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3398,
                            "mutability": "mutable",
                            "name": "addr",
                            "nameLocation": "1014:4:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3452,
                            "src": "1006:12:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3397,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1006:7:15",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3405,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3400,
                              "name": "pubKeyX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3376,
                              "src": "1032:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3401,
                              "name": "pubKeyY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3378,
                              "src": "1041:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3402,
                              "name": "keyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3380,
                              "src": "1050:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3403,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3382,
                              "src": "1057:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3399,
                            "name": "getAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3508,
                            "src": "1021:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256,uint256,string memory,uint256) view returns (address)"
                            }
                          },
                          "id": 3404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1021:41:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1006:56:15"
                      },
                      {
                        "assignments": [3407],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3407,
                            "mutability": "mutable",
                            "name": "codeSize",
                            "nameLocation": "1077:8:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3452,
                            "src": "1072:13:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3406,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1072:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3411,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "id": 3408,
                              "name": "addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3398,
                              "src": "1088:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 3409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1093:4:15",
                            "memberName": "code",
                            "nodeType": "MemberAccess",
                            "src": "1088:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1098:6:15",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1088:16:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1072:32:15"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3412,
                            "name": "codeSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3407,
                            "src": "1118:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1129:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1118:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3423,
                        "nodeType": "IfStatement",
                        "src": "1114:72:15",
                        "trueBody": {
                          "id": 3422,
                          "nodeType": "Block",
                          "src": "1132:54:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3418,
                                        "name": "addr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3398,
                                        "src": "1169:4:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1161:8:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 3416,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1161:8:15",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1161:13:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 3415,
                                  "name": "Account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3353,
                                  "src": "1153:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Account_$3353_$",
                                    "typeString": "type(contract Account)"
                                  }
                                },
                                "id": 3420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1153:22:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Account_$3353",
                                  "typeString": "contract Account"
                                }
                              },
                              "functionReturnParameters": 3387,
                              "id": 3421,
                              "nodeType": "Return",
                              "src": "1146:29:15"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3424,
                            "name": "ret",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3386,
                            "src": "1195:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Account_$3353",
                              "typeString": "contract Account"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 3438,
                                            "name": "accountImplementation",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3362,
                                            "src": "1314:21:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Account_$3353",
                                              "typeString": "contract Account"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_Account_$3353",
                                              "typeString": "contract Account"
                                            }
                                          ],
                                          "id": 3437,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1306:7:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 3436,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1306:7:15",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 3439,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1306:30:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 3442,
                                              "name": "Account",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3353,
                                              "src": "1373:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_Account_$3353_$",
                                                "typeString": "type(contract Account)"
                                              }
                                            },
                                            "id": 3443,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "1381:10:15",
                                            "memberName": "initialize",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2880,
                                            "src": "1373:18:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$__$",
                                              "typeString": "function Account.initialize(struct PassKeyId memory)"
                                            }
                                          },
                                          {
                                            "components": [
                                              {
                                                "id": 3444,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3390,
                                                "src": "1394:5:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                                  "typeString": "struct PassKeyId memory"
                                                }
                                              }
                                            ],
                                            "id": 3445,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "1393:7:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                              "typeString": "struct PassKeyId memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$__$",
                                              "typeString": "function Account.initialize(struct PassKeyId memory)"
                                            },
                                            {
                                              "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                              "typeString": "struct PassKeyId memory"
                                            }
                                          ],
                                          "expression": {
                                            "id": 3440,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "1358:3:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 3441,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "1362:10:15",
                                          "memberName": "encodeCall",
                                          "nodeType": "MemberAccess",
                                          "src": "1358:14:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 3446,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1358:43:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 3430,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "1247:16:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$67_$",
                                          "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                        },
                                        "typeName": {
                                          "id": 3429,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 3428,
                                            "name": "ERC1967Proxy",
                                            "nameLocations": ["1251:12:15"],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 67,
                                            "src": "1251:12:15"
                                          },
                                          "referencedDeclaration": 67,
                                          "src": "1251:12:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC1967Proxy_$67",
                                            "typeString": "contract ERC1967Proxy"
                                          }
                                        }
                                      },
                                      "id": 3435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "names": ["salt"],
                                      "nodeType": "FunctionCallOptions",
                                      "options": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 3433,
                                              "name": "salt",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3382,
                                              "src": "1278:4:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 3432,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1270:7:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes32_$",
                                              "typeString": "type(bytes32)"
                                            },
                                            "typeName": {
                                              "id": 3431,
                                              "name": "bytes32",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "1270:7:15",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 3434,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1270:13:15",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "src": "1247:37:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$67_$salt",
                                        "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                      }
                                    },
                                    "id": 3447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1247:172:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$67",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$67",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  ],
                                  "id": 3427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1222:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 3426,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1222:8:15",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1222:211:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 3425,
                              "name": "Account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3353,
                              "src": "1201:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Account_$3353_$",
                                "typeString": "type(contract Account)"
                              }
                            },
                            "id": 3449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1201:242:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Account_$3353",
                              "typeString": "contract Account"
                            }
                          },
                          "src": "1195:248:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Account_$3353",
                            "typeString": "contract Account"
                          }
                        },
                        "id": 3451,
                        "nodeType": "ExpressionStatement",
                        "src": "1195:248:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3374,
                    "nodeType": "StructuredDocumentation",
                    "src": "394:369:15",
                    "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
                  },
                  "functionSelector": "c8cb55ae",
                  "id": 3453,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createAccount",
                  "nameLocation": "777:13:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3376,
                        "mutability": "mutable",
                        "name": "pubKeyX",
                        "nameLocation": "808:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3453,
                        "src": "800:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "800:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3378,
                        "mutability": "mutable",
                        "name": "pubKeyY",
                        "nameLocation": "833:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3453,
                        "src": "825:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "825:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3380,
                        "mutability": "mutable",
                        "name": "keyId",
                        "nameLocation": "864:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3453,
                        "src": "850:19:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3379,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3382,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "887:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3453,
                        "src": "879:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3381,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "879:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "790:107:15"
                  },
                  "returnParameters": {
                    "id": 3387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3386,
                        "mutability": "mutable",
                        "name": "ret",
                        "nameLocation": "922:3:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3453,
                        "src": "914:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Account_$3353",
                          "typeString": "contract Account"
                        },
                        "typeName": {
                          "id": 3385,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3384,
                            "name": "Account",
                            "nameLocations": ["914:7:15"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3353,
                            "src": "914:7:15"
                          },
                          "referencedDeclaration": 3353,
                          "src": "914:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Account_$3353",
                            "typeString": "contract Account"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "913:13:15"
                  },
                  "scope": 3509,
                  "src": "768:682:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3507,
                    "nodeType": "Block",
                    "src": "1732:530:15",
                    "statements": [
                      {
                        "assignments": [3469],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3469,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "1759:5:15",
                            "nodeType": "VariableDeclaration",
                            "scope": 3507,
                            "src": "1742:22:15",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                              "typeString": "struct PassKeyId"
                            },
                            "typeName": {
                              "id": 3468,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3467,
                                "name": "PassKeyId",
                                "nameLocations": ["1742:9:15"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3577,
                                "src": "1742:9:15"
                              },
                              "referencedDeclaration": 3577,
                              "src": "1742:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                                "typeString": "struct PassKeyId"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3475,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3471,
                              "name": "pubKeyX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3456,
                              "src": "1777:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3472,
                              "name": "pubKeyY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3458,
                              "src": "1786:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3473,
                              "name": "keyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3460,
                              "src": "1795:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 3470,
                            "name": "PassKeyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3577,
                            "src": "1767:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_PassKeyId_$3577_storage_ptr_$",
                              "typeString": "type(struct PassKeyId storage pointer)"
                            }
                          },
                          "id": 3474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1767:34:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                            "typeString": "struct PassKeyId memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1742:59:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3480,
                                  "name": "salt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3462,
                                  "src": "1879:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1871:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 3478,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1871:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1871:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 3486,
                                            "name": "ERC1967Proxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 67,
                                            "src": "1980:12:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$67_$",
                                              "typeString": "type(contract ERC1967Proxy)"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$67_$",
                                              "typeString": "type(contract ERC1967Proxy)"
                                            }
                                          ],
                                          "id": 3485,
                                          "name": "type",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -27,
                                          "src": "1975:4:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 3487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1975:18:15",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$67",
                                          "typeString": "type(contract ERC1967Proxy)"
                                        }
                                      },
                                      "id": 3488,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1994:12:15",
                                      "memberName": "creationCode",
                                      "nodeType": "MemberAccess",
                                      "src": "1975:31:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 3493,
                                              "name": "accountImplementation",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3362,
                                              "src": "2080:21:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Account_$3353",
                                                "typeString": "contract Account"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Account_$3353",
                                                "typeString": "contract Account"
                                              }
                                            ],
                                            "id": 3492,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2072:7:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 3491,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2072:7:15",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 3494,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2072:30:15",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 3497,
                                                "name": "Account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3353,
                                                "src": "2147:7:15",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_Account_$3353_$",
                                                  "typeString": "type(contract Account)"
                                                }
                                              },
                                              "id": 3498,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "2155:10:15",
                                              "memberName": "initialize",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2880,
                                              "src": "2147:18:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$__$",
                                                "typeString": "function Account.initialize(struct PassKeyId memory)"
                                              }
                                            },
                                            {
                                              "components": [
                                                {
                                                  "id": 3499,
                                                  "name": "owner",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3469,
                                                  "src": "2168:5:15",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                                    "typeString": "struct PassKeyId memory"
                                                  }
                                                }
                                              ],
                                              "id": 3500,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "2167:7:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                                "typeString": "struct PassKeyId memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_function_declaration_nonpayable$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$__$",
                                                "typeString": "function Account.initialize(struct PassKeyId memory)"
                                              },
                                              {
                                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                                "typeString": "struct PassKeyId memory"
                                              }
                                            ],
                                            "expression": {
                                              "id": 3495,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "2132:3:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 3496,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberLocation": "2136:10:15",
                                            "memberName": "encodeCall",
                                            "nodeType": "MemberAccess",
                                            "src": "2132:14:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 3501,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2132:43:15",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "expression": {
                                          "id": 3489,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "2032:3:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 3490,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2036:6:15",
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "src": "2032:10:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 3502,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2032:169:15",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3483,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1933:3:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 3484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1937:12:15",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1933:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 3503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1933:290:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 3482,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1902:9:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1902:339:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 3476,
                              "name": "Create2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "1831:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Create2_$1013_$",
                                "typeString": "type(library Create2)"
                              }
                            },
                            "id": 3477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1839:14:15",
                            "memberName": "computeAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 998,
                            "src": "1831:22:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes32) view returns (address)"
                            }
                          },
                          "id": 3505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1831:424:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 3466,
                        "id": 3506,
                        "nodeType": "Return",
                        "src": "1812:443:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3454,
                    "nodeType": "StructuredDocumentation",
                    "src": "1456:114:15",
                    "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
                  },
                  "functionSelector": "cac8cfc2",
                  "id": 3508,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAddress",
                  "nameLocation": "1584:10:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3456,
                        "mutability": "mutable",
                        "name": "pubKeyX",
                        "nameLocation": "1612:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3508,
                        "src": "1604:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1604:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3458,
                        "mutability": "mutable",
                        "name": "pubKeyY",
                        "nameLocation": "1637:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3508,
                        "src": "1629:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3457,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1629:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3460,
                        "mutability": "mutable",
                        "name": "keyId",
                        "nameLocation": "1668:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3508,
                        "src": "1654:19:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3459,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1654:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3462,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "1691:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 3508,
                        "src": "1683:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1683:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1594:107:15"
                  },
                  "returnParameters": {
                    "id": 3466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3465,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3508,
                        "src": "1723:7:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1723:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1722:9:15"
                  },
                  "scope": 3509,
                  "src": "1575:687:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3510,
              "src": "237:2027:15",
              "usedErrors": []
            }
          ],
          "src": "36:2229:15"
        },
        "id": 15
      },
      "contracts/aa/utils/Base64.sol": {
        "ast": {
          "absolutePath": "contracts/aa/utils/Base64.sol",
          "exportedSymbols": { "Base64": [3568] },
          "id": 3569,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3511,
              "literals": ["solidity", "0.8", ".19"],
              "nodeType": "PragmaDirective",
              "src": "158:23:16"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Base64",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 3512,
                "nodeType": "StructuredDocumentation",
                "src": "183:185:16",
                "text": " @dev Provides a set of functions to operate with Base64 strings.\n  modified for base64url https://datatracker.ietf.org/doc/html/rfc4648#section-5\n _Available since v4.5._"
              },
              "fullyImplemented": true,
              "id": 3568,
              "linearizedBaseContracts": [3568],
              "name": "Base64",
              "nameLocation": "377:6:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 3513,
                    "nodeType": "StructuredDocumentation",
                    "src": "390:54:16",
                    "text": " @dev Base64 Encoding/Decoding Table"
                  },
                  "id": 3516,
                  "mutability": "constant",
                  "name": "_TABLE",
                  "nameLocation": "474:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3568,
                  "src": "449:108:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3514,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f",
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "491:66:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5f7e6d3cba140c1411e96b7033571a229a3135b5c436a9698b398a19a1c64b50",
                      "typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\""
                    },
                    "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3566,
                    "nodeType": "Block",
                    "src": "724:3133:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3524,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3519,
                              "src": "941:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 3525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "946:6:16",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "941:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "956:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "941:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "documentation": " Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol",
                        "id": 3530,
                        "nodeType": "IfStatement",
                        "src": "937:31:16",
                        "trueBody": {
                          "expression": {
                            "hexValue": "",
                            "id": 3528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "966:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "functionReturnParameters": 3523,
                          "id": 3529,
                          "nodeType": "Return",
                          "src": "959:9:16"
                        }
                      },
                      {
                        "assignments": [3532],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3532,
                            "mutability": "mutable",
                            "name": "table",
                            "nameLocation": "1032:5:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3566,
                            "src": "1018:19:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3531,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1018:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3534,
                        "initialValue": {
                          "id": 3533,
                          "name": "_TABLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3516,
                          "src": "1040:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1018:28:16"
                      },
                      {
                        "assignments": [3536],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3536,
                            "mutability": "mutable",
                            "name": "newlength",
                            "nameLocation": "1457:9:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3566,
                            "src": "1449:17:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3535,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1449:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3544,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3537,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3519,
                                    "src": "1470:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 3538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1475:6:16",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "1470:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "38",
                                  "id": 3539,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1484:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "1470:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3541,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1469:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 3542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1489:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "1469:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1449:41:16"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3545,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3519,
                                "src": "1504:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 3546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1509:6:16",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "1504:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "hexValue": "36",
                              "id": 3547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1518:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "src": "1504:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1522:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1504:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3555,
                        "nodeType": "IfStatement",
                        "src": "1500:61:16",
                        "trueBody": {
                          "id": 3554,
                          "nodeType": "Block",
                          "src": "1525:36:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 3552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1539:11:16",
                                "subExpression": {
                                  "id": 3551,
                                  "name": "newlength",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3536,
                                  "src": "1539:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3553,
                              "nodeType": "ExpressionStatement",
                              "src": "1539:11:16"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [3557],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3557,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "1584:6:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3566,
                            "src": "1570:20:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 3556,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1570:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3562,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3560,
                              "name": "newlength",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3536,
                              "src": "1604:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1593:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory)"
                            },
                            "typeName": {
                              "id": 3558,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1597:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            }
                          },
                          "id": 3561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1593:21:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1570:44:16"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1677:2150:16",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1762:29:16",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "table",
                                    "nodeType": "YulIdentifier",
                                    "src": "1782:5:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1789:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1778:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1778:13:16"
                              },
                              "variables": [
                                {
                                  "name": "tablePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1766:8:16",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1861:32:16",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "result",
                                    "nodeType": "YulIdentifier",
                                    "src": "1882:6:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1890:2:16",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1878:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1878:15:16"
                              },
                              "variables": [
                                {
                                  "name": "resultPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1865:9:16",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2167:1650:16",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2220:26:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dataPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2235:7:16"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2244:1:16",
                                          "type": "",
                                          "value": "3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2231:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2231:15:16"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dataPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2220:7:16"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2263:27:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dataPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2282:7:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2276:5:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2276:14:16"
                                    },
                                    "variables": [
                                      {
                                        "name": "input",
                                        "nodeType": "YulTypedName",
                                        "src": "2267:5:16",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2895:9:16"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tablePtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2936:8:16"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "2954:2:16",
                                                          "type": "",
                                                          "value": "18"
                                                        },
                                                        {
                                                          "name": "input",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2958:5:16"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "shr",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2950:3:16"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "2950:14:16"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2966:4:16",
                                                      "type": "",
                                                      "value": "0x3F"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "and",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2946:3:16"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2946:25:16"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2932:3:16"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2932:40:16"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2926:5:16"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2926:47:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore8",
                                        "nodeType": "YulIdentifier",
                                        "src": "2866:7:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2866:125:16"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2866:125:16"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3008:30:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3025:9:16"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3036:1:16",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3021:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3021:17:16"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3008:9:16"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3148:9:16"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tablePtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3189:8:16"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "3207:2:16",
                                                          "type": "",
                                                          "value": "12"
                                                        },
                                                        {
                                                          "name": "input",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3211:5:16"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "shr",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3203:3:16"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "3203:14:16"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3219:4:16",
                                                      "type": "",
                                                      "value": "0x3F"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "and",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3199:3:16"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3199:25:16"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3185:3:16"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3185:40:16"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3179:5:16"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3179:47:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3119:7:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3119:125:16"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3119:125:16"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3261:30:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3278:9:16"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3289:1:16",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3274:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3274:17:16"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3261:9:16"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3401:9:16"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tablePtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3442:8:16"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "3460:1:16",
                                                          "type": "",
                                                          "value": "6"
                                                        },
                                                        {
                                                          "name": "input",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3463:5:16"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "shr",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3456:3:16"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "3456:13:16"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3471:4:16",
                                                      "type": "",
                                                      "value": "0x3F"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "and",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3452:3:16"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3452:24:16"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3438:3:16"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3438:39:16"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3432:5:16"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3432:46:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3372:7:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3372:124:16"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3372:124:16"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3513:30:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3530:9:16"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3541:1:16",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3526:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3526:17:16"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3513:9:16"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3632:9:16"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "tablePtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3653:8:16"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "input",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3667:5:16"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3674:4:16",
                                                      "type": "",
                                                      "value": "0x3F"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "and",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3663:3:16"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3663:16:16"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3649:3:16"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3649:31:16"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3643:5:16"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3643:38:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore8",
                                        "nodeType": "YulIdentifier",
                                        "src": "3624:7:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3624:58:16"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3624:58:16"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3699:30:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3716:9:16"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3727:1:16",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3712:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3712:17:16"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3699:9:16"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "dataPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2133:7:16"
                                  },
                                  {
                                    "name": "endPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2142:6:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2130:2:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2130:19:16"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2150:16:16",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2025:104:16",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2043:19:16",
                                    "value": {
                                      "name": "data",
                                      "nodeType": "YulIdentifier",
                                      "src": "2058:4:16"
                                    },
                                    "variables": [
                                      {
                                        "name": "dataPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "2047:7:16",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2079:36:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "2097:4:16"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "data",
                                              "nodeType": "YulIdentifier",
                                              "src": "2109:4:16"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2103:5:16"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2103:11:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2093:3:16"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2093:22:16"
                                    },
                                    "variables": [
                                      {
                                        "name": "endPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "2083:6:16",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "2021:1796:16"
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 3519,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2058:4:16",
                            "valueSize": 1
                          },
                          {
                            "declaration": 3519,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2097:4:16",
                            "valueSize": 1
                          },
                          {
                            "declaration": 3519,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2109:4:16",
                            "valueSize": 1
                          },
                          {
                            "declaration": 3557,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1882:6:16",
                            "valueSize": 1
                          },
                          {
                            "declaration": 3532,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1782:5:16",
                            "valueSize": 1
                          }
                        ],
                        "id": 3563,
                        "nodeType": "InlineAssembly",
                        "src": "1668:2159:16"
                      },
                      {
                        "expression": {
                          "id": 3564,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3557,
                          "src": "3844:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 3523,
                        "id": 3565,
                        "nodeType": "Return",
                        "src": "3837:13:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3517,
                    "nodeType": "StructuredDocumentation",
                    "src": "564:82:16",
                    "text": " @dev Converts a `bytes` to its Bytes64 `string` representation."
                  },
                  "id": 3567,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "660:6:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3520,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3519,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "680:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 3567,
                        "src": "667:17:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3518,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:19:16"
                  },
                  "returnParameters": {
                    "id": 3523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3522,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3567,
                        "src": "709:13:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3521,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:15:16"
                  },
                  "scope": 3568,
                  "src": "651:3206:16",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 3569,
              "src": "369:3490:16",
              "usedErrors": []
            }
          ],
          "src": "158:3702:16"
        },
        "id": 16
      },
      "contracts/aa/utils/Secp256r1.sol": {
        "ast": {
          "absolutePath": "contracts/aa/utils/Secp256r1.sol",
          "exportedSymbols": {
            "JPoint": [3584],
            "PassKeyId": [3577],
            "Secp256r1": [4345]
          },
          "id": 4346,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3570,
              "literals": ["solidity", "0.8", ".19"],
              "nodeType": "PragmaDirective",
              "src": "36:23:17"
            },
            {
              "canonicalName": "PassKeyId",
              "id": 3577,
              "members": [
                {
                  "constant": false,
                  "id": 3572,
                  "mutability": "mutable",
                  "name": "pubKeyX",
                  "nameLocation": "456:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "448:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3574,
                  "mutability": "mutable",
                  "name": "pubKeyY",
                  "nameLocation": "477:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "469:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3576,
                  "mutability": "mutable",
                  "name": "keyId",
                  "nameLocation": "497:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "490:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3575,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "PassKeyId",
              "nameLocation": "432:9:17",
              "nodeType": "StructDefinition",
              "scope": 4346,
              "src": "425:80:17",
              "visibility": "public"
            },
            {
              "canonicalName": "JPoint",
              "id": 3584,
              "members": [
                {
                  "constant": false,
                  "id": 3579,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "535:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3584,
                  "src": "527:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3581,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "550:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3584,
                  "src": "542:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3583,
                  "mutability": "mutable",
                  "name": "z",
                  "nameLocation": "565:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3584,
                  "src": "557:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "JPoint",
              "nameLocation": "514:6:17",
              "nodeType": "StructDefinition",
              "scope": 4346,
              "src": "507:62:17",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Secp256r1",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 4345,
              "linearizedBaseContracts": [4345],
              "name": "Secp256r1",
              "nameLocation": "579:9:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 3587,
                  "mutability": "constant",
                  "name": "gx",
                  "nameLocation": "612:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4345,
                  "src": "595:96:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "307836423137443146324531324334323437463842434536453536334134343046323737303337443831324445423333413046344131333934354438393843323936",
                    "id": 3586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "625:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_48439561293906451759052585252797914202762949526041747995844080717082404635286_by_1",
                      "typeString": "int_const 4843...(69 digits omitted)...5286"
                    },
                    "value": "0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 3590,
                  "mutability": "constant",
                  "name": "gy",
                  "nameLocation": "714:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4345,
                  "src": "697:96:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "307834464533343245324645314137463942384545374542344137433046394531363242434533333537364233313545434543424236343036383337424635314635",
                    "id": 3589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "727:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_36134250956749795798585127919587881956611106672985015071877198253568414405109_by_1",
                      "typeString": "int_const 3613...(69 digits omitted)...5109"
                    },
                    "value": "0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "functionSelector": "91327ec6",
                  "id": 3593,
                  "mutability": "constant",
                  "name": "pp",
                  "nameLocation": "823:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4345,
                  "src": "799:103:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "307846464646464646463030303030303031303030303030303030303030303030303030303030303030464646464646464646464646464646464646464646464646",
                    "id": 3592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "836:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089210356248762697446949407573530086143415290314195533631308867097853951_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...3951"
                    },
                    "value": "0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "72a4c30f",
                  "id": 3596,
                  "mutability": "constant",
                  "name": "nn",
                  "nameLocation": "933:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4345,
                  "src": "909:103:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "307846464646464646463030303030303030464646464646464646464646464646464243453646414144413731373945383446334239434143324643363332353531",
                    "id": 3595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "946:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089210356248762697446949407573529996955224135760342422259061068512044369_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...4369"
                    },
                    "value": "0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 3599,
                  "mutability": "constant",
                  "name": "a",
                  "nameLocation": "1035:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4345,
                  "src": "1018:95:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "307846464646464646463030303030303031303030303030303030303030303030303030303030303030464646464646464646464646464646464646464646464643",
                    "id": 3598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1047:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_115792089210356248762697446949407573530086143415290314195533631308867097853948_by_1",
                      "typeString": "int_const 1157...(70 digits omitted)...3948"
                    },
                    "value": "0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 3602,
                  "mutability": "constant",
                  "name": "b",
                  "nameLocation": "1136:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4345,
                  "src": "1119:95:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "307835414336333544384141334139334537423345424244353537363938383642433635314430364230434335334230463633424345334333453237443236303442",
                    "id": 3601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1148:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_41058363725152142129326129780047268409114441015993725554835256314039467401291_by_1",
                      "typeString": "int_const 4105...(69 digits omitted)...1291"
                    },
                    "value": "0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 3605,
                  "mutability": "constant",
                  "name": "MOST_SIGNIFICANT",
                  "nameLocation": "1237:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4345,
                  "src": "1220:110:17",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "307863303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 3604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1264:66:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_86844066927987146567678238756515930889952488499230423029593188005934847229952_by_1",
                      "typeString": "int_const 8684...(69 digits omitted)...9952"
                    },
                    "value": "0xc000000000000000000000000000000000000000000000000000000000000000"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3655,
                    "nodeType": "Block",
                    "src": "1766:305:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3619,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3610,
                                  "src": "1780:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3620,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1785:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1780:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3622,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3612,
                                  "src": "1790:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1795:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1790:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1780:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3626,
                                "name": "r",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3610,
                                "src": "1800:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3627,
                                "name": "nn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3596,
                                "src": "1805:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1800:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1780:27:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3630,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3612,
                              "src": "1811:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 3631,
                              "name": "nn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "1816:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1811:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1780:38:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3637,
                        "nodeType": "IfStatement",
                        "src": "1776:163:17",
                        "trueBody": {
                          "id": 3636,
                          "nodeType": "Block",
                          "src": "1820:119:17",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 3634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1923:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 3618,
                              "id": 3635,
                              "nodeType": "Return",
                              "src": "1916:12:17"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [3643],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3643,
                            "mutability": "mutable",
                            "name": "points",
                            "nameLocation": "1967:6:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3655,
                            "src": "1949:24:17",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                              "typeString": "struct JPoint[16]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 3641,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 3640,
                                  "name": "JPoint",
                                  "nameLocations": ["1949:6:17"],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 3584,
                                  "src": "1949:6:17"
                                },
                                "referencedDeclaration": 3584,
                                "src": "1949:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                                  "typeString": "struct JPoint"
                                }
                              },
                              "id": 3642,
                              "length": {
                                "hexValue": "3136",
                                "id": 3639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1956:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_16_by_1",
                                  "typeString": "int_const 16"
                                },
                                "value": "16"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "1949:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_storage_$16_storage_ptr",
                                "typeString": "struct JPoint[16]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3647,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3645,
                              "name": "passKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3608,
                              "src": "2002:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                "typeString": "struct PassKeyId memory"
                              }
                            ],
                            "id": 3644,
                            "name": "_preComputeJacobianPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4075,
                            "src": "1976:25:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_PassKeyId_$3577_memory_ptr_$returns$_t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr_$",
                              "typeString": "function (struct PassKeyId memory) pure returns (struct JPoint memory[16] memory)"
                            }
                          },
                          "id": 3646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1976:34:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                            "typeString": "struct JPoint memory[16] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1949:61:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3649,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3643,
                              "src": "2048:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            {
                              "id": 3650,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3610,
                              "src": "2056:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3651,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3612,
                              "src": "2059:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3652,
                              "name": "e",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3614,
                              "src": "2062:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3648,
                            "name": "VerifyWithPrecompute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3728,
                            "src": "2027:20:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (struct JPoint memory[16] memory,uint256,uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 3653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2027:37:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3618,
                        "id": 3654,
                        "nodeType": "Return",
                        "src": "2020:44:17"
                      }
                    ]
                  },
                  "id": 3656,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "Verify",
                  "nameLocation": "1642:6:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3608,
                        "mutability": "mutable",
                        "name": "passKey",
                        "nameLocation": "1675:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3656,
                        "src": "1658:24:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                          "typeString": "struct PassKeyId"
                        },
                        "typeName": {
                          "id": 3607,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3606,
                            "name": "PassKeyId",
                            "nameLocations": ["1658:9:17"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3577,
                            "src": "1658:9:17"
                          },
                          "referencedDeclaration": 3577,
                          "src": "1658:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                            "typeString": "struct PassKeyId"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3610,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1697:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3656,
                        "src": "1692:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3609,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1692:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3612,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1713:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3656,
                        "src": "1708:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3611,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1708:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3614,
                        "mutability": "mutable",
                        "name": "e",
                        "nameLocation": "1729:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3656,
                        "src": "1724:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3613,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1724:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1648:88:17"
                  },
                  "returnParameters": {
                    "id": 3618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3617,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3656,
                        "src": "1760:4:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3616,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1760:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1759:6:17"
                  },
                  "scope": 4345,
                  "src": "1633:438:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3727,
                    "nodeType": "Block",
                    "src": "2224:298:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3672,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3663,
                              "src": "2238:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 3673,
                              "name": "nn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "2243:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2238:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3675,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3665,
                              "src": "2249:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 3676,
                              "name": "nn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "2254:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2249:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2238:18:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3682,
                        "nodeType": "IfStatement",
                        "src": "2234:61:17",
                        "trueBody": {
                          "id": 3681,
                          "nodeType": "Block",
                          "src": "2258:37:17",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 3679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2279:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 3671,
                              "id": 3680,
                              "nodeType": "Return",
                              "src": "2272:12:17"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [3684],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3684,
                            "mutability": "mutable",
                            "name": "w",
                            "nameLocation": "2310:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3727,
                            "src": "2305:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3683,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2305:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3689,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3686,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3665,
                              "src": "2324:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3687,
                              "name": "nn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "2327:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3685,
                            "name": "_primemod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4331,
                            "src": "2314:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 3688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2314:16:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2305:25:17"
                      },
                      {
                        "assignments": [3691],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3691,
                            "mutability": "mutable",
                            "name": "u1",
                            "nameLocation": "2346:2:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3727,
                            "src": "2341:7:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3690,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2341:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3697,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3693,
                              "name": "e",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3667,
                              "src": "2358:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3694,
                              "name": "w",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3684,
                              "src": "2361:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3695,
                              "name": "nn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "2364:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3692,
                            "name": "mulmod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -16,
                            "src": "2351:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2351:16:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2341:26:17"
                      },
                      {
                        "assignments": [3699],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3699,
                            "mutability": "mutable",
                            "name": "u2",
                            "nameLocation": "2382:2:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3727,
                            "src": "2377:7:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3698,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2377:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3705,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3701,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3663,
                              "src": "2394:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3702,
                              "name": "w",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3684,
                              "src": "2397:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3703,
                              "name": "nn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3596,
                              "src": "2400:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3700,
                            "name": "mulmod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -16,
                            "src": "2387:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 3704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2387:16:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2377:26:17"
                      },
                      {
                        "assignments": [3707],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3707,
                            "mutability": "mutable",
                            "name": "x",
                            "nameLocation": "2419:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3727,
                            "src": "2414:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3706,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2414:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3708,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2414:6:17"
                      },
                      {
                        "assignments": [3710],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3710,
                            "mutability": "mutable",
                            "name": "y",
                            "nameLocation": "2435:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3727,
                            "src": "2430:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3709,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2430:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3711,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2430:6:17"
                      },
                      {
                        "expression": {
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3712,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3707,
                                "src": "2448:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3713,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3710,
                                "src": "2451:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3714,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2447:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3716,
                                "name": "points",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3661,
                                "src": "2475:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                  "typeString": "struct JPoint memory[16] memory"
                                }
                              },
                              {
                                "id": 3717,
                                "name": "u1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3691,
                                "src": "2483:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3718,
                                "name": "u2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3699,
                                "src": "2487:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                  "typeString": "struct JPoint memory[16] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3715,
                              "name": "ShamirMultJacobian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3868,
                              "src": "2456:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (struct JPoint memory[16] memory,uint256,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2456:34:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "2447:43:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3721,
                        "nodeType": "ExpressionStatement",
                        "src": "2447:43:17"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3722,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3707,
                                "src": "2508:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 3723,
                                "name": "r",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3663,
                                "src": "2513:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2508:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 3725,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2507:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 3671,
                        "id": 3726,
                        "nodeType": "Return",
                        "src": "2500:15:17"
                      }
                    ]
                  },
                  "id": 3728,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "VerifyWithPrecompute",
                  "nameLocation": "2086:20:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3668,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3661,
                        "mutability": "mutable",
                        "name": "points",
                        "nameLocation": "2134:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "2116:24:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                          "typeString": "struct JPoint[16]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3658,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3657,
                              "name": "JPoint",
                              "nameLocations": ["2116:6:17"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3584,
                              "src": "2116:6:17"
                            },
                            "referencedDeclaration": 3584,
                            "src": "2116:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                              "typeString": "struct JPoint"
                            }
                          },
                          "id": 3660,
                          "length": {
                            "hexValue": "3136",
                            "id": 3659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2123:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_16_by_1",
                              "typeString": "int_const 16"
                            },
                            "value": "16"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "2116:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_storage_$16_storage_ptr",
                            "typeString": "struct JPoint[16]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3663,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2155:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "2150:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3662,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2150:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3665,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "2171:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "2166:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3664,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2166:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3667,
                        "mutability": "mutable",
                        "name": "e",
                        "nameLocation": "2187:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "2182:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3666,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2182:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2106:88:17"
                  },
                  "returnParameters": {
                    "id": 3671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3670,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3728,
                        "src": "2218:4:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3669,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2218:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2217:6:17"
                  },
                  "scope": 4345,
                  "src": "2077:445:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3867,
                    "nodeType": "Block",
                    "src": "3078:848:17",
                    "statements": [
                      {
                        "assignments": [3745],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3745,
                            "mutability": "mutable",
                            "name": "x",
                            "nameLocation": "3093:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3867,
                            "src": "3088:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3744,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3088:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3747,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3097:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3088:10:17"
                      },
                      {
                        "assignments": [3749],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3749,
                            "mutability": "mutable",
                            "name": "y",
                            "nameLocation": "3113:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3867,
                            "src": "3108:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3748,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3108:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3751,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3117:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3108:10:17"
                      },
                      {
                        "assignments": [3753],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3753,
                            "mutability": "mutable",
                            "name": "z",
                            "nameLocation": "3133:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3867,
                            "src": "3128:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3752,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3128:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3755,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3137:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3128:10:17"
                      },
                      {
                        "assignments": [3757],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3757,
                            "mutability": "mutable",
                            "name": "bits",
                            "nameLocation": "3153:4:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3867,
                            "src": "3148:9:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3756,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3148:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3759,
                        "initialValue": {
                          "hexValue": "313238",
                          "id": 3758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3160:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_128_by_1",
                            "typeString": "int_const 128"
                          },
                          "value": "128"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3148:15:17"
                      },
                      {
                        "assignments": [3761],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3761,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "3178:5:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 3867,
                            "src": "3173:10:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3760,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3173:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3763,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3186:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3173:14:17"
                      },
                      {
                        "body": {
                          "id": 3851,
                          "nodeType": "Block",
                          "src": "3215:635:17",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3767,
                                  "name": "z",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3753,
                                  "src": "3233:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3237:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3233:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3793,
                              "nodeType": "IfStatement",
                              "src": "3229:150:17",
                              "trueBody": {
                                "id": 3792,
                                "nodeType": "Block",
                                "src": "3240:139:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3779,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "id": 3770,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3745,
                                            "src": "3259:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3771,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3749,
                                            "src": "3262:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3772,
                                            "name": "z",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3753,
                                            "src": "3265:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3773,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "3258:9:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 3775,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3745,
                                            "src": "3294:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3776,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3749,
                                            "src": "3297:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3777,
                                            "name": "z",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3753,
                                            "src": "3300:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 3774,
                                          "name": "_modifiedJacobianDouble",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4309,
                                          "src": "3270:23:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
                                          }
                                        },
                                        "id": 3778,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3270:32:17",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "src": "3258:44:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3780,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3258:44:17"
                                  },
                                  {
                                    "expression": {
                                      "id": 3790,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "id": 3781,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3745,
                                            "src": "3321:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3782,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3749,
                                            "src": "3324:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3783,
                                            "name": "z",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3753,
                                            "src": "3327:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3784,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "3320:9:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 3786,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3745,
                                            "src": "3356:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3787,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3749,
                                            "src": "3359:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3788,
                                            "name": "z",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3753,
                                            "src": "3362:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 3785,
                                          "name": "_modifiedJacobianDouble",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4309,
                                          "src": "3332:23:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
                                          }
                                        },
                                        "id": 3789,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3332:32:17",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "src": "3320:44:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3791,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3320:44:17"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 3810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3794,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3761,
                                  "src": "3392:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3800,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3797,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 3795,
                                                "name": "u1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3735,
                                                "src": "3418:2:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "&",
                                              "rightExpression": {
                                                "id": 3796,
                                                "name": "MOST_SIGNIFICANT",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3605,
                                                "src": "3423:16:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3418:21:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 3798,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "3417:23:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">>",
                                        "rightExpression": {
                                          "hexValue": "323532",
                                          "id": 3799,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3444:3:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_252_by_1",
                                            "typeString": "int_const 252"
                                          },
                                          "value": "252"
                                        },
                                        "src": "3417:30:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 3801,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3416:32:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "|",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3807,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3804,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 3802,
                                                "name": "u2",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3737,
                                                "src": "3469:2:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "&",
                                              "rightExpression": {
                                                "id": 3803,
                                                "name": "MOST_SIGNIFICANT",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3605,
                                                "src": "3474:16:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3469:21:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 3805,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "3468:23:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">>",
                                        "rightExpression": {
                                          "hexValue": "323534",
                                          "id": 3806,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3495:3:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_254_by_1",
                                            "typeString": "int_const 254"
                                          },
                                          "value": "254"
                                        },
                                        "src": "3468:30:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 3808,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3467:32:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3416:83:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3392:107:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3811,
                              "nodeType": "ExpressionStatement",
                              "src": "3392:107:17"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3812,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3761,
                                  "src": "3517:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3525:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3517:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3839,
                              "nodeType": "IfStatement",
                              "src": "3513:263:17",
                              "trueBody": {
                                "id": 3838,
                                "nodeType": "Block",
                                "src": "3528:248:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "components": [
                                          {
                                            "id": 3815,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3745,
                                            "src": "3547:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3816,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3749,
                                            "src": "3550:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3817,
                                            "name": "z",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3753,
                                            "src": "3553:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3818,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "TupleExpression",
                                        "src": "3546:9:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 3820,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3745,
                                            "src": "3585:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3821,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3749,
                                            "src": "3608:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3822,
                                            "name": "z",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3753,
                                            "src": "3631:1:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 3823,
                                                "name": "points",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3733,
                                                "src": "3654:6:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                                  "typeString": "struct JPoint memory[16] memory"
                                                }
                                              },
                                              "id": 3825,
                                              "indexExpression": {
                                                "id": 3824,
                                                "name": "index",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3761,
                                                "src": "3661:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3654:13:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                                "typeString": "struct JPoint memory"
                                              }
                                            },
                                            "id": 3826,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3668:1:17",
                                            "memberName": "x",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3579,
                                            "src": "3654:15:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 3827,
                                                "name": "points",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3733,
                                                "src": "3691:6:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                                  "typeString": "struct JPoint memory[16] memory"
                                                }
                                              },
                                              "id": 3829,
                                              "indexExpression": {
                                                "id": 3828,
                                                "name": "index",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3761,
                                                "src": "3698:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3691:13:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                                "typeString": "struct JPoint memory"
                                              }
                                            },
                                            "id": 3830,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3705:1:17",
                                            "memberName": "y",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3581,
                                            "src": "3691:15:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 3831,
                                                "name": "points",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3733,
                                                "src": "3728:6:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                                  "typeString": "struct JPoint memory[16] memory"
                                                }
                                              },
                                              "id": 3833,
                                              "indexExpression": {
                                                "id": 3832,
                                                "name": "index",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3761,
                                                "src": "3735:5:17",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3728:13:17",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                                "typeString": "struct JPoint memory"
                                              }
                                            },
                                            "id": 3834,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3742:1:17",
                                            "memberName": "z",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3583,
                                            "src": "3728:15:17",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 3819,
                                          "name": "_jAdd",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4292,
                                          "src": "3558:5:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                            "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
                                          }
                                        },
                                        "id": 3835,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3558:203:17",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                          "typeString": "tuple(uint256,uint256,uint256)"
                                        }
                                      },
                                      "src": "3546:215:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3837,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3546:215:17"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 3842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3840,
                                  "name": "u1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3735,
                                  "src": "3789:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "<<=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 3841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3796:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "3789:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3843,
                              "nodeType": "ExpressionStatement",
                              "src": "3789:8:17"
                            },
                            {
                              "expression": {
                                "id": 3846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3844,
                                  "name": "u2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3737,
                                  "src": "3811:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "<<=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 3845,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3818:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "3811:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3847,
                              "nodeType": "ExpressionStatement",
                              "src": "3811:8:17"
                            },
                            {
                              "expression": {
                                "id": 3849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "3833:6:17",
                                "subExpression": {
                                  "id": 3848,
                                  "name": "bits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3757,
                                  "src": "3833:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3850,
                              "nodeType": "ExpressionStatement",
                              "src": "3833:6:17"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3764,
                            "name": "bits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3757,
                            "src": "3205:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3212:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3205:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3852,
                        "nodeType": "WhileStatement",
                        "src": "3198:652:17"
                      },
                      {
                        "expression": {
                          "id": 3861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 3853,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3745,
                                "src": "3860:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3854,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3749,
                                "src": "3863:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3855,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3859:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3857,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3745,
                                "src": "3888:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3858,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3749,
                                "src": "3891:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3859,
                                "name": "z",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3753,
                                "src": "3894:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3856,
                              "name": "_affineFromJacobian",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4220,
                              "src": "3868:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256,uint256)"
                              }
                            },
                            "id": 3860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3868:28:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "3859:37:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3862,
                        "nodeType": "ExpressionStatement",
                        "src": "3859:37:17"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 3863,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3745,
                              "src": "3914:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3864,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3749,
                              "src": "3917:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3865,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3913:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 3743,
                        "id": 3866,
                        "nodeType": "Return",
                        "src": "3906:13:17"
                      }
                    ]
                  },
                  "id": 3868,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ShamirMultJacobian",
                  "nameLocation": "2950:18:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3738,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3733,
                        "mutability": "mutable",
                        "name": "points",
                        "nameLocation": "2996:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3868,
                        "src": "2978:24:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                          "typeString": "struct JPoint[16]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3730,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3729,
                              "name": "JPoint",
                              "nameLocations": ["2978:6:17"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3584,
                              "src": "2978:6:17"
                            },
                            "referencedDeclaration": 3584,
                            "src": "2978:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                              "typeString": "struct JPoint"
                            }
                          },
                          "id": 3732,
                          "length": {
                            "hexValue": "3136",
                            "id": 3731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2985:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_16_by_1",
                              "typeString": "int_const 16"
                            },
                            "value": "16"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "2978:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_storage_$16_storage_ptr",
                            "typeString": "struct JPoint[16]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3735,
                        "mutability": "mutable",
                        "name": "u1",
                        "nameLocation": "3017:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3868,
                        "src": "3012:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3734,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3737,
                        "mutability": "mutable",
                        "name": "u2",
                        "nameLocation": "3034:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 3868,
                        "src": "3029:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3736,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3029:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2968:74:17"
                  },
                  "returnParameters": {
                    "id": 3743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3740,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3868,
                        "src": "3066:4:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3739,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3066:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3742,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3868,
                        "src": "3072:4:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3741,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3072:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3065:12:17"
                  },
                  "scope": 4345,
                  "src": "2941:985:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4074,
                    "nodeType": "Block",
                    "src": "4056:1325:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 3887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3879,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4494:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3881,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 3880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4501:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4494:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4513:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 3884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4516:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 3885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4519:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3882,
                              "name": "JPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3584,
                              "src": "4506:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_JPoint_$3584_storage_ptr_$",
                                "typeString": "type(struct JPoint storage pointer)"
                              }
                            },
                            "id": 3886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4506:15:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4494:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3888,
                        "nodeType": "ExpressionStatement",
                        "src": "4494:27:17"
                      },
                      {
                        "expression": {
                          "id": 3899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3889,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4531:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3891,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 3890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4538:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4531:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3893,
                                  "name": "passKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3871,
                                  "src": "4550:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                    "typeString": "struct PassKeyId memory"
                                  }
                                },
                                "id": 3894,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4558:7:17",
                                "memberName": "pubKeyX",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3572,
                                "src": "4550:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3895,
                                  "name": "passKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3871,
                                  "src": "4567:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                                    "typeString": "struct PassKeyId memory"
                                  }
                                },
                                "id": 3896,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4575:7:17",
                                "memberName": "pubKeyY",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3574,
                                "src": "4567:15:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 3897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4584:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 3892,
                              "name": "JPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3584,
                              "src": "4543:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_JPoint_$3584_storage_ptr_$",
                                "typeString": "type(struct JPoint storage pointer)"
                              }
                            },
                            "id": 3898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4543:43:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4531:55:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3900,
                        "nodeType": "ExpressionStatement",
                        "src": "4531:55:17"
                      },
                      {
                        "expression": {
                          "id": 3909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3901,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4602:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3903,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 3902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4609:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4602:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3905,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4628:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3907,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 3906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4635:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4628:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3904,
                              "name": "_jPointDouble",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4162,
                              "src": "4614:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 3908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4614:24:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4602:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3910,
                        "nodeType": "ExpressionStatement",
                        "src": "4602:36:17"
                      },
                      {
                        "expression": {
                          "id": 3922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3911,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4648:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3913,
                            "indexExpression": {
                              "hexValue": "33",
                              "id": 3912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4655:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4648:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3915,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4671:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3917,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 3916,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4678:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4671:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3918,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4682:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3920,
                                "indexExpression": {
                                  "hexValue": "32",
                                  "id": 3919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4689:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4682:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3914,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "4660:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 3921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4660:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4648:44:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3923,
                        "nodeType": "ExpressionStatement",
                        "src": "4648:44:17"
                      },
                      {
                        "expression": {
                          "id": 3932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3924,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4703:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3926,
                            "indexExpression": {
                              "hexValue": "34",
                              "id": 3925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4710:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4703:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3928,
                                "name": "gx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3587,
                                "src": "4722:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 3929,
                                "name": "gy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3590,
                                "src": "4726:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "31",
                                "id": 3930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4730:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 3927,
                              "name": "JPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3584,
                              "src": "4715:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_JPoint_$3584_storage_ptr_$",
                                "typeString": "type(struct JPoint storage pointer)"
                              }
                            },
                            "id": 3931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4715:17:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4703:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3933,
                        "nodeType": "ExpressionStatement",
                        "src": "4703:29:17"
                      },
                      {
                        "expression": {
                          "id": 3945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3934,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4757:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3936,
                            "indexExpression": {
                              "hexValue": "35",
                              "id": 3935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4764:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4757:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3938,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4780:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3940,
                                "indexExpression": {
                                  "hexValue": "34",
                                  "id": 3939,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4787:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4780:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3941,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4791:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3943,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 3942,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4798:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4791:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3937,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "4769:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 3944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4769:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4757:44:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3946,
                        "nodeType": "ExpressionStatement",
                        "src": "4757:44:17"
                      },
                      {
                        "expression": {
                          "id": 3958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3947,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4811:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3949,
                            "indexExpression": {
                              "hexValue": "36",
                              "id": 3948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4818:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4811:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3951,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4834:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3953,
                                "indexExpression": {
                                  "hexValue": "34",
                                  "id": 3952,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4841:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4834:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3954,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4845:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3956,
                                "indexExpression": {
                                  "hexValue": "32",
                                  "id": 3955,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4852:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4845:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3950,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "4823:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 3957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4823:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4811:44:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3959,
                        "nodeType": "ExpressionStatement",
                        "src": "4811:44:17"
                      },
                      {
                        "expression": {
                          "id": 3971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3960,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4865:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3962,
                            "indexExpression": {
                              "hexValue": "37",
                              "id": 3961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4872:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_7_by_1",
                                "typeString": "int_const 7"
                              },
                              "value": "7"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4865:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3964,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4888:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3966,
                                "indexExpression": {
                                  "hexValue": "34",
                                  "id": 3965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4895:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4888:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3967,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4899:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3969,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 3968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4906:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4899:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3963,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "4877:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 3970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4877:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4865:44:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3972,
                        "nodeType": "ExpressionStatement",
                        "src": "4865:44:17"
                      },
                      {
                        "expression": {
                          "id": 3981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3973,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4920:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3975,
                            "indexExpression": {
                              "hexValue": "38",
                              "id": 3974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4927:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              },
                              "value": "8"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4920:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3977,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "4946:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3979,
                                "indexExpression": {
                                  "hexValue": "34",
                                  "id": 3978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4953:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4946:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3976,
                              "name": "_jPointDouble",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4162,
                              "src": "4932:13:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 3980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4932:24:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4920:36:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3982,
                        "nodeType": "ExpressionStatement",
                        "src": "4920:36:17"
                      },
                      {
                        "expression": {
                          "id": 3994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3983,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "4981:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3985,
                            "indexExpression": {
                              "hexValue": "39",
                              "id": 3984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4988:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4981:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 3987,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5004:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3989,
                                "indexExpression": {
                                  "hexValue": "38",
                                  "id": 3988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5011:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5004:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 3990,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5015:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 3992,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 3991,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5022:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5015:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3986,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "4993:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 3993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4993:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "4981:44:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 3995,
                        "nodeType": "ExpressionStatement",
                        "src": "4981:44:17"
                      },
                      {
                        "expression": {
                          "id": 4007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3996,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "5035:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 3998,
                            "indexExpression": {
                              "hexValue": "3130",
                              "id": 3997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5042:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5035:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4000,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5059:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4002,
                                "indexExpression": {
                                  "hexValue": "38",
                                  "id": 4001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5066:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5059:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 4003,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5070:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4005,
                                "indexExpression": {
                                  "hexValue": "32",
                                  "id": 4004,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5077:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5070:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 3999,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "5048:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 4006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5048:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "5035:45:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 4008,
                        "nodeType": "ExpressionStatement",
                        "src": "5035:45:17"
                      },
                      {
                        "expression": {
                          "id": 4020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4009,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "5090:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 4011,
                            "indexExpression": {
                              "hexValue": "3131",
                              "id": 4010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5097:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_11_by_1",
                                "typeString": "int_const 11"
                              },
                              "value": "11"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5090:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4013,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5114:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4015,
                                "indexExpression": {
                                  "hexValue": "38",
                                  "id": 4014,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5121:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5114:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 4016,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5125:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4018,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 4017,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5132:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5125:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 4012,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "5103:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 4019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5103:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "5090:45:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 4021,
                        "nodeType": "ExpressionStatement",
                        "src": "5090:45:17"
                      },
                      {
                        "expression": {
                          "id": 4033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4022,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "5146:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 4024,
                            "indexExpression": {
                              "hexValue": "3132",
                              "id": 4023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5153:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_12_by_1",
                                "typeString": "int_const 12"
                              },
                              "value": "12"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5146:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4026,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5170:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4028,
                                "indexExpression": {
                                  "hexValue": "34",
                                  "id": 4027,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5177:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5170:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 4029,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5181:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4031,
                                "indexExpression": {
                                  "hexValue": "38",
                                  "id": 4030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5188:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5181:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 4025,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "5159:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 4032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5159:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "5146:45:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 4034,
                        "nodeType": "ExpressionStatement",
                        "src": "5146:45:17"
                      },
                      {
                        "expression": {
                          "id": 4046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4035,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "5216:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 4037,
                            "indexExpression": {
                              "hexValue": "3133",
                              "id": 4036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5223:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_13_by_1",
                                "typeString": "int_const 13"
                              },
                              "value": "13"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5216:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4039,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5240:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4041,
                                "indexExpression": {
                                  "hexValue": "3132",
                                  "id": 4040,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5247:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_12_by_1",
                                    "typeString": "int_const 12"
                                  },
                                  "value": "12"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5240:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 4042,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5252:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4044,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 4043,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5259:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5252:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 4038,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "5229:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 4045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5229:33:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "5216:46:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 4047,
                        "nodeType": "ExpressionStatement",
                        "src": "5216:46:17"
                      },
                      {
                        "expression": {
                          "id": 4059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4048,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "5272:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 4050,
                            "indexExpression": {
                              "hexValue": "3134",
                              "id": 4049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5279:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_14_by_1",
                                "typeString": "int_const 14"
                              },
                              "value": "14"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5272:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4052,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5296:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4054,
                                "indexExpression": {
                                  "hexValue": "3132",
                                  "id": 4053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5303:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_12_by_1",
                                    "typeString": "int_const 12"
                                  },
                                  "value": "12"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5296:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 4055,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5308:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4057,
                                "indexExpression": {
                                  "hexValue": "32",
                                  "id": 4056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5315:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5308:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 4051,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "5285:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 4058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5285:33:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "5272:46:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 4060,
                        "nodeType": "ExpressionStatement",
                        "src": "5272:46:17"
                      },
                      {
                        "expression": {
                          "id": 4072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4061,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3877,
                              "src": "5328:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                "typeString": "struct JPoint memory[16] memory"
                              }
                            },
                            "id": 4063,
                            "indexExpression": {
                              "hexValue": "3135",
                              "id": 4062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5335:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_15_by_1",
                                "typeString": "int_const 15"
                              },
                              "value": "15"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5328:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 4065,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5352:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4067,
                                "indexExpression": {
                                  "hexValue": "3132",
                                  "id": 4066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5359:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_12_by_1",
                                    "typeString": "int_const 12"
                                  },
                                  "value": "12"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5352:10:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 4068,
                                  "name": "points",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3877,
                                  "src": "5364:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                                    "typeString": "struct JPoint memory[16] memory"
                                  }
                                },
                                "id": 4070,
                                "indexExpression": {
                                  "hexValue": "33",
                                  "id": 4069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5371:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5364:9:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                  "typeString": "struct JPoint memory"
                                }
                              ],
                              "id": 4064,
                              "name": "_jPointAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "5341:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_JPoint_$3584_memory_ptr_$_t_struct$_JPoint_$3584_memory_ptr_$returns$_t_struct$_JPoint_$3584_memory_ptr_$",
                                "typeString": "function (struct JPoint memory,struct JPoint memory) pure returns (struct JPoint memory)"
                              }
                            },
                            "id": 4071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5341:33:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                              "typeString": "struct JPoint memory"
                            }
                          },
                          "src": "5328:46:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "id": 4073,
                        "nodeType": "ExpressionStatement",
                        "src": "5328:46:17"
                      }
                    ]
                  },
                  "id": 4075,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_preComputeJacobianPoints",
                  "nameLocation": "3941:25:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3871,
                        "mutability": "mutable",
                        "name": "passKey",
                        "nameLocation": "3993:7:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4075,
                        "src": "3976:24:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PassKeyId_$3577_memory_ptr",
                          "typeString": "struct PassKeyId"
                        },
                        "typeName": {
                          "id": 3870,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3869,
                            "name": "PassKeyId",
                            "nameLocations": ["3976:9:17"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3577,
                            "src": "3976:9:17"
                          },
                          "referencedDeclaration": 3577,
                          "src": "3976:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PassKeyId_$3577_storage_ptr",
                            "typeString": "struct PassKeyId"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3966:40:17"
                  },
                  "returnParameters": {
                    "id": 3878,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3877,
                        "mutability": "mutable",
                        "name": "points",
                        "nameLocation": "4048:6:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4075,
                        "src": "4030:24:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_memory_ptr_$16_memory_ptr",
                          "typeString": "struct JPoint[16]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3874,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 3873,
                              "name": "JPoint",
                              "nameLocations": ["4030:6:17"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3584,
                              "src": "4030:6:17"
                            },
                            "referencedDeclaration": 3584,
                            "src": "4030:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                              "typeString": "struct JPoint"
                            }
                          },
                          "id": 3876,
                          "length": {
                            "hexValue": "3136",
                            "id": 3875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4037:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_16_by_1",
                              "typeString": "int_const 16"
                            },
                            "value": "16"
                          },
                          "nodeType": "ArrayTypeName",
                          "src": "4030:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_JPoint_$3584_storage_$16_storage_ptr",
                            "typeString": "struct JPoint[16]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4029:26:17"
                  },
                  "scope": 4345,
                  "src": "3932:1449:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4122,
                    "nodeType": "Block",
                    "src": "5503:150:17",
                    "statements": [
                      {
                        "assignments": [4088],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4088,
                            "mutability": "mutable",
                            "name": "x",
                            "nameLocation": "5518:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4122,
                            "src": "5513:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4087,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5513:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4089,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5513:6:17"
                      },
                      {
                        "assignments": [4091],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4091,
                            "mutability": "mutable",
                            "name": "y",
                            "nameLocation": "5534:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4122,
                            "src": "5529:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4090,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5529:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4092,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5529:6:17"
                      },
                      {
                        "assignments": [4094],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4094,
                            "mutability": "mutable",
                            "name": "z",
                            "nameLocation": "5550:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4122,
                            "src": "5545:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4093,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5545:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4095,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5545:6:17"
                      },
                      {
                        "expression": {
                          "id": 4114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4096,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4088,
                                "src": "5562:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4097,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4091,
                                "src": "5565:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4098,
                                "name": "z",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4094,
                                "src": "5568:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4099,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5561:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4101,
                                  "name": "p1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4078,
                                  "src": "5579:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4102,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5582:1:17",
                                "memberName": "x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3579,
                                "src": "5579:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4103,
                                  "name": "p1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4078,
                                  "src": "5585:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4104,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5588:1:17",
                                "memberName": "y",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3581,
                                "src": "5585:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4105,
                                  "name": "p1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4078,
                                  "src": "5591:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4106,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5594:1:17",
                                "memberName": "z",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3583,
                                "src": "5591:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4107,
                                  "name": "p2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4081,
                                  "src": "5597:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4108,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5600:1:17",
                                "memberName": "x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3579,
                                "src": "5597:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4109,
                                  "name": "p2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4081,
                                  "src": "5603:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4110,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5606:1:17",
                                "memberName": "y",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3581,
                                "src": "5603:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4111,
                                  "name": "p2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4081,
                                  "src": "5609:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4112,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5612:1:17",
                                "memberName": "z",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3583,
                                "src": "5609:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4100,
                              "name": "_jAdd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4292,
                              "src": "5573:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
                              }
                            },
                            "id": 4113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5573:41:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256,uint256)"
                            }
                          },
                          "src": "5561:53:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4115,
                        "nodeType": "ExpressionStatement",
                        "src": "5561:53:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4117,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4088,
                              "src": "5638:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4118,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4091,
                              "src": "5641:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4119,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4094,
                              "src": "5644:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4116,
                            "name": "JPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3584,
                            "src": "5631:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_JPoint_$3584_storage_ptr_$",
                              "typeString": "type(struct JPoint storage pointer)"
                            }
                          },
                          "id": 4120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5631:15:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "functionReturnParameters": 4086,
                        "id": 4121,
                        "nodeType": "Return",
                        "src": "5624:22:17"
                      }
                    ]
                  },
                  "id": 4123,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_jPointAdd",
                  "nameLocation": "5396:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4082,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4078,
                        "mutability": "mutable",
                        "name": "p1",
                        "nameLocation": "5430:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4123,
                        "src": "5416:16:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                          "typeString": "struct JPoint"
                        },
                        "typeName": {
                          "id": 4077,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4076,
                            "name": "JPoint",
                            "nameLocations": ["5416:6:17"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3584,
                            "src": "5416:6:17"
                          },
                          "referencedDeclaration": 3584,
                          "src": "5416:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                            "typeString": "struct JPoint"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4081,
                        "mutability": "mutable",
                        "name": "p2",
                        "nameLocation": "5456:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4123,
                        "src": "5442:16:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                          "typeString": "struct JPoint"
                        },
                        "typeName": {
                          "id": 4080,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4079,
                            "name": "JPoint",
                            "nameLocations": ["5442:6:17"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3584,
                            "src": "5442:6:17"
                          },
                          "referencedDeclaration": 3584,
                          "src": "5442:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                            "typeString": "struct JPoint"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5406:58:17"
                  },
                  "returnParameters": {
                    "id": 4086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4085,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4123,
                        "src": "5488:13:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                          "typeString": "struct JPoint"
                        },
                        "typeName": {
                          "id": 4084,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4083,
                            "name": "JPoint",
                            "nameLocations": ["5488:6:17"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3584,
                            "src": "5488:6:17"
                          },
                          "referencedDeclaration": 3584,
                          "src": "5488:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                            "typeString": "struct JPoint"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5487:15:17"
                  },
                  "scope": 4345,
                  "src": "5387:266:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4161,
                    "nodeType": "Block",
                    "src": "5751:147:17",
                    "statements": [
                      {
                        "assignments": [4133],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4133,
                            "mutability": "mutable",
                            "name": "x",
                            "nameLocation": "5766:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4161,
                            "src": "5761:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4132,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5761:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4134,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5761:6:17"
                      },
                      {
                        "assignments": [4136],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4136,
                            "mutability": "mutable",
                            "name": "y",
                            "nameLocation": "5782:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4161,
                            "src": "5777:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4135,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5777:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4137,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5777:6:17"
                      },
                      {
                        "assignments": [4139],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4139,
                            "mutability": "mutable",
                            "name": "z",
                            "nameLocation": "5798:1:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4161,
                            "src": "5793:6:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4138,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5793:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4140,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5793:6:17"
                      },
                      {
                        "expression": {
                          "id": 4153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 4141,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4133,
                                "src": "5810:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4142,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4136,
                                "src": "5813:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4143,
                                "name": "z",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4139,
                                "src": "5816:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4144,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5809:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4146,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4126,
                                  "src": "5845:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4147,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5847:1:17",
                                "memberName": "x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3579,
                                "src": "5845:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4148,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4126,
                                  "src": "5850:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4149,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5852:1:17",
                                "memberName": "y",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3581,
                                "src": "5850:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 4150,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4126,
                                  "src": "5855:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                                    "typeString": "struct JPoint memory"
                                  }
                                },
                                "id": 4151,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5857:1:17",
                                "memberName": "z",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3583,
                                "src": "5855:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4145,
                              "name": "_modifiedJacobianDouble",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4309,
                              "src": "5821:23:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"
                              }
                            },
                            "id": 4152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5821:38:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256,uint256)"
                            }
                          },
                          "src": "5809:50:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4154,
                        "nodeType": "ExpressionStatement",
                        "src": "5809:50:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4156,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4133,
                              "src": "5883:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4157,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4136,
                              "src": "5886:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4158,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4139,
                              "src": "5889:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4155,
                            "name": "JPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3584,
                            "src": "5876:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_JPoint_$3584_storage_ptr_$",
                              "typeString": "type(struct JPoint storage pointer)"
                            }
                          },
                          "id": 4159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5876:15:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                            "typeString": "struct JPoint memory"
                          }
                        },
                        "functionReturnParameters": 4131,
                        "id": 4160,
                        "nodeType": "Return",
                        "src": "5869:22:17"
                      }
                    ]
                  },
                  "id": 4162,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_jPointDouble",
                  "nameLocation": "5668:13:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4126,
                        "mutability": "mutable",
                        "name": "p",
                        "nameLocation": "5705:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4162,
                        "src": "5691:15:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                          "typeString": "struct JPoint"
                        },
                        "typeName": {
                          "id": 4125,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4124,
                            "name": "JPoint",
                            "nameLocations": ["5691:6:17"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3584,
                            "src": "5691:6:17"
                          },
                          "referencedDeclaration": 3584,
                          "src": "5691:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                            "typeString": "struct JPoint"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5681:31:17"
                  },
                  "returnParameters": {
                    "id": 4131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4130,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4162,
                        "src": "5736:13:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_JPoint_$3584_memory_ptr",
                          "typeString": "struct JPoint"
                        },
                        "typeName": {
                          "id": 4129,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4128,
                            "name": "JPoint",
                            "nameLocations": ["5736:6:17"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3584,
                            "src": "5736:6:17"
                          },
                          "referencedDeclaration": 3584,
                          "src": "5736:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JPoint_$3584_storage_ptr",
                            "typeString": "struct JPoint"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5735:15:17"
                  },
                  "scope": 4345,
                  "src": "5659:239:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4219,
                    "nodeType": "Block",
                    "src": "6177:242:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4175,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4168,
                            "src": "6191:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6196:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6191:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4183,
                        "nodeType": "IfStatement",
                        "src": "6187:50:17",
                        "trueBody": {
                          "id": 4182,
                          "nodeType": "Block",
                          "src": "6199:38:17",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "30",
                                    "id": 4178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6221:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 4179,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6224:1:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 4180,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6220:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(int_const 0,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 4174,
                              "id": 4181,
                              "nodeType": "Return",
                              "src": "6213:13:17"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [4185],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4185,
                            "mutability": "mutable",
                            "name": "zinv",
                            "nameLocation": "6252:4:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4219,
                            "src": "6247:9:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4184,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6247:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4190,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4187,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4168,
                              "src": "6269:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4188,
                              "name": "pp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "6272:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4186,
                            "name": "_primemod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4331,
                            "src": "6259:9:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 4189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6259:16:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6247:28:17"
                      },
                      {
                        "assignments": [4192],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4192,
                            "mutability": "mutable",
                            "name": "zinvsq",
                            "nameLocation": "6290:6:17",
                            "nodeType": "VariableDeclaration",
                            "scope": 4219,
                            "src": "6285:11:17",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4191,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6285:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4198,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4194,
                              "name": "zinv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4185,
                              "src": "6306:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4195,
                              "name": "zinv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4185,
                              "src": "6312:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4196,
                              "name": "pp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3593,
                              "src": "6318:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4193,
                            "name": "mulmod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -16,
                            "src": "6299:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6299:22:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6285:36:17"
                      },
                      {
                        "expression": {
                          "id": 4205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4199,
                            "name": "ax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4171,
                            "src": "6332:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4201,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4164,
                                "src": "6344:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4202,
                                "name": "zinvsq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4192,
                                "src": "6347:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4203,
                                "name": "pp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3593,
                                "src": "6355:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4200,
                              "name": "mulmod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -16,
                              "src": "6337:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6337:21:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6332:26:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4206,
                        "nodeType": "ExpressionStatement",
                        "src": "6332:26:17"
                      },
                      {
                        "expression": {
                          "id": 4217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4207,
                            "name": "ay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4173,
                            "src": "6368:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4209,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4166,
                                "src": "6380:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4211,
                                    "name": "zinvsq",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4192,
                                    "src": "6390:6:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4212,
                                    "name": "zinv",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4185,
                                    "src": "6398:4:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4213,
                                    "name": "pp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3593,
                                    "src": "6404:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4210,
                                  "name": "mulmod",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -16,
                                  "src": "6383:6:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 4214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6383:24:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4215,
                                "name": "pp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3593,
                                "src": "6409:2:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4208,
                              "name": "mulmod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -16,
                              "src": "6373:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 4216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6373:39:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6368:44:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4218,
                        "nodeType": "ExpressionStatement",
                        "src": "6368:44:17"
                      }
                    ]
                  },
                  "id": 4220,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_affineFromJacobian",
                  "nameLocation": "6062:19:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4164,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "6096:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4220,
                        "src": "6091:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4163,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6091:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4166,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "6112:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4220,
                        "src": "6107:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4165,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6107:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4168,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "6128:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4220,
                        "src": "6123:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4167,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6123:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6081:54:17"
                  },
                  "returnParameters": {
                    "id": 4174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4171,
                        "mutability": "mutable",
                        "name": "ax",
                        "nameLocation": "6164:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4220,
                        "src": "6159:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4170,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6159:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4173,
                        "mutability": "mutable",
                        "name": "ay",
                        "nameLocation": "6173:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4220,
                        "src": "6168:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4172,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6168:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6158:18:17"
                  },
                  "scope": 4345,
                  "src": "6053:366:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4291,
                    "nodeType": "Block",
                    "src": "6784:2180:17",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4241,
                            "name": "p3",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4226,
                            "src": "6798:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6804:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6798:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4262,
                              "name": "q3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4232,
                              "src": "6925:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 4263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6931:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6925:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 4283,
                          "nodeType": "IfStatement",
                          "src": "6921:121:17",
                          "trueBody": {
                            "id": 4282,
                            "nodeType": "Block",
                            "src": "6934:108:17",
                            "statements": [
                              {
                                "expression": {
                                  "id": 4267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 4265,
                                    "name": "r1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4235,
                                    "src": "6948:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 4266,
                                    "name": "p1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4222,
                                    "src": "6953:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6948:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4268,
                                "nodeType": "ExpressionStatement",
                                "src": "6948:7:17"
                              },
                              {
                                "expression": {
                                  "id": 4271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 4269,
                                    "name": "r2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4237,
                                    "src": "6969:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 4270,
                                    "name": "p2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4224,
                                    "src": "6974:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6969:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4272,
                                "nodeType": "ExpressionStatement",
                                "src": "6969:7:17"
                              },
                              {
                                "expression": {
                                  "id": 4275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 4273,
                                    "name": "r3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4239,
                                    "src": "6990:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 4274,
                                    "name": "p3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4226,
                                    "src": "6995:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6990:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4276,
                                "nodeType": "ExpressionStatement",
                                "src": "6990:7:17"
                              },
                              {
                                "expression": {
                                  "components": [
                                    {
                                      "id": 4277,
                                      "name": "r1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4235,
                                      "src": "7020:2:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 4278,
                                      "name": "r2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4237,
                                      "src": "7024:2:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 4279,
                                      "name": "r3",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4239,
                                      "src": "7028:2:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4280,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7019:12:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(uint256,uint256,uint256)"
                                  }
                                },
                                "functionReturnParameters": 4240,
                                "id": 4281,
                                "nodeType": "Return",
                                "src": "7012:19:17"
                              }
                            ]
                          }
                        },
                        "id": 4284,
                        "nodeType": "IfStatement",
                        "src": "6794:248:17",
                        "trueBody": {
                          "id": 4261,
                          "nodeType": "Block",
                          "src": "6807:108:17",
                          "statements": [
                            {
                              "expression": {
                                "id": 4246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4244,
                                  "name": "r1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4235,
                                  "src": "6821:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4245,
                                  "name": "q1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4228,
                                  "src": "6826:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6821:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4247,
                              "nodeType": "ExpressionStatement",
                              "src": "6821:7:17"
                            },
                            {
                              "expression": {
                                "id": 4250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4248,
                                  "name": "r2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4237,
                                  "src": "6842:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4249,
                                  "name": "q2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4230,
                                  "src": "6847:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6842:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4251,
                              "nodeType": "ExpressionStatement",
                              "src": "6842:7:17"
                            },
                            {
                              "expression": {
                                "id": 4254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4252,
                                  "name": "r3",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4239,
                                  "src": "6863:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4253,
                                  "name": "q3",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4232,
                                  "src": "6868:2:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6863:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4255,
                              "nodeType": "ExpressionStatement",
                              "src": "6863:7:17"
                            },
                            {
                              "expression": {
                                "components": [
                                  {
                                    "id": 4256,
                                    "name": "r1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4235,
                                    "src": "6893:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4257,
                                    "name": "r2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4237,
                                    "src": "6897:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4258,
                                    "name": "r3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4239,
                                    "src": "6901:2:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 4259,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6892:12:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256,uint256)"
                                }
                              },
                              "functionReturnParameters": 4240,
                              "id": 4260,
                              "nodeType": "Return",
                              "src": "6885:19:17"
                            }
                          ]
                        }
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "7061:1868:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7075:104:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7113:66:17",
                                "type": "",
                                "value": "0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF"
                              },
                              "variables": [
                                {
                                  "name": "pd",
                                  "nodeType": "YulTypedName",
                                  "src": "7095:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7192:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "p3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7211:2:17"
                                  },
                                  {
                                    "name": "p3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7215:2:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7219:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7204:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7204:18:17"
                              },
                              "variables": [
                                {
                                  "name": "z1z1",
                                  "nodeType": "YulTypedName",
                                  "src": "7196:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7250:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "q3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7269:2:17"
                                  },
                                  {
                                    "name": "q3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7273:2:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7277:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7262:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7262:18:17"
                              },
                              "variables": [
                                {
                                  "name": "z2z2",
                                  "nodeType": "YulTypedName",
                                  "src": "7254:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7309:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "p1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7326:2:17"
                                  },
                                  {
                                    "name": "z2z2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7330:4:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7336:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7319:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7319:20:17"
                              },
                              "variables": [
                                {
                                  "name": "u1",
                                  "nodeType": "YulTypedName",
                                  "src": "7313:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7368:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "q1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7385:2:17"
                                  },
                                  {
                                    "name": "z1z1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7389:4:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7395:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7378:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7378:20:17"
                              },
                              "variables": [
                                {
                                  "name": "u2",
                                  "nodeType": "YulTypedName",
                                  "src": "7372:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7428:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "p2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7445:2:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "z2z2",
                                        "nodeType": "YulIdentifier",
                                        "src": "7456:4:17"
                                      },
                                      {
                                        "name": "q3",
                                        "nodeType": "YulIdentifier",
                                        "src": "7462:2:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7466:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "7449:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7449:20:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7471:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7438:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7438:36:17"
                              },
                              "variables": [
                                {
                                  "name": "s1",
                                  "nodeType": "YulTypedName",
                                  "src": "7432:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7506:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "q2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7523:2:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "z1z1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7534:4:17"
                                      },
                                      {
                                        "name": "p3",
                                        "nodeType": "YulIdentifier",
                                        "src": "7540:2:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7544:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "7527:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7527:20:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7549:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7516:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7516:36:17"
                              },
                              "variables": [
                                {
                                  "name": "s2",
                                  "nodeType": "YulTypedName",
                                  "src": "7510:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7585:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "p3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7604:2:17"
                                  },
                                  {
                                    "name": "q3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7608:2:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7612:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "addmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7597:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7597:18:17"
                              },
                              "variables": [
                                {
                                  "name": "p3q3",
                                  "nodeType": "YulTypedName",
                                  "src": "7589:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7643:63:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7661:17:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "7671:2:17"
                                        },
                                        {
                                          "name": "u2",
                                          "nodeType": "YulIdentifier",
                                          "src": "7675:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7667:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7667:11:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "u2",
                                        "nodeType": "YulIdentifier",
                                        "src": "7661:2:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "u2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7635:2:17"
                                  },
                                  {
                                    "name": "u1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7639:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7632:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7632:10:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7629:77:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7719:20:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "u2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7732:2:17"
                                  },
                                  {
                                    "name": "u1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7736:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7728:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7728:11:17"
                              },
                              "variables": [
                                {
                                  "name": "h",
                                  "nodeType": "YulTypedName",
                                  "src": "7723:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7766:28:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7782:4:17",
                                    "type": "",
                                    "value": "0x02"
                                  },
                                  {
                                    "name": "h",
                                    "nodeType": "YulIdentifier",
                                    "src": "7788:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7791:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7775:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7775:19:17"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "7770:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7807:21:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "7819:1:17"
                                  },
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "7822:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7825:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7812:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7812:16:17"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7807:1:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7857:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "h",
                                    "nodeType": "YulIdentifier",
                                    "src": "7873:1:17"
                                  },
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "7876:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7879:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "7866:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7866:16:17"
                              },
                              "variables": [
                                {
                                  "name": "j",
                                  "nodeType": "YulTypedName",
                                  "src": "7861:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7920:63:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7938:17:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "7948:2:17"
                                        },
                                        {
                                          "name": "s2",
                                          "nodeType": "YulIdentifier",
                                          "src": "7952:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7944:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7944:11:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "s2",
                                        "nodeType": "YulIdentifier",
                                        "src": "7938:2:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "s2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7912:2:17"
                                  },
                                  {
                                    "name": "s1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7916:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7909:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7909:10:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7906:77:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7996:39:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8013:4:17",
                                    "type": "",
                                    "value": "0x02"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "s2",
                                        "nodeType": "YulIdentifier",
                                        "src": "8023:2:17"
                                      },
                                      {
                                        "name": "s1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8027:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8019:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8019:11:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8032:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8006:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8006:29:17"
                              },
                              "variables": [
                                {
                                  "name": "rr",
                                  "nodeType": "YulTypedName",
                                  "src": "8000:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8065:24:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "rr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8078:2:17"
                                  },
                                  {
                                    "name": "rr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8082:2:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8086:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8071:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8071:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "r1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8065:2:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8115:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "u1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8131:2:17"
                                  },
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8135:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8138:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8124:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8124:17:17"
                              },
                              "variables": [
                                {
                                  "name": "v",
                                  "nodeType": "YulTypedName",
                                  "src": "8119:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8166:45:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "j",
                                    "nodeType": "YulIdentifier",
                                    "src": "8184:1:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8194:4:17",
                                        "type": "",
                                        "value": "0x02"
                                      },
                                      {
                                        "name": "v",
                                        "nodeType": "YulIdentifier",
                                        "src": "8200:1:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8203:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "8187:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8187:19:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8208:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "addmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8177:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8177:34:17"
                              },
                              "variables": [
                                {
                                  "name": "j2v",
                                  "nodeType": "YulTypedName",
                                  "src": "8170:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8239:63:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8257:17:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "8267:2:17"
                                        },
                                        {
                                          "name": "r1",
                                          "nodeType": "YulIdentifier",
                                          "src": "8271:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8263:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8263:11:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "r1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8257:2:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "r1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8230:2:17"
                                  },
                                  {
                                    "name": "j2v",
                                    "nodeType": "YulIdentifier",
                                    "src": "8234:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8227:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8227:11:17"
                              },
                              "nodeType": "YulIf",
                              "src": "8224:78:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8315:18:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "r1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8325:2:17"
                                  },
                                  {
                                    "name": "j2v",
                                    "nodeType": "YulIdentifier",
                                    "src": "8329:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8321:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8321:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "r1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8315:2:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8383:47:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8409:4:17",
                                        "type": "",
                                        "value": "0x02"
                                      },
                                      {
                                        "name": "s1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8415:2:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8419:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "8402:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8402:20:17"
                                  },
                                  {
                                    "name": "j",
                                    "nodeType": "YulIdentifier",
                                    "src": "8424:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8427:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8395:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8395:35:17"
                              },
                              "variables": [
                                {
                                  "name": "s12j",
                                  "nodeType": "YulTypedName",
                                  "src": "8387:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8457:47:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8475:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "8484:2:17"
                                        },
                                        {
                                          "name": "v",
                                          "nodeType": "YulIdentifier",
                                          "src": "8488:1:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8480:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8480:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "v",
                                        "nodeType": "YulIdentifier",
                                        "src": "8475:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "v",
                                    "nodeType": "YulIdentifier",
                                    "src": "8450:1:17"
                                  },
                                  {
                                    "name": "r1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8453:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8447:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8447:9:17"
                              },
                              "nodeType": "YulIf",
                              "src": "8444:60:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8517:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "rr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8530:2:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "v",
                                        "nodeType": "YulIdentifier",
                                        "src": "8538:1:17"
                                      },
                                      {
                                        "name": "r1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8541:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8534:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8534:10:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8546:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8523:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8523:26:17"
                              },
                              "variableNames": [
                                {
                                  "name": "r2",
                                  "nodeType": "YulIdentifier",
                                  "src": "8517:2:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8579:49:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8597:17:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "8607:2:17"
                                        },
                                        {
                                          "name": "r2",
                                          "nodeType": "YulIdentifier",
                                          "src": "8611:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8603:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8603:11:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "r2",
                                        "nodeType": "YulIdentifier",
                                        "src": "8597:2:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "r2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8569:2:17"
                                  },
                                  {
                                    "name": "s12j",
                                    "nodeType": "YulIdentifier",
                                    "src": "8573:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8566:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8566:12:17"
                              },
                              "nodeType": "YulIf",
                              "src": "8563:65:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8641:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "r2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8651:2:17"
                                  },
                                  {
                                    "name": "s12j",
                                    "nodeType": "YulIdentifier",
                                    "src": "8655:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8647:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8647:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "r2",
                                  "nodeType": "YulIdentifier",
                                  "src": "8641:2:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8718:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "z1z1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8733:4:17"
                                  },
                                  {
                                    "name": "z2z2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8739:4:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8745:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "addmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8726:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8726:22:17"
                              },
                              "variableNames": [
                                {
                                  "name": "z1z1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8718:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8761:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "p3q3",
                                    "nodeType": "YulIdentifier",
                                    "src": "8775:4:17"
                                  },
                                  {
                                    "name": "p3q3",
                                    "nodeType": "YulIdentifier",
                                    "src": "8781:4:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8787:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8768:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8768:22:17"
                              },
                              "variableNames": [
                                {
                                  "name": "j2v",
                                  "nodeType": "YulIdentifier",
                                  "src": "8761:3:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8820:51:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8838:19:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "8849:2:17"
                                        },
                                        {
                                          "name": "j2v",
                                          "nodeType": "YulIdentifier",
                                          "src": "8853:3:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8845:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8845:12:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "j2v",
                                        "nodeType": "YulIdentifier",
                                        "src": "8838:3:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "j2v",
                                    "nodeType": "YulIdentifier",
                                    "src": "8809:3:17"
                                  },
                                  {
                                    "name": "z1z1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8814:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8806:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8806:13:17"
                              },
                              "nodeType": "YulIf",
                              "src": "8803:68:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8884:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "j2v",
                                        "nodeType": "YulIdentifier",
                                        "src": "8901:3:17"
                                      },
                                      {
                                        "name": "z1z1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8906:4:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8897:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8897:14:17"
                                  },
                                  {
                                    "name": "h",
                                    "nodeType": "YulIdentifier",
                                    "src": "8913:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8916:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "8890:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8890:29:17"
                              },
                              "variableNames": [
                                {
                                  "name": "r3",
                                  "nodeType": "YulIdentifier",
                                  "src": "8884:2:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 4222,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7326:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4224,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7445:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4226,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7211:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4226,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7215:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4226,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7540:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4226,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7604:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4228,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7385:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4230,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7523:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4232,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7269:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4232,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7273:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4232,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7462:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4232,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7608:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8065:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8230:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8257:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8271:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8315:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8325:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8453:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4235,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8541:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4237,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8517:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4237,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8569:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4237,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8597:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4237,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8611:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4237,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8641:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4237,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8651:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4239,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8884:2:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 4285,
                        "nodeType": "InlineAssembly",
                        "src": "7052:1877:17"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 4286,
                              "name": "r1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4235,
                              "src": "8946:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4287,
                              "name": "r2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4237,
                              "src": "8950:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4288,
                              "name": "r3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4239,
                              "src": "8954:2:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4289,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8945:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 4240,
                        "id": 4290,
                        "nodeType": "Return",
                        "src": "8938:19:17"
                      }
                    ]
                  },
                  "id": 4292,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_jAdd",
                  "nameLocation": "6620:5:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4222,
                        "mutability": "mutable",
                        "name": "p1",
                        "nameLocation": "6640:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6635:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4221,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6635:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4224,
                        "mutability": "mutable",
                        "name": "p2",
                        "nameLocation": "6657:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6652:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4223,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6652:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4226,
                        "mutability": "mutable",
                        "name": "p3",
                        "nameLocation": "6674:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6669:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4225,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6669:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4228,
                        "mutability": "mutable",
                        "name": "q1",
                        "nameLocation": "6691:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6686:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4227,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6686:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4230,
                        "mutability": "mutable",
                        "name": "q2",
                        "nameLocation": "6708:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6703:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4229,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6703:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4232,
                        "mutability": "mutable",
                        "name": "q3",
                        "nameLocation": "6725:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6720:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4231,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6720:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6625:108:17"
                  },
                  "returnParameters": {
                    "id": 4240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4235,
                        "mutability": "mutable",
                        "name": "r1",
                        "nameLocation": "6762:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6757:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4234,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6757:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4237,
                        "mutability": "mutable",
                        "name": "r2",
                        "nameLocation": "6771:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6766:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4236,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6766:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4239,
                        "mutability": "mutable",
                        "name": "r3",
                        "nameLocation": "6780:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4292,
                        "src": "6775:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4238,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6775:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6756:27:17"
                  },
                  "scope": 4345,
                  "src": "6611:2353:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4308,
                    "nodeType": "Block",
                    "src": "9253:1070:17",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "9272:1045:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9286:104:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9324:66:17",
                                "type": "",
                                "value": "0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF"
                              },
                              "variables": [
                                {
                                  "name": "pd",
                                  "nodeType": "YulTypedName",
                                  "src": "9306:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9403:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "z",
                                    "nodeType": "YulIdentifier",
                                    "src": "9420:1:17"
                                  },
                                  {
                                    "name": "z",
                                    "nodeType": "YulIdentifier",
                                    "src": "9423:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9426:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9413:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9413:16:17"
                              },
                              "variables": [
                                {
                                  "name": "z2",
                                  "nodeType": "YulTypedName",
                                  "src": "9407:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9442:171:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9477:66:17",
                                    "type": "",
                                    "value": "0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "z2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9568:2:17"
                                      },
                                      {
                                        "name": "z2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9572:2:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9576:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "9561:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9561:18:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9597:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9453:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9453:160:17"
                              },
                              "variables": [
                                {
                                  "name": "az4",
                                  "nodeType": "YulTypedName",
                                  "src": "9446:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9626:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9643:1:17"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9646:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9649:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9636:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9636:16:17"
                              },
                              "variables": [
                                {
                                  "name": "y2",
                                  "nodeType": "YulTypedName",
                                  "src": "9630:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9665:44:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9681:4:17",
                                    "type": "",
                                    "value": "0x04"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "9694:1:17"
                                      },
                                      {
                                        "name": "y2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9697:2:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9701:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "9687:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9687:17:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9706:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9674:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9674:35:17"
                              },
                              "variables": [
                                {
                                  "name": "s",
                                  "nodeType": "YulTypedName",
                                  "src": "9669:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9722:45:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9738:4:17",
                                    "type": "",
                                    "value": "0x08"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9751:2:17"
                                      },
                                      {
                                        "name": "y2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9755:2:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9759:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "9744:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9744:18:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9764:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9731:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9731:36:17"
                              },
                              "variables": [
                                {
                                  "name": "u",
                                  "nodeType": "YulTypedName",
                                  "src": "9726:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9780:60:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9803:4:17",
                                        "type": "",
                                        "value": "0x03"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "9816:1:17"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "9819:1:17"
                                          },
                                          {
                                            "name": "pd",
                                            "nodeType": "YulIdentifier",
                                            "src": "9822:2:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mulmod",
                                          "nodeType": "YulIdentifier",
                                          "src": "9809:6:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9809:16:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9827:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "9796:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9796:34:17"
                                  },
                                  {
                                    "name": "az4",
                                    "nodeType": "YulIdentifier",
                                    "src": "9832:3:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9837:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "addmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9789:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9789:51:17"
                              },
                              "variables": [
                                {
                                  "name": "m",
                                  "nodeType": "YulTypedName",
                                  "src": "9784:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9853:31:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9872:4:17",
                                    "type": "",
                                    "value": "0x02"
                                  },
                                  {
                                    "name": "s",
                                    "nodeType": "YulIdentifier",
                                    "src": "9878:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9881:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9865:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9865:19:17"
                              },
                              "variables": [
                                {
                                  "name": "twos",
                                  "nodeType": "YulTypedName",
                                  "src": "9857:4:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9897:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "m",
                                    "nodeType": "YulIdentifier",
                                    "src": "9914:1:17"
                                  },
                                  {
                                    "name": "m",
                                    "nodeType": "YulIdentifier",
                                    "src": "9917:1:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9920:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "9907:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9907:16:17"
                              },
                              "variables": [
                                {
                                  "name": "m2",
                                  "nodeType": "YulTypedName",
                                  "src": "9901:2:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9952:49:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "9970:17:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "9980:2:17"
                                        },
                                        {
                                          "name": "m2",
                                          "nodeType": "YulIdentifier",
                                          "src": "9984:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9976:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9976:11:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "m2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9970:2:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "m2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9942:2:17"
                                  },
                                  {
                                    "name": "twos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9946:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9939:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9939:12:17"
                              },
                              "nodeType": "YulIf",
                              "src": "9936:65:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10014:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "m2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10024:2:17"
                                  },
                                  {
                                    "name": "twos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10028:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10020:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10020:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "x3",
                                  "nodeType": "YulIdentifier",
                                  "src": "10014:2:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10059:47:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10077:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "10086:2:17"
                                        },
                                        {
                                          "name": "s",
                                          "nodeType": "YulIdentifier",
                                          "src": "10090:1:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10082:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10082:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "s",
                                        "nodeType": "YulIdentifier",
                                        "src": "10077:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "s",
                                    "nodeType": "YulIdentifier",
                                    "src": "10052:1:17"
                                  },
                                  {
                                    "name": "x3",
                                    "nodeType": "YulIdentifier",
                                    "src": "10055:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10049:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10049:9:17"
                              },
                              "nodeType": "YulIf",
                              "src": "10046:60:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10119:31:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "m",
                                    "nodeType": "YulIdentifier",
                                    "src": "10132:1:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "s",
                                        "nodeType": "YulIdentifier",
                                        "src": "10139:1:17"
                                      },
                                      {
                                        "name": "x3",
                                        "nodeType": "YulIdentifier",
                                        "src": "10142:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10135:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10135:10:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10147:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "10125:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10125:25:17"
                              },
                              "variableNames": [
                                {
                                  "name": "y3",
                                  "nodeType": "YulIdentifier",
                                  "src": "10119:2:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10176:49:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10194:17:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pd",
                                          "nodeType": "YulIdentifier",
                                          "src": "10204:2:17"
                                        },
                                        {
                                          "name": "y3",
                                          "nodeType": "YulIdentifier",
                                          "src": "10208:2:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10200:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10200:11:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "y3",
                                        "nodeType": "YulIdentifier",
                                        "src": "10194:2:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y3",
                                    "nodeType": "YulIdentifier",
                                    "src": "10169:2:17"
                                  },
                                  {
                                    "name": "u",
                                    "nodeType": "YulIdentifier",
                                    "src": "10173:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10166:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10166:9:17"
                              },
                              "nodeType": "YulIf",
                              "src": "10163:62:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10238:16:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y3",
                                    "nodeType": "YulIdentifier",
                                    "src": "10248:2:17"
                                  },
                                  {
                                    "name": "u",
                                    "nodeType": "YulIdentifier",
                                    "src": "10252:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10244:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10244:10:17"
                              },
                              "variableNames": [
                                {
                                  "name": "y3",
                                  "nodeType": "YulIdentifier",
                                  "src": "10238:2:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10267:40:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10280:4:17",
                                    "type": "",
                                    "value": "0x02"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "10293:1:17"
                                      },
                                      {
                                        "name": "z",
                                        "nodeType": "YulIdentifier",
                                        "src": "10296:1:17"
                                      },
                                      {
                                        "name": "pd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10299:2:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mulmod",
                                      "nodeType": "YulIdentifier",
                                      "src": "10286:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10286:16:17"
                                  },
                                  {
                                    "name": "pd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10304:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mulmod",
                                  "nodeType": "YulIdentifier",
                                  "src": "10273:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10273:34:17"
                              },
                              "variableNames": [
                                {
                                  "name": "z3",
                                  "nodeType": "YulIdentifier",
                                  "src": "10267:2:17"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 4294,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9694:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4294,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9816:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4294,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9819:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4301,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10014:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4301,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10055:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4301,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10142:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10293:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9643:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4296,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9646:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4303,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10119:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4303,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10169:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4303,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10194:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4303,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10208:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4303,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10238:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4303,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10248:2:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4298,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10296:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4298,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9420:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4298,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9423:1:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4305,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10267:2:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 4307,
                        "nodeType": "InlineAssembly",
                        "src": "9263:1054:17"
                      }
                    ]
                  },
                  "id": 4309,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_modifiedJacobianDouble",
                  "nameLocation": "9125:23:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4294,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "9163:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "9158:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4293,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9158:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4296,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "9179:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "9174:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4295,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9174:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4298,
                        "mutability": "mutable",
                        "name": "z",
                        "nameLocation": "9195:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "9190:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4297,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9190:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9148:54:17"
                  },
                  "returnParameters": {
                    "id": 4306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4301,
                        "mutability": "mutable",
                        "name": "x3",
                        "nameLocation": "9231:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "9226:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4300,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9226:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4303,
                        "mutability": "mutable",
                        "name": "y3",
                        "nameLocation": "9240:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "9235:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4302,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9235:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4305,
                        "mutability": "mutable",
                        "name": "z3",
                        "nameLocation": "9249:2:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "9244:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4304,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9244:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9225:27:17"
                  },
                  "scope": 4345,
                  "src": "9116:1207:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4330,
                    "nodeType": "Block",
                    "src": "10608:66:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 4326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4318,
                            "name": "ret",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4316,
                            "src": "10618:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4320,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4311,
                                "src": "10631:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4321,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4313,
                                  "src": "10638:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 4322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10642:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "10638:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 4324,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4313,
                                "src": "10645:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4319,
                              "name": "modexp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4344,
                              "src": "10624:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                              }
                            },
                            "id": 4325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10624:23:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10618:29:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4327,
                        "nodeType": "ExpressionStatement",
                        "src": "10618:29:17"
                      },
                      {
                        "expression": {
                          "id": 4328,
                          "name": "ret",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4316,
                          "src": "10664:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4317,
                        "id": 4329,
                        "nodeType": "Return",
                        "src": "10657:10:17"
                      }
                    ]
                  },
                  "id": 4331,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_primemod",
                  "nameLocation": "10545:9:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4311,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10560:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4331,
                        "src": "10555:10:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4310,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10555:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4313,
                        "mutability": "mutable",
                        "name": "p",
                        "nameLocation": "10572:1:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4331,
                        "src": "10567:6:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4312,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10567:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10554:20:17"
                  },
                  "returnParameters": {
                    "id": 4317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4316,
                        "mutability": "mutable",
                        "name": "ret",
                        "nameLocation": "10603:3:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4331,
                        "src": "10598:8:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4315,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10598:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10597:10:17"
                  },
                  "scope": 4345,
                  "src": "10536:138:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4343,
                    "nodeType": "Block",
                    "src": "10914:778:17",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "10974:712:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11007:57:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "11025:25:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_base",
                                          "nodeType": "YulIdentifier",
                                          "src": "11038:5:17"
                                        },
                                        {
                                          "name": "_mod",
                                          "nodeType": "YulIdentifier",
                                          "src": "11045:4:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mod",
                                        "nodeType": "YulIdentifier",
                                        "src": "11034:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11034:16:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "_base",
                                        "nodeType": "YulIdentifier",
                                        "src": "11025:5:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_base",
                                    "nodeType": "YulIdentifier",
                                    "src": "10994:5:17"
                                  },
                                  {
                                    "name": "_mod",
                                    "nodeType": "YulIdentifier",
                                    "src": "11001:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10991:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10991:15:17"
                              },
                              "nodeType": "YulIf",
                              "src": "10988:76:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11137:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11158:4:17",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11152:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11152:11:17"
                              },
                              "variables": [
                                {
                                  "name": "freemem",
                                  "nodeType": "YulTypedName",
                                  "src": "11141:7:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "freemem",
                                    "nodeType": "YulIdentifier",
                                    "src": "11184:7:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11193:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11177:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11177:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11177:21:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freemem",
                                        "nodeType": "YulIdentifier",
                                        "src": "11222:7:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11231:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11218:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11218:18:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11238:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11211:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11211:32:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11211:32:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freemem",
                                        "nodeType": "YulIdentifier",
                                        "src": "11267:7:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11276:4:17",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11263:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11263:18:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11283:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11256:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11256:32:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11256:32:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freemem",
                                        "nodeType": "YulIdentifier",
                                        "src": "11313:7:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11322:4:17",
                                        "type": "",
                                        "value": "0x60"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11309:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11309:18:17"
                                  },
                                  {
                                    "name": "_base",
                                    "nodeType": "YulIdentifier",
                                    "src": "11329:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11302:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11302:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11302:33:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freemem",
                                        "nodeType": "YulIdentifier",
                                        "src": "11359:7:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11368:4:17",
                                        "type": "",
                                        "value": "0x80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11355:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11355:18:17"
                                  },
                                  {
                                    "name": "_exp",
                                    "nodeType": "YulIdentifier",
                                    "src": "11375:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11348:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11348:32:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11348:32:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "freemem",
                                        "nodeType": "YulIdentifier",
                                        "src": "11404:7:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11413:4:17",
                                        "type": "",
                                        "value": "0xa0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11400:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11400:18:17"
                                  },
                                  {
                                    "name": "_mod",
                                    "nodeType": "YulIdentifier",
                                    "src": "11420:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11393:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11393:32:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11393:32:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11439:68:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11469:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "11465:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11465:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11473:3:17",
                                    "type": "",
                                    "value": "0x5"
                                  },
                                  {
                                    "name": "freemem",
                                    "nodeType": "YulIdentifier",
                                    "src": "11478:7:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11487:4:17",
                                    "type": "",
                                    "value": "0xc0"
                                  },
                                  {
                                    "name": "freemem",
                                    "nodeType": "YulIdentifier",
                                    "src": "11493:7:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11502:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "staticcall",
                                  "nodeType": "YulIdentifier",
                                  "src": "11454:10:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11454:53:17"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "11443:7:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "11554:48:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11579:3:17",
                                              "type": "",
                                              "value": "0x0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "11584:3:17",
                                              "type": "",
                                              "value": "0x0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "11572:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11572:16:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "11572:16:17"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "11547:55:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11552:1:17",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "11623:53:17",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "11641:21:17",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "freemem",
                                              "nodeType": "YulIdentifier",
                                              "src": "11654:7:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "11648:5:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11648:14:17"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "11641:3:17"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "11615:61:17",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "success",
                                "nodeType": "YulIdentifier",
                                "src": "11527:7:17"
                              },
                              "nodeType": "YulSwitch",
                              "src": "11520:156:17"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 4333,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10994:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4333,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11025:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4333,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11038:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4333,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11329:5:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4335,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11375:4:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4337,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11001:4:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4337,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11045:4:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4337,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11420:4:17",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4340,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11641:3:17",
                            "valueSize": 1
                          }
                        ],
                        "id": 4342,
                        "nodeType": "InlineAssembly",
                        "src": "10965:721:17"
                      }
                    ]
                  },
                  "id": 4344,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "modexp",
                  "nameLocation": "10810:6:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4333,
                        "mutability": "mutable",
                        "name": "_base",
                        "nameLocation": "10831:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4344,
                        "src": "10826:10:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4332,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10826:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4335,
                        "mutability": "mutable",
                        "name": "_exp",
                        "nameLocation": "10851:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4344,
                        "src": "10846:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4334,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10846:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4337,
                        "mutability": "mutable",
                        "name": "_mod",
                        "nameLocation": "10870:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4344,
                        "src": "10865:9:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4336,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10865:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10816:64:17"
                  },
                  "returnParameters": {
                    "id": 4341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4340,
                        "mutability": "mutable",
                        "name": "ret",
                        "nameLocation": "10909:3:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 4344,
                        "src": "10904:8:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4339,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10904:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10903:10:17"
                  },
                  "scope": 4345,
                  "src": "10801:891:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 4346,
              "src": "571:11123:17",
              "usedErrors": []
            }
          ],
          "src": "36:11659:17"
        },
        "id": 17
      },
      "contracts/aa/utils/UserOp.sol": {
        "ast": {
          "absolutePath": "contracts/aa/utils/UserOp.sol",
          "exportedSymbols": { "UserOp": [4356], "UserOpLib": [4417] },
          "id": 4418,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4347,
              "literals": ["solidity", "0.8", ".19"],
              "nodeType": "PragmaDirective",
              "src": "36:23:18"
            },
            {
              "canonicalName": "UserOp",
              "id": 4356,
              "members": [
                {
                  "constant": false,
                  "id": 4349,
                  "mutability": "mutable",
                  "name": "functionType",
                  "nameLocation": "133:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "125:20:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4351,
                  "mutability": "mutable",
                  "name": "argument",
                  "nameLocation": "157:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "151:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4350,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4353,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "179:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "171:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4355,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "196:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "190:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4354,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "UserOp",
              "nameLocation": "112:6:18",
              "nodeType": "StructDefinition",
              "scope": 4418,
              "src": "105:103:18",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "UserOpLib",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 4417,
              "linearizedBaseContracts": [4417],
              "name": "UserOpLib",
              "nameLocation": "218:9:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 4389,
                    "nodeType": "Block",
                    "src": "451:226:18",
                    "statements": [
                      {
                        "assignments": [4366],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4366,
                            "mutability": "mutable",
                            "name": "functionType",
                            "nameLocation": "469:12:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 4389,
                            "src": "461:20:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4365,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "461:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4369,
                        "initialValue": {
                          "expression": {
                            "id": 4367,
                            "name": "userop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4360,
                            "src": "484:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                              "typeString": "struct UserOp calldata"
                            }
                          },
                          "id": 4368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "491:12:18",
                          "memberName": "functionType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4349,
                          "src": "484:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "461:42:18"
                      },
                      {
                        "assignments": [4371],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4371,
                            "mutability": "mutable",
                            "name": "hashArguments",
                            "nameLocation": "521:13:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 4389,
                            "src": "513:21:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 4370,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "513:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4376,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4373,
                                "name": "userop",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4360,
                                "src": "552:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                  "typeString": "struct UserOp calldata"
                                }
                              },
                              "id": 4374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "559:8:18",
                              "memberName": "argument",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4351,
                              "src": "552:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 4372,
                            "name": "calldataKeccak",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4416,
                            "src": "537:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes calldata) pure returns (bytes32)"
                            }
                          },
                          "id": 4375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "537:31:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "513:55:18"
                      },
                      {
                        "assignments": [4378],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4378,
                            "mutability": "mutable",
                            "name": "nonce",
                            "nameLocation": "586:5:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 4389,
                            "src": "578:13:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4377,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "578:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4381,
                        "initialValue": {
                          "expression": {
                            "id": 4379,
                            "name": "userop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4360,
                            "src": "594:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                              "typeString": "struct UserOp calldata"
                            }
                          },
                          "id": 4380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "601:5:18",
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4353,
                          "src": "594:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "578:28:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4384,
                              "name": "functionType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4366,
                              "src": "635:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4385,
                              "name": "hashArguments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4371,
                              "src": "649:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 4386,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4378,
                              "src": "664:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4382,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "624:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 4383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "628:6:18",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "624:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "624:46:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 4364,
                        "id": 4388,
                        "nodeType": "Return",
                        "src": "617:53:18"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4357,
                    "nodeType": "StructuredDocumentation",
                    "src": "234:119:18",
                    "text": " Pack the user operation data into bytes for hashing.\n @param userop - The user operation data."
                  },
                  "id": 4390,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pack",
                  "nameLocation": "367:4:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4360,
                        "mutability": "mutable",
                        "name": "userop",
                        "nameLocation": "397:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 4390,
                        "src": "381:22:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                          "typeString": "struct UserOp"
                        },
                        "typeName": {
                          "id": 4359,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4358,
                            "name": "UserOp",
                            "nameLocations": ["381:6:18"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4356,
                            "src": "381:6:18"
                          },
                          "referencedDeclaration": 4356,
                          "src": "381:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOp_$4356_storage_ptr",
                            "typeString": "struct UserOp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "371:38:18"
                  },
                  "returnParameters": {
                    "id": 4364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4363,
                        "mutability": "mutable",
                        "name": "ret",
                        "nameLocation": "446:3:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 4390,
                        "src": "433:16:18",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 4362,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "432:18:18"
                  },
                  "scope": 4417,
                  "src": "358:319:18",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4405,
                    "nodeType": "Block",
                    "src": "854:47:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4401,
                                  "name": "userop",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4394,
                                  "src": "886:6:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                    "typeString": "struct UserOp calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                                    "typeString": "struct UserOp calldata"
                                  }
                                ],
                                "id": 4400,
                                "name": "pack",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4390,
                                "src": "881:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_UserOp_$4356_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (struct UserOp calldata) pure returns (bytes memory)"
                                }
                              },
                              "id": 4402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "881:12:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 4399,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "871:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 4403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "871:23:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 4398,
                        "id": 4404,
                        "nodeType": "Return",
                        "src": "864:30:18"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4391,
                    "nodeType": "StructuredDocumentation",
                    "src": "683:96:18",
                    "text": " Hash the user operation data.\n @param userop - The user operation data."
                  },
                  "id": 4406,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hash",
                  "nameLocation": "793:4:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4394,
                        "mutability": "mutable",
                        "name": "userop",
                        "nameLocation": "814:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 4406,
                        "src": "798:22:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOp_$4356_calldata_ptr",
                          "typeString": "struct UserOp"
                        },
                        "typeName": {
                          "id": 4393,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4392,
                            "name": "UserOp",
                            "nameLocations": ["798:6:18"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4356,
                            "src": "798:6:18"
                          },
                          "referencedDeclaration": 4356,
                          "src": "798:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOp_$4356_storage_ptr",
                            "typeString": "struct UserOp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "797:24:18"
                  },
                  "returnParameters": {
                    "id": 4398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4397,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4406,
                        "src": "845:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 4396,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "844:9:18"
                  },
                  "scope": 4417,
                  "src": "784:117:18",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4415,
                    "nodeType": "Block",
                    "src": "1193:193:18",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1212:168:18",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1226:22:18",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1243:4:18",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1237:5:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1237:11:18"
                              },
                              "variables": [
                                {
                                  "name": "mem",
                                  "nodeType": "YulTypedName",
                                  "src": "1230:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1261:22:18",
                              "value": {
                                "name": "data.length",
                                "nodeType": "YulIdentifier",
                                "src": "1272:11:18"
                              },
                              "variables": [
                                {
                                  "name": "len",
                                  "nodeType": "YulTypedName",
                                  "src": "1265:3:18",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "mem",
                                    "nodeType": "YulIdentifier",
                                    "src": "1309:3:18"
                                  },
                                  {
                                    "name": "data.offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1314:11:18"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "1327:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "1296:12:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1296:35:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1296:35:18"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1344:26:18",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "mem",
                                    "nodeType": "YulIdentifier",
                                    "src": "1361:3:18"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "1366:3:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1351:9:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1351:19:18"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "1344:3:18"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 4409,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1272:11:18",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4409,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "1314:11:18",
                            "suffix": "offset",
                            "valueSize": 1
                          },
                          {
                            "declaration": 4412,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1344:3:18",
                            "valueSize": 1
                          }
                        ],
                        "id": 4414,
                        "nodeType": "InlineAssembly",
                        "src": "1203:177:18"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4407,
                    "nodeType": "StructuredDocumentation",
                    "src": "907:188:18",
                    "text": " keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."
                  },
                  "functionSelector": "1d434585",
                  "id": 4416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calldataKeccak",
                  "nameLocation": "1109:14:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4409,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1148:4:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 4416,
                        "src": "1133:19:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 4408,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1133:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1123:35:18"
                  },
                  "returnParameters": {
                    "id": 4413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4412,
                        "mutability": "mutable",
                        "name": "ret",
                        "nameLocation": "1188:3:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 4416,
                        "src": "1180:11:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 4411,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1180:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1179:13:18"
                  },
                  "scope": 4417,
                  "src": "1100:286:18",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 4418,
              "src": "210:1178:18",
              "usedErrors": []
            }
          ],
          "src": "36:1353:18"
        },
        "id": 18
      }
    },
    "contracts": {
      "@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "IERC1967": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "BeaconUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            }
          ],
          "devdoc": {
            "details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
            "events": {
              "AdminChanged(address,address)": {
                "details": "Emitted when the admin account has changed."
              },
              "BeaconUpgraded(address)": {
                "details": "Emitted when the beacon is changed."
              },
              "Upgraded(address)": {
                "details": "Emitted when the implementation is upgraded."
              }
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "IERC1822Proxiable": {
          "abi": [
            {
              "inputs": [],
              "name": "proxiableUUID",
              "outputs": [
                { "internalType": "bytes32", "name": "", "type": "bytes32" }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
            "kind": "dev",
            "methods": {
              "proxiableUUID()": {
                "details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": { "proxiableUUID()": "52d1902d" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "ERC1967Proxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_logic",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "_data", "type": "bytes" }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "BeaconUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            { "stateMutability": "payable", "type": "fallback" },
            { "stateMutability": "payable", "type": "receive" }
          ],
          "devdoc": {
            "details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
            "events": {
              "AdminChanged(address,address)": {
                "details": "Emitted when the admin account has changed."
              },
              "BeaconUpgraded(address)": {
                "details": "Emitted when the beacon is changed."
              },
              "Upgraded(address)": {
                "details": "Emitted when the implementation is upgraded."
              }
            },
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 536,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 595,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 622,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_verifyCallResultFromTarget": {
                  "entryPoint": 657,
                  "id": 887,
                  "parameterSlots": 4,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "604060808152610403908138038061001681610218565b93843982019181818403126102135780516001600160a01b038116808203610213576020838101516001600160401b0394919391858211610213570186601f820112156102135780519061007161006c83610253565b610218565b918083528583019886828401011161021357888661008f930161026e565b813b156101b9577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916841790556000927fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28051158015906101b2575b61010b575b855160be90816103458239f35b855194606086019081118682101761019e578697849283926101889952602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a8901525190845af4913d15610194573d9061017a61006c83610253565b91825281943d92013e610291565b508038808080806100fe565b5060609250610291565b634e487b7160e01b84526041600452602484fd5b50826100f9565b855162461bcd60e51b815260048101859052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761023d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161023d57601f01601f191660200190565b60005b8381106102815750506000910152565b8181015183820152602001610271565b919290156102f357508151156102a5575090565b3b156102ae5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103065750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610336815180928160248601526020868601910161026e565b601f01601f19168101030190fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH2 0x403 SWAP1 DUP2 CODESIZE SUB DUP1 PUSH2 0x16 DUP2 PUSH2 0x218 JUMP JUMPDEST SWAP4 DUP5 CODECOPY DUP3 ADD SWAP2 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x213 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x213 JUMPI PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP2 SWAP4 SWAP2 DUP6 DUP3 GT PUSH2 0x213 JUMPI ADD DUP7 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x213 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x71 PUSH2 0x6C DUP4 PUSH2 0x253 JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE DUP6 DUP4 ADD SWAP9 DUP7 DUP3 DUP5 ADD ADD GT PUSH2 0x213 JUMPI DUP9 DUP7 PUSH2 0x8F SWAP4 ADD PUSH2 0x26E JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x1B9 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x0 SWAP3 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP5 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B2 JUMPI JUMPDEST PUSH2 0x10B JUMPI JUMPDEST DUP6 MLOAD PUSH1 0xBE SWAP1 DUP2 PUSH2 0x345 DUP3 CODECOPY RETURN JUMPDEST DUP6 MLOAD SWAP5 PUSH1 0x60 DUP7 ADD SWAP1 DUP2 GT DUP7 DUP3 LT OR PUSH2 0x19E JUMPI DUP7 SWAP8 DUP5 SWAP3 DUP4 SWAP3 PUSH2 0x188 SWAP10 MSTORE PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP11 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x194 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x17A PUSH2 0x6C DUP4 PUSH2 0x253 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x291 JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xFE JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x291 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP3 PUSH2 0xF9 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x23D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x281 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x271 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2F3 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2A5 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2AE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x306 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x336 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "567:723:2:-:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;567:723:2;;;;;;;;;;;;-1:-1:-1;;;;;567:723:2;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1702:19:7;;:23;567:723:2;;1030:66:3;;;-1:-1:-1;;;;;;1030:66:3;;;;;-1:-1:-1;;1889:27:3;-1:-1:-1;;1889:27:3;567:723:2;;2208:15:3;;;:28;;;-1:-1:-1;2204:112:3;;-1:-1:-1;567:723:2;;;;;;;;;2204:112:3;567:723:2;;;;;;;;;;;;;;;;;;;;;7307:69:7;567:723:2;;;;;;;;;;-1:-1:-1;;;567:723:2;;;;7265:25:7;;;;;;567:723:2;;;;;;;;;;:::i;:::-;;;;;;;;;;7307:69:7;:::i;:::-;;2204:112:3;;;;;;;;567:723:2;-1:-1:-1;567:723:2;;-1:-1:-1;7307:69:7;:::i;567:723:2:-;-1:-1:-1;;;567:723:2;;;;;;;;2208:28:3;;;;;567:723:2;;;-1:-1:-1;;;567:723:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;567:723:2;;;;;;;;-1:-1:-1;567:723:2;;;;;;;;;-1:-1:-1;;567:723:2;;;-1:-1:-1;;;;;567:723:2;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;567:723:2;;;;;;-1:-1:-1;;567:723:2;;;;:::o;:::-;;;;;;;;-1:-1:-1;;567:723:2;;;;:::o;:::-;;;;;;;;;;;;;7671:628:7;;;;7875:418;;;567:723:2;;;7906:22:7;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;567:723:2;;8201:17:7;:::o;567:723:2:-;;;-1:-1:-1;;;567:723:2;;;;;;;;;;;;;;;;;;;;7875:418:7;567:723:2;;;;-1:-1:-1;8980:21:7;:17;;9152:142;;;;;;;8976:379;567:723:2;;;;;;;;9324:20:7;;567:723:2;9324:20:7;;;567:723:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;567:723:2;;;9324:20:7;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "567:723:2:-:0;;;;;;;1030:66:3;;;;-1:-1:-1;567:723:2;;;;1018:819:4;;;567:723:2;;1018:819:4;;;;;;;;;;;;;;;;;567:723:2;1030:66:3;;;;-1:-1:-1;567:723:2;;;;1018:819:4;;;567:723:2;;1018:819:4;;;;;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "38000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": { "": "infinite" },
              "internal": { "_implementation()": "infinite" }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "ERC1967Upgrade": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "BeaconUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            }
          ],
          "devdoc": {
            "details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
            "events": {
              "AdminChanged(address,address)": {
                "details": "Emitted when the admin account has changed."
              },
              "BeaconUpgraded(address)": {
                "details": "Emitted when the beacon is changed."
              },
              "Upgraded(address)": {
                "details": "Emitted when the implementation is upgraded."
              }
            },
            "kind": "dev",
            "methods": {},
            "stateVariables": {
              "_ADMIN_SLOT": {
                "details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
              },
              "_BEACON_SLOT": {
                "details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
              },
              "_IMPLEMENTATION_SLOT": {
                "details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "Proxy": {
          "abi": [
            { "stateMutability": "payable", "type": "fallback" },
            { "stateMutability": "payable", "type": "receive" }
          ],
          "devdoc": {
            "details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "IBeacon": {
          "abi": [
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "This is the interface that {BeaconProxy} expects of its beacon.",
            "kind": "dev",
            "methods": {
              "implementation()": {
                "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": { "implementation()": "5c60da1b" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "devdoc": {
            "custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
            "details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
            "events": {
              "Initialized(uint8)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              }
            },
            "kind": "dev",
            "methods": {},
            "stateVariables": {
              "_initialized": {
                "custom:oz-retyped-from": "bool",
                "details": "Indicates that the contract has been initialized."
              },
              "_initializing": {
                "details": "Indicates that the contract is in the process of being initialized."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 440,
                "contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
                "label": "_initialized",
                "offset": 0,
                "slot": "0",
                "type": "t_uint8"
              },
              {
                "astId": 443,
                "contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
                "label": "_initializing",
                "offset": 1,
                "slot": "0",
                "type": "t_bool"
              }
            ],
            "types": {
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [],
          "devdoc": {
            "details": "Collection of functions related to the address type",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "194:9169:7:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "194:9169:7:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "_revert(bytes memory,string memory)": "infinite",
                "functionCall(address,bytes memory)": "infinite",
                "functionCall(address,bytes memory,string memory)": "infinite",
                "functionCallWithValue(address,bytes memory,uint256)": "infinite",
                "functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
                "functionDelegateCall(address,bytes memory)": "infinite",
                "functionDelegateCall(address,bytes memory,string memory)": "infinite",
                "functionStaticCall(address,bytes memory)": "infinite",
                "functionStaticCall(address,bytes memory,string memory)": "infinite",
                "isContract(address)": "infinite",
                "sendValue(address payable,uint256)": "infinite",
                "verifyCallResult(bool,bytes memory,string memory)": "infinite",
                "verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/Create2.sol": {
        "Create2": {
          "abi": [],
          "devdoc": {
            "details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "494:3457:8:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "494:3457:8:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "computeAddress(bytes32,bytes32)": "infinite",
                "computeAddress(bytes32,bytes32,address)": "infinite",
                "deploy(uint256,bytes32,bytes memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := keccak256(start, 85)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "StorageSlot": {
          "abi": [],
          "devdoc": {
            "details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "1420:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "1420:2685:9:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "getAddressSlot(bytes32)": "infinite",
                "getBooleanSlot(bytes32)": "infinite",
                "getBytes32Slot(bytes32)": "infinite",
                "getBytesSlot(bytes storage pointer)": "infinite",
                "getBytesSlot(bytes32)": "infinite",
                "getStringSlot(bytes32)": "infinite",
                "getStringSlot(string storage pointer)": "infinite",
                "getUint256Slot(bytes32)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/Strings.sol": {
        "Strings": {
          "abi": [],
          "devdoc": {
            "details": "String operations.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "220:2559:10:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "220:2559:10:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "equal(string memory,string memory)": "infinite",
                "toHexString(address)": "infinite",
                "toHexString(uint256)": "infinite",
                "toHexString(uint256,uint256)": "infinite",
                "toString(int256)": "infinite",
                "toString(uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ECDSA": {
          "abi": [],
          "devdoc": {
            "details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "369:8761:11:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "369:8761:11:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "_throwError(enum ECDSA.RecoverError)": "infinite",
                "recover(bytes32,bytes memory)": "infinite",
                "recover(bytes32,bytes32,bytes32)": "infinite",
                "recover(bytes32,uint8,bytes32,bytes32)": "infinite",
                "toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
                "toEthSignedMessageHash(bytes memory)": "infinite",
                "toEthSignedMessageHash(bytes32)": "infinite",
                "toTypedDataHash(bytes32,bytes32)": "infinite",
                "tryRecover(bytes32,bytes memory)": "infinite",
                "tryRecover(bytes32,bytes32,bytes32)": "infinite",
                "tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\")\\n            mstore(0x1c, hash)\\n            message := keccak256(0x00, 0x3c)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, \\\"\\\\x19\\\\x01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            data := keccak256(ptr, 0x42)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\\n     * `validator` and `data` according to the version 0 of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x00\\\", validator, data));\\n    }\\n}\\n\",\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/math/Math.sol": {
        "Math": {
          "abi": [],
          "devdoc": {
            "details": "Standard math utilities missing in the Solidity language.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "202:12582:12:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "202:12582:12:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "average(uint256,uint256)": "infinite",
                "ceilDiv(uint256,uint256)": "infinite",
                "log10(uint256)": "infinite",
                "log10(uint256,enum Math.Rounding)": "infinite",
                "log2(uint256)": "infinite",
                "log2(uint256,enum Math.Rounding)": "infinite",
                "log256(uint256)": "infinite",
                "log256(uint256,enum Math.Rounding)": "infinite",
                "max(uint256,uint256)": "infinite",
                "min(uint256,uint256)": "infinite",
                "mulDiv(uint256,uint256,uint256)": "infinite",
                "mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
                "sqrt(uint256)": "infinite",
                "sqrt(uint256,enum Math.Rounding)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "SignedMath": {
          "abi": [],
          "devdoc": {
            "details": "Standard signed math utilities missing in the Solidity language.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "215:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "215:1047:13:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": {
                "abs(int256)": "infinite",
                "average(int256,int256)": "infinite",
                "max(int256,int256)": "infinite",
                "min(int256,int256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "contracts/aa/Account.sol": {
        "Account": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "functionType",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "argument",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct UserOp",
                  "name": "userop",
                  "type": "tuple"
                }
              ],
              "name": "entrypoint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAddressOwner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNonce",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPassKeyOwner",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pubKeyX",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pubKeyY",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "keyId",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PassKeyId",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "functionType",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "argument",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct UserOp",
                  "name": "userop",
                  "type": "tuple"
                }
              ],
              "name": "getUserOpHash",
              "outputs": [
                { "internalType": "bytes32", "name": "", "type": "bytes32" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pubKeyX",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pubKeyY",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "keyId",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PassKeyId",
                  "name": "anOwner",
                  "type": "tuple"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "passKeyOwnerEnabled",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            { "stateMutability": "payable", "type": "receive" }
          ],
          "devdoc": {
            "events": {
              "Initialized(uint8)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              }
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161242590816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c908163759a68c01461008e575080638fb4107214610089578063b627e20f14610084578063be9ef8431461007f578063d087d2881461007a578063f0f05cef146100755763fd5c8d720361000e5761055a565b610475565b6103e9565b6103a8565b610353565b610296565b3461013e577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126101325760043567ffffffffffffffff9182821161013a576060908236030112610136576100e860e0604052565b8060040135608052602481013560a052604481013591821161013657013660238201121561013257610124903690602460048201359101610237565b60c05261012f6106d1565b80f35b5080fd5b8280fd5b8380fd5b80fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761018c57604052565b610141565b6080810190811067ffffffffffffffff82111761018c57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761018c57604052565b604051906101fb82610170565b565b67ffffffffffffffff811161018c57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610243826101fd565b9161025160405193846101ad565b82948184528183011161026e578281602093846000960137010152565b600080fd5b60005b8381106102865750506000910152565b8181015183820152602001610276565b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e576060604080516102d481610170565b60008152600060208201520152604060a06102ed6105cd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84519485936020855280516020860152602081015182860152015160608085015261034a8151809281608088015260208888019101610273565b01168101030190f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e57602073ffffffffffffffffffffffffffffffffffffffff60005460101c16604051908152f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e57602060ff600454166040519015158152f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e576020600554604051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060208282011261026e576004359167ffffffffffffffff831161026e578260809203011261026e5760040190565b3461026e5761048336610425565b61049561048f826114a6565b15610b9a565b6104a76104a18261184f565b15610c25565b60038135801561053d575b60018114610520575b60028114610503575b146104dd575b6100196104d8600554610d30565b600555565b6104f86104f18260206104fd940190610cb0565b3691610237565b610ee4565b386104ca565b61051b6105166104f16020860186610cb0565b610d67565b6104c4565b6105386105336104f16020860186610cb0565b61133d565b6104bb565b6105556105506104f16020860186610cb0565b61104c565b6104b2565b3461026e57602061057261056d36610425565b611a8d565b604051908152f35b90600182811c921680156105c3575b602083101461059457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610589565b604051906105da82610170565b816001908154815260025460209081830152604051928391600091600354906106028261057a565b80865291818116908115610694575060011461062f575b5050506040929161062b9103846101ad565b0152565b909493925060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b946000915b81831061067c5750939450919250908201018161062b6040610619565b8654888401850152958601958794509183019161065f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b83010190508161062b6040610619565b60005460ff8160081c16158091819261086c575b811561084c575b50156107c8578061072360017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b610792575b61073061087a565b61073657565b6107637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1565b6107c36101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b610728565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b303b1591508161085e575b50386106ec565b6001915060ff161438610857565b600160ff82161091506106e5565b6001807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455608051815560a05160025560c0519081519167ffffffffffffffff831161018c576108db836108d660035461057a565b610a1a565b60209081601f85116001146109545750600091849182610929575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c191617600355565b015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff386108f6565b9190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0819596166109a860036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90565b946000905b88838310610a0057505050106109c9575b505050811b01600355565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806109be565b8587015188559096019594850194879350908101906109ad565b601f8111610a26575050565b600090600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906020601f850160051c83019410610a81575b601f0160051c01915b828110610a7657505050565b818155600101610a6a565b9092508290610a61565b8051600190815560406020928381015160025501519182519267ffffffffffffffff841161018c57610ac2846108d660035461057a565b81601f8511600114610b0c57506000918491826109295750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c191617600355565b9190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081959616610b6060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90565b946000905b88838310610b8057505050106109c957505050811b01600355565b858701518855909601959485019487935090810190610b65565b15610ba157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a205369676e617475726520766572696669636174696f6e2060448201527f6661696c656400000000000000000000000000000000000000000000000000006064820152fd5b15610c2c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636f756e743a204e6f6e636520766572696669636174696f6e206661696c60448201527f65640000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561026e570180359067ffffffffffffffff821161026e5760200191813603831361026e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060018201809211610d3e57565b610d01565b604051906020820182811067ffffffffffffffff82111761018c5760405260008252565b600160ff60045416151503610e1b576014610dee910151610da6610d896101ee565b6000815260006020820152610d9c610d43565b6040820152610a8b565b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00006000549260101b16911617600055565b6101fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060045416600455565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a20416c72656164792061646472657373206f776e6572206560448201527f6e61626c656400000000000000000000000000000000000000000000000000006064820152fd5b81601f8201121561026e578051610eb5816101fd565b92610ec360405194856101ad565b8184526020828401011161026e57610ee19160208085019101610273565b90565b60ff60045416610faa57805181019060608183031261026e5760208101519060408101519060608101519067ffffffffffffffff821161026e576020610f329281610f7a9701920101610e9f565b90610f3b6101ee565b92835260208301526040820152610f757fffffffffffffffffffff0000000000000000000000000000000000000000ffff60005416600055565b610a8b565b6101fb60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a20416c726561647920706173736b6579206f776e6572206560448201527f6e61626c656400000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff81160361026e57565b8051810160608282031261026e576020820151906110698261102e565b604083015190606084015167ffffffffffffffff811161026e576101fb9460206110ad928173ffffffffffffffffffffffffffffffffffffffff9501920101610e9f565b9216611486565b67ffffffffffffffff811161018c5760051b60200190565b81601f8201121561026e578051916110e3836110b4565b926110f160405194856101ad565b808452602092838086019260051b82010192831161026e578301905b82821061111b575050505090565b8151815290830190830161110d565b9080601f8301121561026e57815190611142826110b4565b9261115060405194856101ad565b828452602092838086019160051b8301019280841161026e57848301915b84831061117e5750505050505090565b825167ffffffffffffffff811161026e5786916111a084848094890101610e9f565b81520192019161116e565b909160608284031261026e5781519167ffffffffffffffff9283811161026e5781019380601f8601121561026e5784516111e4816110b4565b906111f260405192836101ad565b808252602096878084019260051b8201019184831161026e5788809201905b83821061124a57505050509482015184811161026e57816112339184016110cc565b93604083015190811161026e57610ee1920161112a565b82809183516112588161102e565b815201910190611211565b1561126a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d3e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80518210156113385760209160051b010190565b6112f5565b61135090602080825183010191016111ab565b92919061136a825185518091149081611416575b50611263565b80516113cc575060005b81518110156113c657806113bc6113ab6113916113c19486611324565b5173ffffffffffffffffffffffffffffffffffffffff1690565b6113b58388611324565b5190611435565b6112c8565b611374565b50509050565b929060005b815181101561140f57806113bc6113ee61139161140a9486611324565b6113f88389611324565b516114038488611324565b5191611486565b6113d1565b5050509050565b835180159250821561142b575b505038611364565b1490503880611423565b600091829182602083519301915af13d1561147e573d90611455826101fd565b9161146360405193846101ad565b82523d6000602084013e5b156114765750565b602081519101fd5b60609061146e565b916000928392602083519301915af13d1561147e573d90611455826101fd565b6114af81611a8d565b60045460ff16156114f3576114e1906114d26104f18460606114e5960190610cb0565b906114db6105cd565b91611997565b1590565b6114ee57600090565b600190565b61159461157b61154173ffffffffffffffffffffffffffffffffffffffff937f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b6115756104f161156a60005473ffffffffffffffffffffffffffffffffffffffff9060101c1690565b966060810190610cb0565b906115a0565b73ffffffffffffffffffffffffffffffffffffffff1690565b9116036114ee57600090565b610ee1916115ad91611777565b9190916115ee565b600511156115bf57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6115f7816115b5565b806115ff5750565b611608816115b5565b6001810361166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611678816115b5565b600281036116df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806116eb6003926115b5565b146116f257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9060418151146000146117a5576117a1916020820151906060604084015193015160001a906117bb565b9091565b5050600090600290565b6040513d6000823e3d90fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116118435791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561183e57815173ffffffffffffffffffffffffffffffffffffffff811615611838579190565b50600190565b6117af565b50505050600090600390565b60406005549101351461186157600190565b600090565b90604051916020830152602082526040820182811067ffffffffffffffff82111761018c57604052565b906118a360209282815194859201610273565b0190565b6101fb9193929360405194859183516118c881602096878088019101610273565b83016118dc82518093878085019101610273565b016118ef82518093868085019101610273565b010380855201836101ad565b60406101fb919392938151948161191c879351809260208087019101610273565b82019060208201520360208101855201836101ad565b1561193957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4b6579206e6f7420666f756e64000000000000000000000000000000000000006044820152fd5b90815182019060209260c08185850194031261026e5760408101519160608201519360808301519267ffffffffffffffff9384811161026e5782886119de92840101610e9f565b9360a082015181811161026e5783896119f992850101610e9f565b9360c083015191821161026e578894611a2f611a2a611a2460009789611a3597611a41990101610e9f565b93611866565b611bcb565b906118a7565b60405191828092611890565b039060025afa1561183e576000611a5e611a3586938351906118fb565b039060025afa1561183e57610ee193611a8360005194820151151580611a8857611932565b611c7d565b611932565b611a9a6020820182610cb0565b9081604051918237206040805192602084019281358452828501520135606083015260608252608082019082821067ffffffffffffffff83111761018c5781604052825190209160a081019283523060c082015260e04691015260608152611b0181610191565b51902090565b60405190611b1482610170565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b908160031b9180830460081490151715610d3e57565b90611b86826101fd565b611b9360405191826101ad565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611bc182946101fd565b0190602036910137565b805115611c7457611bda611b07565b611c00611bf1611bea8451611b66565b6006900490565b835160069006611c6657611b7c565b91602083019181805101925b838310611c1a575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301611c0c565b611c6f906112c8565b611b7c565b50610ee1610d43565b92919080158015611e98575b8015611e6e575b8015611e44575b611e3b57610ee193611e30611caa612015565b91611cb36101ee565b600081526000602082015260006040820152835260208151910151611cd66101ee565b918252602082015260016040820152611cf560208401918083526120a4565b90611e21611d0b6040860193808552835161205a565b9260608601938452611e11611e01611d216101ee565b7f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29681527f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5602082015260016040820152611d8460808a019180835287519061205a565b60a08a0152611d96815185519061205a565b60c08a0152611da8815188519061205a565b60e08a0152611db781516120a4565b90611dcc6101008b019280845288519061205a565b6101208b0152611ddf825186519061205a565b6101408b0152611df2825189519061205a565b6101608b01525190519061205a565b610180880194818652519061205a565b6101a0870152825190519061205a565b6101c08501525190519061205a565b6101e0820152611ea0565b50505050600090565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551821015611c97565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551811015611c90565b508115611c89565b939290917fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255190818410801590611fb0575b611fa657611edf829161236e565b809309918309600080918193608091825b611f0857505050611f03939495506120c4565b501490565b85611f84575b888160fe1c600c8460fc1c161780611f3b575b5050611f3490600292831b921b92611fcb565b9182611ef0565b611f779397611f34976040611f6e611f5685879b989b611fba565b5151946020611f658289611fba565b51015196611fba565b5101519461219b565b9590945090928838611f21565b9294611f959194611f9b93966122b8565b916122b8565b949193909392611f0e565b5060009450505050565b5081811015611ed1565b9060108110156113385760051b0190565b8015610d3e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6040519061200382610170565b60006040838281528260208201520152565b6040519061020080830183811067ffffffffffffffff82111761018c576040528260005b82811061204557505050565b602090612050611ff6565b8184015201612039565b61208791612066611ff6565b5081519160406020820151910151825191604060208501519401519461219b565b906040519261209584610170565b83526020830152604082015290565b612087906120b0611ff6565b5080519060406020820151910151916122b8565b929190811561218f578160007fffffffff00000001000000000000000000000000ffffffffffffffffffffffff8481809611612185575b505060405191602083526020808401526020604084015260608301527fffffffff00000001000000000000000000000000fffffffffffffffffffffffd60808301528360a083015260208260c08160057ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1561013e575082905181808280098097099509900990565b06915083386120fb565b50509050600090600090565b9395939190816121ad57505050929190565b909291949586156122ae577fffffffff00000001000000000000000000000000ffffffffffffffffffffffff9586858196958280838199099b818d999781868180808f9d888009809d099c8d99099c81878d0990099c0990099308958181106122a7575b03958280808960020980099281808481878d09938181106122a0575b036002099481868009980996828089600209830890818110612299575b039b8c936002090994818110612292575b03900997828910612289575b859182910892800995828710612280575b960394030990565b95840195612278565b97850197612267565b830161225b565b830161224a565b820161222d565b8301612211565b5094505091929190565b9290917fffffffff00000001000000000000000000000000ffffffffffffffffffffffff809181858009958280808080808c87096004099a800960080992818080808089800980097fffffffff00000001000000000000000000000000fffffffffffffffffffffffc0992800960030908818960020982828009818110612367575b038981809b10612360575b039009818110612359575b03940960020990565b8301612350565b8301612345565b830161233a565b7fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255180821161240f575b60405191602083526020808401526020604084015260608301527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f608083015260a082015260208160c08160057ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1561026e575190565b8091069061239756fea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x6F JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x34 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2425 SWAP1 DUP2 PUSH2 0xC7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x25 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x759A68C0 EQ PUSH2 0x8E JUMPI POP DUP1 PUSH4 0x8FB41072 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB627E20F EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xBE9EF843 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xF0F05CEF EQ PUSH2 0x75 JUMPI PUSH4 0xFD5C8D72 SUB PUSH2 0xE JUMPI PUSH2 0x55A JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST CALLVALUE PUSH2 0x13E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 DUP2 CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x13A JUMPI PUSH1 0x60 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x136 JUMPI PUSH2 0xE8 PUSH1 0xE0 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x80 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0xA0 MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x136 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x124 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0xC0 MSTORE PUSH2 0x12F PUSH2 0x6D1 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FB DUP3 PUSH2 0x170 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x243 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP2 PUSH2 0x251 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1AD JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x26E JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x286 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x60 PUSH1 0x40 DUP1 MLOAD PUSH2 0x2D4 DUP2 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x40 PUSH1 0xA0 PUSH2 0x2ED PUSH2 0x5CD JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE DUP1 MLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD MSTORE PUSH2 0x34A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0x20 DUP9 DUP9 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP1 PUSH1 0x20 DUP3 DUP3 ADD SLT PUSH2 0x26E JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x26E JUMPI DUP3 PUSH1 0x80 SWAP3 SUB ADD SLT PUSH2 0x26E JUMPI PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x483 CALLDATASIZE PUSH2 0x425 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x48F DUP3 PUSH2 0x14A6 JUMP JUMPDEST ISZERO PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x4A1 DUP3 PUSH2 0x184F JUMP JUMPDEST ISZERO PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x3 DUP2 CALLDATALOAD DUP1 ISZERO PUSH2 0x53D JUMPI JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x520 JUMPI JUMPDEST PUSH1 0x2 DUP2 EQ PUSH2 0x503 JUMPI JUMPDEST EQ PUSH2 0x4DD JUMPI JUMPDEST PUSH2 0x19 PUSH2 0x4D8 PUSH1 0x5 SLOAD PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0x4F1 DUP3 PUSH1 0x20 PUSH2 0x4FD SWAP5 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x237 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST CODESIZE PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x51B PUSH2 0x516 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x538 PUSH2 0x533 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x133D JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x555 PUSH2 0x550 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x104C JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 PUSH2 0x572 PUSH2 0x56D CALLDATASIZE PUSH2 0x425 JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x5C3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x594 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5DA DUP3 PUSH2 0x170 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x2 SLOAD PUSH1 0x20 SWAP1 DUP2 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x602 DUP3 PUSH2 0x57A JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x694 JUMPI POP PUSH1 0x1 EQ PUSH2 0x62F JUMPI JUMPDEST POP POP POP PUSH1 0x40 SWAP3 SWAP2 PUSH2 0x62B SWAP2 SUB DUP5 PUSH2 0x1AD JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 SWAP5 SWAP4 SWAP3 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x67C JUMPI POP SWAP4 SWAP5 POP SWAP2 SWAP3 POP SWAP1 DUP3 ADD ADD DUP2 PUSH2 0x62B PUSH1 0x40 PUSH2 0x619 JUMP JUMPDEST DUP7 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP6 DUP7 ADD SWAP6 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x65F JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 DUP8 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP1 POP DUP2 PUSH2 0x62B PUSH1 0x40 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO DUP1 SWAP2 DUP2 SWAP3 PUSH2 0x86C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x84C JUMPI JUMPDEST POP ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH2 0x723 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x792 JUMPI JUMPDEST PUSH2 0x730 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x736 JUMPI JUMP JUMPDEST PUSH2 0x763 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP DUP2 PUSH2 0x85E JUMPI JUMPDEST POP CODESIZE PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH1 0xFF AND EQ CODESIZE PUSH2 0x857 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF DUP3 AND LT SWAP2 POP PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x80 MLOAD DUP2 SSTORE PUSH1 0xA0 MLOAD PUSH1 0x2 SSTORE PUSH1 0xC0 MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x18C JUMPI PUSH2 0x8DB DUP4 PUSH2 0x8D6 PUSH1 0x3 SLOAD PUSH2 0x57A JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x954 JUMPI POP PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP3 PUSH2 0x929 JUMPI JUMPDEST POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CODESIZE PUSH2 0x8F6 JUMP JUMPDEST SWAP2 SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 SWAP6 SWAP7 AND PUSH2 0x9A8 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0xA00 JUMPI POP POP POP LT PUSH2 0x9C9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x9BE JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA26 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0xA81 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0xA76 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA6A JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0xA61 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x40 PUSH1 0x20 SWAP3 DUP4 DUP2 ADD MLOAD PUSH1 0x2 SSTORE ADD MLOAD SWAP2 DUP3 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x18C JUMPI PUSH2 0xAC2 DUP5 PUSH2 0x8D6 PUSH1 0x3 SLOAD PUSH2 0x57A JUMP JUMPDEST DUP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0xB0C JUMPI POP PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP3 PUSH2 0x929 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 SWAP6 SWAP7 AND PUSH2 0xB60 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0xB80 JUMPI POP POP POP LT PUSH2 0x9C9 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0xB65 JUMP JUMPDEST ISZERO PUSH2 0xBA1 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A205369676E617475726520766572696669636174696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6661696C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0xC2C JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A204E6F6E636520766572696669636174696F6E206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x26E JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x26E JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x26E JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD3E JUMPI JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF PUSH1 0x4 SLOAD AND ISZERO ISZERO SUB PUSH2 0xE1B JUMPI PUSH1 0x14 PUSH2 0xDEE SWAP2 ADD MLOAD PUSH2 0xDA6 PUSH2 0xD89 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD9C PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xA8B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH1 0x0 SLOAD SWAP3 PUSH1 0x10 SHL AND SWAP2 AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x1FB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A20416C72656164792061646472657373206F776E65722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E61626C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP1 MLOAD PUSH2 0xEB5 DUP2 PUSH2 0x1FD JUMP JUMPDEST SWAP3 PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x26E JUMPI PUSH2 0xEE1 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH2 0xFAA JUMPI DUP1 MLOAD DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 DUP2 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH2 0xF32 SWAP3 DUP2 PUSH2 0xF7A SWAP8 ADD SWAP3 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP1 PUSH2 0xF3B PUSH2 0x1EE JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xF75 PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x1FB PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A20416C726561647920706173736B6579206F776E65722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E61626C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x26E JUMPI JUMP JUMPDEST DUP1 MLOAD DUP2 ADD PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH2 0x1069 DUP3 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 PUSH1 0x60 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x26E JUMPI PUSH2 0x1FB SWAP5 PUSH1 0x20 PUSH2 0x10AD SWAP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 ADD SWAP3 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP3 AND PUSH2 0x1486 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP1 MLOAD SWAP2 PUSH2 0x10E3 DUP4 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 PUSH2 0x10F1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x26E JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x111B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x110D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP2 MLOAD SWAP1 PUSH2 0x1142 DUP3 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 PUSH2 0x1150 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x26E JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x117E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x26E JUMPI DUP7 SWAP2 PUSH2 0x11A0 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0xE9F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x116E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x26E JUMPI DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP2 GT PUSH2 0x26E JUMPI DUP2 ADD SWAP4 DUP1 PUSH1 0x1F DUP7 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP5 MLOAD PUSH2 0x11E4 DUP2 PUSH2 0x10B4 JUMP JUMPDEST SWAP1 PUSH2 0x11F2 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1AD JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP1 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x26E JUMPI DUP9 DUP1 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x124A JUMPI POP POP POP POP SWAP5 DUP3 ADD MLOAD DUP5 DUP2 GT PUSH2 0x26E JUMPI DUP2 PUSH2 0x1233 SWAP2 DUP5 ADD PUSH2 0x10CC JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x26E JUMPI PUSH2 0xEE1 SWAP3 ADD PUSH2 0x112A JUMP JUMPDEST DUP3 DUP1 SWAP2 DUP4 MLOAD PUSH2 0x1258 DUP2 PUSH2 0x102E JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1211 JUMP JUMPDEST ISZERO PUSH2 0x126A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD3E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x1350 SWAP1 PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x136A DUP3 MLOAD DUP6 MLOAD DUP1 SWAP2 EQ SWAP1 DUP2 PUSH2 0x1416 JUMPI JUMPDEST POP PUSH2 0x1263 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x13CC JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x13C6 JUMPI DUP1 PUSH2 0x13BC PUSH2 0x13AB PUSH2 0x1391 PUSH2 0x13C1 SWAP5 DUP7 PUSH2 0x1324 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B5 DUP4 DUP9 PUSH2 0x1324 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST POP POP SWAP1 POP JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x140F JUMPI DUP1 PUSH2 0x13BC PUSH2 0x13EE PUSH2 0x1391 PUSH2 0x140A SWAP5 DUP7 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x13F8 DUP4 DUP10 PUSH2 0x1324 JUMP JUMPDEST MLOAD PUSH2 0x1403 DUP5 DUP9 PUSH2 0x1324 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x1486 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP4 MLOAD DUP1 ISZERO SWAP3 POP DUP3 ISZERO PUSH2 0x142B JUMPI JUMPDEST POP POP CODESIZE PUSH2 0x1364 JUMP JUMPDEST EQ SWAP1 POP CODESIZE DUP1 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x147E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1455 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP2 PUSH2 0x1463 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1AD JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1476 JUMPI POP JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x147E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1455 DUP3 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x14AF DUP2 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14E1 SWAP1 PUSH2 0x14D2 PUSH2 0x4F1 DUP5 PUSH1 0x60 PUSH2 0x14E5 SWAP7 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH2 0x14DB PUSH2 0x5CD JUMP JUMPDEST SWAP2 PUSH2 0x1997 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x14EE JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1594 PUSH2 0x157B PUSH2 0x1541 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1575 PUSH2 0x4F1 PUSH2 0x156A PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP2 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 AND SUB PUSH2 0x14EE JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 PUSH2 0x15AD SWAP2 PUSH2 0x1777 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x15BF JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F7 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP1 PUSH2 0x15FF JUMPI POP JUMP JUMPDEST PUSH2 0x1608 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1678 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x16EB PUSH1 0x3 SWAP3 PUSH2 0x15B5 JUMP JUMPDEST EQ PUSH2 0x16F2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x17A5 JUMPI PUSH2 0x17A1 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x17BB JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0x1843 JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x1838 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x17AF JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x5 SLOAD SWAP2 ADD CALLDATALOAD EQ PUSH2 0x1861 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x18A3 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x273 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1FB SWAP2 SWAP4 SWAP3 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP2 DUP4 MLOAD PUSH2 0x18C8 DUP2 PUSH1 0x20 SWAP7 DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST DUP4 ADD PUSH2 0x18DC DUP3 MLOAD DUP1 SWAP4 DUP8 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD PUSH2 0x18EF DUP3 MLOAD DUP1 SWAP4 DUP7 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD SUB DUP1 DUP6 MSTORE ADD DUP4 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 PUSH2 0x1FB SWAP2 SWAP4 SWAP3 SWAP4 DUP2 MLOAD SWAP5 DUP2 PUSH2 0x191C DUP8 SWAP4 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP8 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST DUP3 ADD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE SUB PUSH1 0x20 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x1AD JUMP JUMPDEST ISZERO PUSH2 0x1939 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B6579206E6F7420666F756E6400000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP3 ADD SWAP1 PUSH1 0x20 SWAP3 PUSH1 0xC0 DUP2 DUP6 DUP6 ADD SWAP5 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x40 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 DUP3 ADD MLOAD SWAP4 PUSH1 0x80 DUP4 ADD MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP2 GT PUSH2 0x26E JUMPI DUP3 DUP9 PUSH2 0x19DE SWAP3 DUP5 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP3 ADD MLOAD DUP2 DUP2 GT PUSH2 0x26E JUMPI DUP4 DUP10 PUSH2 0x19F9 SWAP3 DUP6 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP4 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x26E JUMPI DUP9 SWAP5 PUSH2 0x1A2F PUSH2 0x1A2A PUSH2 0x1A24 PUSH1 0x0 SWAP8 DUP10 PUSH2 0x1A35 SWAP8 PUSH2 0x1A41 SWAP10 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1BCB JUMP JUMPDEST SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH2 0x1890 JUMP JUMPDEST SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI PUSH1 0x0 PUSH2 0x1A5E PUSH2 0x1A35 DUP7 SWAP4 DUP4 MLOAD SWAP1 PUSH2 0x18FB JUMP JUMPDEST SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI PUSH2 0xEE1 SWAP4 PUSH2 0x1A83 PUSH1 0x0 MLOAD SWAP5 DUP3 ADD MLOAD ISZERO ISZERO DUP1 PUSH2 0x1A88 JUMPI PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1A9A PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x40 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP2 CALLDATALOAD DUP5 MSTORE DUP3 DUP6 ADD MSTORE ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x18C JUMPI DUP2 PUSH1 0x40 MSTORE DUP3 MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0xA0 DUP2 ADD SWAP3 DUP4 MSTORE ADDRESS PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 CHAINID SWAP2 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x1B01 DUP2 PUSH2 0x191 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B14 DUP3 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392D5F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x3 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xD3E JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x1B86 DUP3 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x1B93 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1AD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1BC1 DUP3 SWAP5 PUSH2 0x1FD JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1BDA PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x1C00 PUSH2 0x1BF1 PUSH2 0x1BEA DUP5 MLOAD PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x6 SWAP1 DIV SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x6 SWAP1 MOD PUSH2 0x1C66 JUMPI PUSH2 0x1B7C JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP2 DUP1 MLOAD ADD SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C1A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH1 0x3 DUP1 SWAP5 ADD SWAP4 DUP5 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP6 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP7 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD PUSH1 0x2 DUP7 ADD MSTORE8 AND DUP6 ADD ADD MLOAD SWAP1 DUP3 ADD MSTORE8 ADD PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x1C6F SWAP1 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x1B7C JUMP JUMPDEST POP PUSH2 0xEE1 PUSH2 0xD43 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x1E98 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E6E JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E44 JUMPI JUMPDEST PUSH2 0x1E3B JUMPI PUSH2 0xEE1 SWAP4 PUSH2 0x1E30 PUSH2 0x1CAA PUSH2 0x2015 JUMP JUMPDEST SWAP2 PUSH2 0x1CB3 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH2 0x1CD6 PUSH2 0x1EE JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CF5 PUSH1 0x20 DUP5 ADD SWAP2 DUP1 DUP4 MSTORE PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH2 0x1E21 PUSH2 0x1D0B PUSH1 0x40 DUP7 ADD SWAP4 DUP1 DUP6 MSTORE DUP4 MLOAD PUSH2 0x205A JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD SWAP4 DUP5 MSTORE PUSH2 0x1E11 PUSH2 0x1E01 PUSH2 0x1D21 PUSH2 0x1EE JUMP JUMPDEST PUSH32 0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296 DUP2 MSTORE PUSH32 0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1D84 PUSH1 0x80 DUP11 ADD SWAP2 DUP1 DUP4 MSTORE DUP8 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xA0 DUP11 ADD MSTORE PUSH2 0x1D96 DUP2 MLOAD DUP6 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MSTORE PUSH2 0x1DA8 DUP2 MLOAD DUP9 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x1DB7 DUP2 MLOAD PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH2 0x1DCC PUSH2 0x100 DUP12 ADD SWAP3 DUP1 DUP5 MSTORE DUP9 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x120 DUP12 ADD MSTORE PUSH2 0x1DDF DUP3 MLOAD DUP7 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x140 DUP12 ADD MSTORE PUSH2 0x1DF2 DUP3 MLOAD DUP10 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x160 DUP12 ADD MSTORE MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x180 DUP9 ADD SWAP5 DUP2 DUP7 MSTORE MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1A0 DUP8 ADD MSTORE DUP3 MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1C0 DUP6 ADD MSTORE MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD MSTORE PUSH2 0x1EA0 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP3 LT ISZERO PUSH2 0x1C97 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP2 LT ISZERO PUSH2 0x1C90 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x1C89 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 SWAP1 DUP2 DUP5 LT DUP1 ISZERO SWAP1 PUSH2 0x1FB0 JUMPI JUMPDEST PUSH2 0x1FA6 JUMPI PUSH2 0x1EDF DUP3 SWAP2 PUSH2 0x236E JUMP JUMPDEST DUP1 SWAP4 MULMOD SWAP2 DUP4 MULMOD PUSH1 0x0 DUP1 SWAP2 DUP2 SWAP4 PUSH1 0x80 SWAP2 DUP3 JUMPDEST PUSH2 0x1F08 JUMPI POP POP POP PUSH2 0x1F03 SWAP4 SWAP5 SWAP6 POP PUSH2 0x20C4 JUMP JUMPDEST POP EQ SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x1F84 JUMPI JUMPDEST DUP9 DUP2 PUSH1 0xFE SHR PUSH1 0xC DUP5 PUSH1 0xFC SHR AND OR DUP1 PUSH2 0x1F3B JUMPI JUMPDEST POP POP PUSH2 0x1F34 SWAP1 PUSH1 0x2 SWAP3 DUP4 SHL SWAP3 SHL SWAP3 PUSH2 0x1FCB JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x1EF0 JUMP JUMPDEST PUSH2 0x1F77 SWAP4 SWAP8 PUSH2 0x1F34 SWAP8 PUSH1 0x40 PUSH2 0x1F6E PUSH2 0x1F56 DUP6 DUP8 SWAP12 SWAP9 SWAP12 PUSH2 0x1FBA JUMP JUMPDEST MLOAD MLOAD SWAP5 PUSH1 0x20 PUSH2 0x1F65 DUP3 DUP10 PUSH2 0x1FBA JUMP JUMPDEST MLOAD ADD MLOAD SWAP7 PUSH2 0x1FBA JUMP JUMPDEST MLOAD ADD MLOAD SWAP5 PUSH2 0x219B JUMP JUMPDEST SWAP6 SWAP1 SWAP5 POP SWAP1 SWAP3 DUP9 CODESIZE PUSH2 0x1F21 JUMP JUMPDEST SWAP3 SWAP5 PUSH2 0x1F95 SWAP2 SWAP5 PUSH2 0x1F9B SWAP4 SWAP7 PUSH2 0x22B8 JUMP JUMPDEST SWAP2 PUSH2 0x22B8 JUMP JUMPDEST SWAP5 SWAP2 SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x1F0E JUMP JUMPDEST POP PUSH1 0x0 SWAP5 POP POP POP POP JUMP JUMPDEST POP DUP2 DUP2 LT ISZERO PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2003 DUP3 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x200 DUP1 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE DUP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2045 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x2050 PUSH2 0x1FF6 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x2039 JUMP JUMPDEST PUSH2 0x2087 SWAP2 PUSH2 0x2066 PUSH2 0x1FF6 JUMP JUMPDEST POP DUP2 MLOAD SWAP2 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD DUP3 MLOAD SWAP2 PUSH1 0x40 PUSH1 0x20 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP5 PUSH2 0x219B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2095 DUP5 PUSH2 0x170 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2087 SWAP1 PUSH2 0x20B0 PUSH2 0x1FF6 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH2 0x22B8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP2 ISZERO PUSH2 0x218F JUMPI DUP2 PUSH1 0x0 PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 DUP1 SWAP7 GT PUSH2 0x2185 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFD PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0xC0 DUP2 PUSH1 0x5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF STATICCALL ISZERO PUSH2 0x13E JUMPI POP DUP3 SWAP1 MLOAD DUP2 DUP1 DUP3 DUP1 MULMOD DUP1 SWAP8 MULMOD SWAP6 MULMOD SWAP1 MULMOD SWAP1 JUMP JUMPDEST MOD SWAP2 POP DUP4 CODESIZE PUSH2 0x20FB JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP4 SWAP6 SWAP4 SWAP2 SWAP1 DUP2 PUSH2 0x21AD JUMPI POP POP POP SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP5 SWAP6 DUP7 ISZERO PUSH2 0x22AE JUMPI PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 DUP6 DUP2 SWAP7 SWAP6 DUP3 DUP1 DUP4 DUP2 SWAP10 MULMOD SWAP12 DUP2 DUP14 SWAP10 SWAP8 DUP2 DUP7 DUP2 DUP1 DUP1 DUP16 SWAP14 DUP9 DUP1 MULMOD DUP1 SWAP14 MULMOD SWAP13 DUP14 SWAP10 MULMOD SWAP13 DUP2 DUP8 DUP14 MULMOD SWAP1 MULMOD SWAP13 MULMOD SWAP1 MULMOD SWAP4 ADDMOD SWAP6 DUP2 DUP2 LT PUSH2 0x22A7 JUMPI JUMPDEST SUB SWAP6 DUP3 DUP1 DUP1 DUP10 PUSH1 0x2 MULMOD DUP1 MULMOD SWAP3 DUP2 DUP1 DUP5 DUP2 DUP8 DUP14 MULMOD SWAP4 DUP2 DUP2 LT PUSH2 0x22A0 JUMPI JUMPDEST SUB PUSH1 0x2 MULMOD SWAP5 DUP2 DUP7 DUP1 MULMOD SWAP9 MULMOD SWAP7 DUP3 DUP1 DUP10 PUSH1 0x2 MULMOD DUP4 ADDMOD SWAP1 DUP2 DUP2 LT PUSH2 0x2299 JUMPI JUMPDEST SUB SWAP12 DUP13 SWAP4 PUSH1 0x2 MULMOD MULMOD SWAP5 DUP2 DUP2 LT PUSH2 0x2292 JUMPI JUMPDEST SUB SWAP1 MULMOD SWAP8 DUP3 DUP10 LT PUSH2 0x2289 JUMPI JUMPDEST DUP6 SWAP2 DUP3 SWAP2 ADDMOD SWAP3 DUP1 MULMOD SWAP6 DUP3 DUP8 LT PUSH2 0x2280 JUMPI JUMPDEST SWAP7 SUB SWAP5 SUB MULMOD SWAP1 JUMP JUMPDEST SWAP6 DUP5 ADD SWAP6 PUSH2 0x2278 JUMP JUMPDEST SWAP8 DUP6 ADD SWAP8 PUSH2 0x2267 JUMP JUMPDEST DUP4 ADD PUSH2 0x225B JUMP JUMPDEST DUP4 ADD PUSH2 0x224A JUMP JUMPDEST DUP3 ADD PUSH2 0x222D JUMP JUMPDEST DUP4 ADD PUSH2 0x2211 JUMP JUMPDEST POP SWAP5 POP POP SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 DUP2 DUP6 DUP1 MULMOD SWAP6 DUP3 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 DUP8 MULMOD PUSH1 0x4 MULMOD SWAP11 DUP1 MULMOD PUSH1 0x8 MULMOD SWAP3 DUP2 DUP1 DUP1 DUP1 DUP1 DUP10 DUP1 MULMOD DUP1 MULMOD PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC MULMOD SWAP3 DUP1 MULMOD PUSH1 0x3 MULMOD ADDMOD DUP2 DUP10 PUSH1 0x2 MULMOD DUP3 DUP3 DUP1 MULMOD DUP2 DUP2 LT PUSH2 0x2367 JUMPI JUMPDEST SUB DUP10 DUP2 DUP1 SWAP12 LT PUSH2 0x2360 JUMPI JUMPDEST SUB SWAP1 MULMOD DUP2 DUP2 LT PUSH2 0x2359 JUMPI JUMPDEST SUB SWAP5 MULMOD PUSH1 0x2 MULMOD SWAP1 JUMP JUMPDEST DUP4 ADD PUSH2 0x2350 JUMP JUMPDEST DUP4 ADD PUSH2 0x2345 JUMP JUMPDEST DUP4 ADD PUSH2 0x233A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP1 DUP3 GT PUSH2 0x240F JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC63254F PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xC0 DUP2 PUSH1 0x5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF STATICCALL ISZERO PUSH2 0x26E JUMPI MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP2 MOD SWAP1 PUSH2 0x2397 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "281:6995:14:-:0;;;;;;;5985:13:6;281:6995:14;;;;;;;;;;;;;;6056:31:6;6052:139;;-1:-1:-1;281:6995:14;;;;;;;;;6052:139:6;281:6995:14;;;;;;5985:13:6;281:6995:14;6152:28:6;281:6995:14;;;;;;6152:28:6;6052:139;;;281:6995:14;-1:-1:-1;;;281:6995:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;281:6995:14;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_array_address_dynt_array_uint256_dynt_array_bytes_dyn_fromMemory": {
                  "entryPoint": 4523,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_array_bytes_dyn_fromMemory": {
                  "entryPoint": 4394,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_array_uint256_dyn_fromMemory": {
                  "entryPoint": 4300,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_available_length_string": {
                  "entryPoint": 567,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 3743,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_struct_UserOp_calldata": {
                  "entryPoint": 1061,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 6288,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_520d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_stringliteral": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "access_calldata_tail_bytes_calldata": {
                  "entryPoint": 3248,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "allocate_and_zero_memory_array_array_struct_JPoint": {
                  "entryPoint": 8213,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_string": {
                  "entryPoint": 7036,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_JPoint": {
                  "entryPoint": 8182,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 494,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "allocate_memory_array_string": {
                  "entryPoint": 3395,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 4276,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 509,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "bytes_concat_bytes32": {
                  "entryPoint": 6246,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "bytes_concat_bytes_bytes32": {
                  "entryPoint": 6395,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3376,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 7014,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 2586,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_literal_to_memory_5f7e6d3cba140c1411e96b7033571a229a3135b5c436a9698b398a19a1c64b50": {
                  "entryPoint": 6919,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 627,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "decrement_uint256": {
                  "entryPoint": 8139,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_entrypoint": {
                  "entryPoint": 1141,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getAddressOwner": {
                  "entryPoint": 851,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getNonce": {
                  "entryPoint": 1001,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getPassKeyOwner": {
                  "entryPoint": 662,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getUserOpHash": {
                  "entryPoint": 1370,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_passKeyOwnerEnabled": {
                  "entryPoint": 936,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 1402,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 429,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_19700": {
                  "entryPoint": 401,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation_9309": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "finalize_allocation_9314": {
                  "entryPoint": 368,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_Verify": {
                  "entryPoint": 7293,
                  "id": 3656,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_VerifyWithPrecompute": {
                  "entryPoint": 7840,
                  "id": 3728,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_affineFromJacobian": {
                  "entryPoint": 8388,
                  "id": 4220,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "fun_call": {
                  "entryPoint": 5254,
                  "id": 3141,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_call_9343": {
                  "entryPoint": 5173,
                  "id": 3141,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_changeOwnershipToAddress": {
                  "entryPoint": 3431,
                  "id": 2787,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_changeOwnershipToPassKeyAddress": {
                  "entryPoint": 3812,
                  "id": 2842,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_encode": {
                  "entryPoint": 7115,
                  "id": 3567,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_execute": {
                  "entryPoint": 4172,
                  "id": 3006,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_executeBatch": {
                  "entryPoint": 4925,
                  "id": 3115,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_getUserOpHash": {
                  "entryPoint": 6797,
                  "id": 3348,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_initialize": {
                  "entryPoint": 2699,
                  "id": 2891,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_initialize_inner": {
                  "entryPoint": 2170,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_jAdd": {
                  "entryPoint": 8603,
                  "id": 4292,
                  "parameterSlots": 6,
                  "returnSlots": 3
                },
                "fun_jPointAdd": {
                  "entryPoint": 8282,
                  "id": 4123,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_jPointDouble": {
                  "entryPoint": 8356,
                  "id": 4162,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_modexp": {
                  "entryPoint": 9070,
                  "id": 4344,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_modifiedJacobianDouble": {
                  "entryPoint": 8888,
                  "id": 4309,
                  "parameterSlots": 3,
                  "returnSlots": 3
                },
                "fun_recover": {
                  "entryPoint": 5536,
                  "id": 1479,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_throwError": {
                  "entryPoint": 5614,
                  "id": 1406,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_toEthSignedMessageHash": {
                  "entryPoint": null,
                  "id": 1663,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_tryRecover": {
                  "entryPoint": 6075,
                  "id": 1620,
                  "parameterSlots": 4,
                  "returnSlots": 2
                },
                "fun_tryRecover_1452": {
                  "entryPoint": 6007,
                  "id": 1452,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "fun_validateNonce": {
                  "entryPoint": 6223,
                  "id": 3212,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_validatePassKeySig": {
                  "entryPoint": 6551,
                  "id": 3324,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_validateUserOp": {
                  "entryPoint": 5286,
                  "id": 3194,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_uint256": {
                  "entryPoint": 4808,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_address_dyn": {
                  "entryPoint": 4900,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "memory_array_index_access_struct_JPoint": {
                  "entryPoint": 8122,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "modifier_initializer": {
                  "entryPoint": 1745,
                  "id": 504,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x11": {
                  "entryPoint": 3329,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 4853,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 321,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_memoryt_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_reference_type_struct_PassKeyId": {
                  "entryPoint": 1485,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_046f": {
                  "entryPoint": 4707,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_9c85": {
                  "entryPoint": 3109,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_a43b": {
                  "entryPoint": 6450,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_e1d7": {
                  "entryPoint": 2970,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 6063,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "string_concat_string_string_string": {
                  "entryPoint": 6311,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_address_to_address_9338": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_bool_9326": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_bool_9342": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_t_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint8_to_uint8": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_assert_enum_RecoverError": {
                  "entryPoint": 5557,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_address_payable": {
                  "entryPoint": 4142,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c908163759a68c01461008e575080638fb4107214610089578063b627e20f14610084578063be9ef8431461007f578063d087d2881461007a578063f0f05cef146100755763fd5c8d720361000e5761055a565b610475565b6103e9565b6103a8565b610353565b610296565b3461013e577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126101325760043567ffffffffffffffff9182821161013a576060908236030112610136576100e860e0604052565b8060040135608052602481013560a052604481013591821161013657013660238201121561013257610124903690602460048201359101610237565b60c05261012f6106d1565b80f35b5080fd5b8280fd5b8380fd5b80fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761018c57604052565b610141565b6080810190811067ffffffffffffffff82111761018c57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761018c57604052565b604051906101fb82610170565b565b67ffffffffffffffff811161018c57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610243826101fd565b9161025160405193846101ad565b82948184528183011161026e578281602093846000960137010152565b600080fd5b60005b8381106102865750506000910152565b8181015183820152602001610276565b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e576060604080516102d481610170565b60008152600060208201520152604060a06102ed6105cd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84519485936020855280516020860152602081015182860152015160608085015261034a8151809281608088015260208888019101610273565b01168101030190f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e57602073ffffffffffffffffffffffffffffffffffffffff60005460101c16604051908152f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e57602060ff600454166040519015158152f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e576020600554604051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060208282011261026e576004359167ffffffffffffffff831161026e578260809203011261026e5760040190565b3461026e5761048336610425565b61049561048f826114a6565b15610b9a565b6104a76104a18261184f565b15610c25565b60038135801561053d575b60018114610520575b60028114610503575b146104dd575b6100196104d8600554610d30565b600555565b6104f86104f18260206104fd940190610cb0565b3691610237565b610ee4565b386104ca565b61051b6105166104f16020860186610cb0565b610d67565b6104c4565b6105386105336104f16020860186610cb0565b61133d565b6104bb565b6105556105506104f16020860186610cb0565b61104c565b6104b2565b3461026e57602061057261056d36610425565b611a8d565b604051908152f35b90600182811c921680156105c3575b602083101461059457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610589565b604051906105da82610170565b816001908154815260025460209081830152604051928391600091600354906106028261057a565b80865291818116908115610694575060011461062f575b5050506040929161062b9103846101ad565b0152565b909493925060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b946000915b81831061067c5750939450919250908201018161062b6040610619565b8654888401850152958601958794509183019161065f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b83010190508161062b6040610619565b60005460ff8160081c16158091819261086c575b811561084c575b50156107c8578061072360017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b610792575b61073061087a565b61073657565b6107637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1565b6107c36101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b610728565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b303b1591508161085e575b50386106ec565b6001915060ff161438610857565b600160ff82161091506106e5565b6001807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455608051815560a05160025560c0519081519167ffffffffffffffff831161018c576108db836108d660035461057a565b610a1a565b60209081601f85116001146109545750600091849182610929575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c191617600355565b015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff386108f6565b9190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0819596166109a860036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90565b946000905b88838310610a0057505050106109c9575b505050811b01600355565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806109be565b8587015188559096019594850194879350908101906109ad565b601f8111610a26575050565b600090600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906020601f850160051c83019410610a81575b601f0160051c01915b828110610a7657505050565b818155600101610a6a565b9092508290610a61565b8051600190815560406020928381015160025501519182519267ffffffffffffffff841161018c57610ac2846108d660035461057a565b81601f8511600114610b0c57506000918491826109295750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c191617600355565b9190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081959616610b6060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90565b946000905b88838310610b8057505050106109c957505050811b01600355565b858701518855909601959485019487935090810190610b65565b15610ba157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a205369676e617475726520766572696669636174696f6e2060448201527f6661696c656400000000000000000000000000000000000000000000000000006064820152fd5b15610c2c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636f756e743a204e6f6e636520766572696669636174696f6e206661696c60448201527f65640000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561026e570180359067ffffffffffffffff821161026e5760200191813603831361026e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060018201809211610d3e57565b610d01565b604051906020820182811067ffffffffffffffff82111761018c5760405260008252565b600160ff60045416151503610e1b576014610dee910151610da6610d896101ee565b6000815260006020820152610d9c610d43565b6040820152610a8b565b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00006000549260101b16911617600055565b6101fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060045416600455565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a20416c72656164792061646472657373206f776e6572206560448201527f6e61626c656400000000000000000000000000000000000000000000000000006064820152fd5b81601f8201121561026e578051610eb5816101fd565b92610ec360405194856101ad565b8184526020828401011161026e57610ee19160208085019101610273565b90565b60ff60045416610faa57805181019060608183031261026e5760208101519060408101519060608101519067ffffffffffffffff821161026e576020610f329281610f7a9701920101610e9f565b90610f3b6101ee565b92835260208301526040820152610f757fffffffffffffffffffff0000000000000000000000000000000000000000ffff60005416600055565b610a8b565b6101fb60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a20416c726561647920706173736b6579206f776e6572206560448201527f6e61626c656400000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff81160361026e57565b8051810160608282031261026e576020820151906110698261102e565b604083015190606084015167ffffffffffffffff811161026e576101fb9460206110ad928173ffffffffffffffffffffffffffffffffffffffff9501920101610e9f565b9216611486565b67ffffffffffffffff811161018c5760051b60200190565b81601f8201121561026e578051916110e3836110b4565b926110f160405194856101ad565b808452602092838086019260051b82010192831161026e578301905b82821061111b575050505090565b8151815290830190830161110d565b9080601f8301121561026e57815190611142826110b4565b9261115060405194856101ad565b828452602092838086019160051b8301019280841161026e57848301915b84831061117e5750505050505090565b825167ffffffffffffffff811161026e5786916111a084848094890101610e9f565b81520192019161116e565b909160608284031261026e5781519167ffffffffffffffff9283811161026e5781019380601f8601121561026e5784516111e4816110b4565b906111f260405192836101ad565b808252602096878084019260051b8201019184831161026e5788809201905b83821061124a57505050509482015184811161026e57816112339184016110cc565b93604083015190811161026e57610ee1920161112a565b82809183516112588161102e565b815201910190611211565b1561126a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d3e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80518210156113385760209160051b010190565b6112f5565b61135090602080825183010191016111ab565b92919061136a825185518091149081611416575b50611263565b80516113cc575060005b81518110156113c657806113bc6113ab6113916113c19486611324565b5173ffffffffffffffffffffffffffffffffffffffff1690565b6113b58388611324565b5190611435565b6112c8565b611374565b50509050565b929060005b815181101561140f57806113bc6113ee61139161140a9486611324565b6113f88389611324565b516114038488611324565b5191611486565b6113d1565b5050509050565b835180159250821561142b575b505038611364565b1490503880611423565b600091829182602083519301915af13d1561147e573d90611455826101fd565b9161146360405193846101ad565b82523d6000602084013e5b156114765750565b602081519101fd5b60609061146e565b916000928392602083519301915af13d1561147e573d90611455826101fd565b6114af81611a8d565b60045460ff16156114f3576114e1906114d26104f18460606114e5960190610cb0565b906114db6105cd565b91611997565b1590565b6114ee57600090565b600190565b61159461157b61154173ffffffffffffffffffffffffffffffffffffffff937f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b6115756104f161156a60005473ffffffffffffffffffffffffffffffffffffffff9060101c1690565b966060810190610cb0565b906115a0565b73ffffffffffffffffffffffffffffffffffffffff1690565b9116036114ee57600090565b610ee1916115ad91611777565b9190916115ee565b600511156115bf57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6115f7816115b5565b806115ff5750565b611608816115b5565b6001810361166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611678816115b5565b600281036116df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806116eb6003926115b5565b146116f257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9060418151146000146117a5576117a1916020820151906060604084015193015160001a906117bb565b9091565b5050600090600290565b6040513d6000823e3d90fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116118435791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561183e57815173ffffffffffffffffffffffffffffffffffffffff811615611838579190565b50600190565b6117af565b50505050600090600390565b60406005549101351461186157600190565b600090565b90604051916020830152602082526040820182811067ffffffffffffffff82111761018c57604052565b906118a360209282815194859201610273565b0190565b6101fb9193929360405194859183516118c881602096878088019101610273565b83016118dc82518093878085019101610273565b016118ef82518093868085019101610273565b010380855201836101ad565b60406101fb919392938151948161191c879351809260208087019101610273565b82019060208201520360208101855201836101ad565b1561193957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4b6579206e6f7420666f756e64000000000000000000000000000000000000006044820152fd5b90815182019060209260c08185850194031261026e5760408101519160608201519360808301519267ffffffffffffffff9384811161026e5782886119de92840101610e9f565b9360a082015181811161026e5783896119f992850101610e9f565b9360c083015191821161026e578894611a2f611a2a611a2460009789611a3597611a41990101610e9f565b93611866565b611bcb565b906118a7565b60405191828092611890565b039060025afa1561183e576000611a5e611a3586938351906118fb565b039060025afa1561183e57610ee193611a8360005194820151151580611a8857611932565b611c7d565b611932565b611a9a6020820182610cb0565b9081604051918237206040805192602084019281358452828501520135606083015260608252608082019082821067ffffffffffffffff83111761018c5781604052825190209160a081019283523060c082015260e04691015260608152611b0181610191565b51902090565b60405190611b1482610170565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b908160031b9180830460081490151715610d3e57565b90611b86826101fd565b611b9360405191826101ad565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611bc182946101fd565b0190602036910137565b805115611c7457611bda611b07565b611c00611bf1611bea8451611b66565b6006900490565b835160069006611c6657611b7c565b91602083019181805101925b838310611c1a575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301611c0c565b611c6f906112c8565b611b7c565b50610ee1610d43565b92919080158015611e98575b8015611e6e575b8015611e44575b611e3b57610ee193611e30611caa612015565b91611cb36101ee565b600081526000602082015260006040820152835260208151910151611cd66101ee565b918252602082015260016040820152611cf560208401918083526120a4565b90611e21611d0b6040860193808552835161205a565b9260608601938452611e11611e01611d216101ee565b7f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29681527f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5602082015260016040820152611d8460808a019180835287519061205a565b60a08a0152611d96815185519061205a565b60c08a0152611da8815188519061205a565b60e08a0152611db781516120a4565b90611dcc6101008b019280845288519061205a565b6101208b0152611ddf825186519061205a565b6101408b0152611df2825189519061205a565b6101608b01525190519061205a565b610180880194818652519061205a565b6101a0870152825190519061205a565b6101c08501525190519061205a565b6101e0820152611ea0565b50505050600090565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551821015611c97565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551811015611c90565b508115611c89565b939290917fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255190818410801590611fb0575b611fa657611edf829161236e565b809309918309600080918193608091825b611f0857505050611f03939495506120c4565b501490565b85611f84575b888160fe1c600c8460fc1c161780611f3b575b5050611f3490600292831b921b92611fcb565b9182611ef0565b611f779397611f34976040611f6e611f5685879b989b611fba565b5151946020611f658289611fba565b51015196611fba565b5101519461219b565b9590945090928838611f21565b9294611f959194611f9b93966122b8565b916122b8565b949193909392611f0e565b5060009450505050565b5081811015611ed1565b9060108110156113385760051b0190565b8015610d3e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6040519061200382610170565b60006040838281528260208201520152565b6040519061020080830183811067ffffffffffffffff82111761018c576040528260005b82811061204557505050565b602090612050611ff6565b8184015201612039565b61208791612066611ff6565b5081519160406020820151910151825191604060208501519401519461219b565b906040519261209584610170565b83526020830152604082015290565b612087906120b0611ff6565b5080519060406020820151910151916122b8565b929190811561218f578160007fffffffff00000001000000000000000000000000ffffffffffffffffffffffff8481809611612185575b505060405191602083526020808401526020604084015260608301527fffffffff00000001000000000000000000000000fffffffffffffffffffffffd60808301528360a083015260208260c08160057ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1561013e575082905181808280098097099509900990565b06915083386120fb565b50509050600090600090565b9395939190816121ad57505050929190565b909291949586156122ae577fffffffff00000001000000000000000000000000ffffffffffffffffffffffff9586858196958280838199099b818d999781868180808f9d888009809d099c8d99099c81878d0990099c0990099308958181106122a7575b03958280808960020980099281808481878d09938181106122a0575b036002099481868009980996828089600209830890818110612299575b039b8c936002090994818110612292575b03900997828910612289575b859182910892800995828710612280575b960394030990565b95840195612278565b97850197612267565b830161225b565b830161224a565b820161222d565b8301612211565b5094505091929190565b9290917fffffffff00000001000000000000000000000000ffffffffffffffffffffffff809181858009958280808080808c87096004099a800960080992818080808089800980097fffffffff00000001000000000000000000000000fffffffffffffffffffffffc0992800960030908818960020982828009818110612367575b038981809b10612360575b039009818110612359575b03940960020990565b8301612350565b8301612345565b830161233a565b7fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255180821161240f575b60405191602083526020808401526020604084015260608301527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f608083015260a082015260208160c08160057ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1561026e575190565b8091069061239756fea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x759A68C0 EQ PUSH2 0x8E JUMPI POP DUP1 PUSH4 0x8FB41072 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB627E20F EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xBE9EF843 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xF0F05CEF EQ PUSH2 0x75 JUMPI PUSH4 0xFD5C8D72 SUB PUSH2 0xE JUMPI PUSH2 0x55A JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST CALLVALUE PUSH2 0x13E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 DUP2 CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x13A JUMPI PUSH1 0x60 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x136 JUMPI PUSH2 0xE8 PUSH1 0xE0 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x80 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0xA0 MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x136 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x124 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0xC0 MSTORE PUSH2 0x12F PUSH2 0x6D1 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FB DUP3 PUSH2 0x170 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x243 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP2 PUSH2 0x251 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1AD JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x26E JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x286 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x60 PUSH1 0x40 DUP1 MLOAD PUSH2 0x2D4 DUP2 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x40 PUSH1 0xA0 PUSH2 0x2ED PUSH2 0x5CD JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE DUP1 MLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD MSTORE PUSH2 0x34A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0x20 DUP9 DUP9 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP1 PUSH1 0x20 DUP3 DUP3 ADD SLT PUSH2 0x26E JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x26E JUMPI DUP3 PUSH1 0x80 SWAP3 SUB ADD SLT PUSH2 0x26E JUMPI PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x483 CALLDATASIZE PUSH2 0x425 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x48F DUP3 PUSH2 0x14A6 JUMP JUMPDEST ISZERO PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x4A1 DUP3 PUSH2 0x184F JUMP JUMPDEST ISZERO PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x3 DUP2 CALLDATALOAD DUP1 ISZERO PUSH2 0x53D JUMPI JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x520 JUMPI JUMPDEST PUSH1 0x2 DUP2 EQ PUSH2 0x503 JUMPI JUMPDEST EQ PUSH2 0x4DD JUMPI JUMPDEST PUSH2 0x19 PUSH2 0x4D8 PUSH1 0x5 SLOAD PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0x4F1 DUP3 PUSH1 0x20 PUSH2 0x4FD SWAP5 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x237 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST CODESIZE PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x51B PUSH2 0x516 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x538 PUSH2 0x533 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x133D JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x555 PUSH2 0x550 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x104C JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 PUSH2 0x572 PUSH2 0x56D CALLDATASIZE PUSH2 0x425 JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x5C3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x594 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5DA DUP3 PUSH2 0x170 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x2 SLOAD PUSH1 0x20 SWAP1 DUP2 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x602 DUP3 PUSH2 0x57A JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x694 JUMPI POP PUSH1 0x1 EQ PUSH2 0x62F JUMPI JUMPDEST POP POP POP PUSH1 0x40 SWAP3 SWAP2 PUSH2 0x62B SWAP2 SUB DUP5 PUSH2 0x1AD JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 SWAP5 SWAP4 SWAP3 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x67C JUMPI POP SWAP4 SWAP5 POP SWAP2 SWAP3 POP SWAP1 DUP3 ADD ADD DUP2 PUSH2 0x62B PUSH1 0x40 PUSH2 0x619 JUMP JUMPDEST DUP7 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP6 DUP7 ADD SWAP6 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x65F JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 DUP8 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP1 POP DUP2 PUSH2 0x62B PUSH1 0x40 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO DUP1 SWAP2 DUP2 SWAP3 PUSH2 0x86C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x84C JUMPI JUMPDEST POP ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH2 0x723 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x792 JUMPI JUMPDEST PUSH2 0x730 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x736 JUMPI JUMP JUMPDEST PUSH2 0x763 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP DUP2 PUSH2 0x85E JUMPI JUMPDEST POP CODESIZE PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH1 0xFF AND EQ CODESIZE PUSH2 0x857 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF DUP3 AND LT SWAP2 POP PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x80 MLOAD DUP2 SSTORE PUSH1 0xA0 MLOAD PUSH1 0x2 SSTORE PUSH1 0xC0 MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x18C JUMPI PUSH2 0x8DB DUP4 PUSH2 0x8D6 PUSH1 0x3 SLOAD PUSH2 0x57A JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x954 JUMPI POP PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP3 PUSH2 0x929 JUMPI JUMPDEST POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CODESIZE PUSH2 0x8F6 JUMP JUMPDEST SWAP2 SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 SWAP6 SWAP7 AND PUSH2 0x9A8 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0xA00 JUMPI POP POP POP LT PUSH2 0x9C9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x9BE JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA26 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0xA81 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0xA76 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA6A JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0xA61 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x40 PUSH1 0x20 SWAP3 DUP4 DUP2 ADD MLOAD PUSH1 0x2 SSTORE ADD MLOAD SWAP2 DUP3 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x18C JUMPI PUSH2 0xAC2 DUP5 PUSH2 0x8D6 PUSH1 0x3 SLOAD PUSH2 0x57A JUMP JUMPDEST DUP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0xB0C JUMPI POP PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP3 PUSH2 0x929 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 SWAP6 SWAP7 AND PUSH2 0xB60 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0xB80 JUMPI POP POP POP LT PUSH2 0x9C9 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0xB65 JUMP JUMPDEST ISZERO PUSH2 0xBA1 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A205369676E617475726520766572696669636174696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6661696C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0xC2C JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A204E6F6E636520766572696669636174696F6E206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x26E JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x26E JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x26E JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD3E JUMPI JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF PUSH1 0x4 SLOAD AND ISZERO ISZERO SUB PUSH2 0xE1B JUMPI PUSH1 0x14 PUSH2 0xDEE SWAP2 ADD MLOAD PUSH2 0xDA6 PUSH2 0xD89 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD9C PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xA8B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH1 0x0 SLOAD SWAP3 PUSH1 0x10 SHL AND SWAP2 AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x1FB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A20416C72656164792061646472657373206F776E65722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E61626C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP1 MLOAD PUSH2 0xEB5 DUP2 PUSH2 0x1FD JUMP JUMPDEST SWAP3 PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x26E JUMPI PUSH2 0xEE1 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH2 0xFAA JUMPI DUP1 MLOAD DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 DUP2 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH2 0xF32 SWAP3 DUP2 PUSH2 0xF7A SWAP8 ADD SWAP3 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP1 PUSH2 0xF3B PUSH2 0x1EE JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xF75 PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x1FB PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A20416C726561647920706173736B6579206F776E65722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E61626C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x26E JUMPI JUMP JUMPDEST DUP1 MLOAD DUP2 ADD PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH2 0x1069 DUP3 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 PUSH1 0x60 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x26E JUMPI PUSH2 0x1FB SWAP5 PUSH1 0x20 PUSH2 0x10AD SWAP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 ADD SWAP3 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP3 AND PUSH2 0x1486 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP1 MLOAD SWAP2 PUSH2 0x10E3 DUP4 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 PUSH2 0x10F1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x26E JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x111B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x110D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP2 MLOAD SWAP1 PUSH2 0x1142 DUP3 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 PUSH2 0x1150 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x26E JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x117E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x26E JUMPI DUP7 SWAP2 PUSH2 0x11A0 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0xE9F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x116E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x26E JUMPI DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP2 GT PUSH2 0x26E JUMPI DUP2 ADD SWAP4 DUP1 PUSH1 0x1F DUP7 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP5 MLOAD PUSH2 0x11E4 DUP2 PUSH2 0x10B4 JUMP JUMPDEST SWAP1 PUSH2 0x11F2 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1AD JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP1 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x26E JUMPI DUP9 DUP1 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x124A JUMPI POP POP POP POP SWAP5 DUP3 ADD MLOAD DUP5 DUP2 GT PUSH2 0x26E JUMPI DUP2 PUSH2 0x1233 SWAP2 DUP5 ADD PUSH2 0x10CC JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x26E JUMPI PUSH2 0xEE1 SWAP3 ADD PUSH2 0x112A JUMP JUMPDEST DUP3 DUP1 SWAP2 DUP4 MLOAD PUSH2 0x1258 DUP2 PUSH2 0x102E JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1211 JUMP JUMPDEST ISZERO PUSH2 0x126A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD3E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x1350 SWAP1 PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x136A DUP3 MLOAD DUP6 MLOAD DUP1 SWAP2 EQ SWAP1 DUP2 PUSH2 0x1416 JUMPI JUMPDEST POP PUSH2 0x1263 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x13CC JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x13C6 JUMPI DUP1 PUSH2 0x13BC PUSH2 0x13AB PUSH2 0x1391 PUSH2 0x13C1 SWAP5 DUP7 PUSH2 0x1324 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B5 DUP4 DUP9 PUSH2 0x1324 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST POP POP SWAP1 POP JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x140F JUMPI DUP1 PUSH2 0x13BC PUSH2 0x13EE PUSH2 0x1391 PUSH2 0x140A SWAP5 DUP7 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x13F8 DUP4 DUP10 PUSH2 0x1324 JUMP JUMPDEST MLOAD PUSH2 0x1403 DUP5 DUP9 PUSH2 0x1324 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x1486 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP4 MLOAD DUP1 ISZERO SWAP3 POP DUP3 ISZERO PUSH2 0x142B JUMPI JUMPDEST POP POP CODESIZE PUSH2 0x1364 JUMP JUMPDEST EQ SWAP1 POP CODESIZE DUP1 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x147E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1455 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP2 PUSH2 0x1463 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1AD JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1476 JUMPI POP JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x147E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1455 DUP3 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x14AF DUP2 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14E1 SWAP1 PUSH2 0x14D2 PUSH2 0x4F1 DUP5 PUSH1 0x60 PUSH2 0x14E5 SWAP7 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH2 0x14DB PUSH2 0x5CD JUMP JUMPDEST SWAP2 PUSH2 0x1997 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x14EE JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1594 PUSH2 0x157B PUSH2 0x1541 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1575 PUSH2 0x4F1 PUSH2 0x156A PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP2 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 AND SUB PUSH2 0x14EE JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 PUSH2 0x15AD SWAP2 PUSH2 0x1777 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x15BF JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F7 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP1 PUSH2 0x15FF JUMPI POP JUMP JUMPDEST PUSH2 0x1608 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1678 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x16EB PUSH1 0x3 SWAP3 PUSH2 0x15B5 JUMP JUMPDEST EQ PUSH2 0x16F2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x17A5 JUMPI PUSH2 0x17A1 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x17BB JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0x1843 JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x1838 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x17AF JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x5 SLOAD SWAP2 ADD CALLDATALOAD EQ PUSH2 0x1861 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x18A3 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x273 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1FB SWAP2 SWAP4 SWAP3 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP2 DUP4 MLOAD PUSH2 0x18C8 DUP2 PUSH1 0x20 SWAP7 DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST DUP4 ADD PUSH2 0x18DC DUP3 MLOAD DUP1 SWAP4 DUP8 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD PUSH2 0x18EF DUP3 MLOAD DUP1 SWAP4 DUP7 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD SUB DUP1 DUP6 MSTORE ADD DUP4 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 PUSH2 0x1FB SWAP2 SWAP4 SWAP3 SWAP4 DUP2 MLOAD SWAP5 DUP2 PUSH2 0x191C DUP8 SWAP4 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP8 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST DUP3 ADD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE SUB PUSH1 0x20 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x1AD JUMP JUMPDEST ISZERO PUSH2 0x1939 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B6579206E6F7420666F756E6400000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP3 ADD SWAP1 PUSH1 0x20 SWAP3 PUSH1 0xC0 DUP2 DUP6 DUP6 ADD SWAP5 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x40 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 DUP3 ADD MLOAD SWAP4 PUSH1 0x80 DUP4 ADD MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP2 GT PUSH2 0x26E JUMPI DUP3 DUP9 PUSH2 0x19DE SWAP3 DUP5 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP3 ADD MLOAD DUP2 DUP2 GT PUSH2 0x26E JUMPI DUP4 DUP10 PUSH2 0x19F9 SWAP3 DUP6 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP4 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x26E JUMPI DUP9 SWAP5 PUSH2 0x1A2F PUSH2 0x1A2A PUSH2 0x1A24 PUSH1 0x0 SWAP8 DUP10 PUSH2 0x1A35 SWAP8 PUSH2 0x1A41 SWAP10 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1BCB JUMP JUMPDEST SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH2 0x1890 JUMP JUMPDEST SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI PUSH1 0x0 PUSH2 0x1A5E PUSH2 0x1A35 DUP7 SWAP4 DUP4 MLOAD SWAP1 PUSH2 0x18FB JUMP JUMPDEST SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI PUSH2 0xEE1 SWAP4 PUSH2 0x1A83 PUSH1 0x0 MLOAD SWAP5 DUP3 ADD MLOAD ISZERO ISZERO DUP1 PUSH2 0x1A88 JUMPI PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1A9A PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x40 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP2 CALLDATALOAD DUP5 MSTORE DUP3 DUP6 ADD MSTORE ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x18C JUMPI DUP2 PUSH1 0x40 MSTORE DUP3 MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0xA0 DUP2 ADD SWAP3 DUP4 MSTORE ADDRESS PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 CHAINID SWAP2 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x1B01 DUP2 PUSH2 0x191 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B14 DUP3 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392D5F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x3 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xD3E JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x1B86 DUP3 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x1B93 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1AD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1BC1 DUP3 SWAP5 PUSH2 0x1FD JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1BDA PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x1C00 PUSH2 0x1BF1 PUSH2 0x1BEA DUP5 MLOAD PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x6 SWAP1 DIV SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x6 SWAP1 MOD PUSH2 0x1C66 JUMPI PUSH2 0x1B7C JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP2 DUP1 MLOAD ADD SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C1A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH1 0x3 DUP1 SWAP5 ADD SWAP4 DUP5 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP6 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP7 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD PUSH1 0x2 DUP7 ADD MSTORE8 AND DUP6 ADD ADD MLOAD SWAP1 DUP3 ADD MSTORE8 ADD PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x1C6F SWAP1 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x1B7C JUMP JUMPDEST POP PUSH2 0xEE1 PUSH2 0xD43 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x1E98 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E6E JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E44 JUMPI JUMPDEST PUSH2 0x1E3B JUMPI PUSH2 0xEE1 SWAP4 PUSH2 0x1E30 PUSH2 0x1CAA PUSH2 0x2015 JUMP JUMPDEST SWAP2 PUSH2 0x1CB3 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH2 0x1CD6 PUSH2 0x1EE JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CF5 PUSH1 0x20 DUP5 ADD SWAP2 DUP1 DUP4 MSTORE PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH2 0x1E21 PUSH2 0x1D0B PUSH1 0x40 DUP7 ADD SWAP4 DUP1 DUP6 MSTORE DUP4 MLOAD PUSH2 0x205A JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD SWAP4 DUP5 MSTORE PUSH2 0x1E11 PUSH2 0x1E01 PUSH2 0x1D21 PUSH2 0x1EE JUMP JUMPDEST PUSH32 0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296 DUP2 MSTORE PUSH32 0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1D84 PUSH1 0x80 DUP11 ADD SWAP2 DUP1 DUP4 MSTORE DUP8 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xA0 DUP11 ADD MSTORE PUSH2 0x1D96 DUP2 MLOAD DUP6 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MSTORE PUSH2 0x1DA8 DUP2 MLOAD DUP9 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x1DB7 DUP2 MLOAD PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH2 0x1DCC PUSH2 0x100 DUP12 ADD SWAP3 DUP1 DUP5 MSTORE DUP9 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x120 DUP12 ADD MSTORE PUSH2 0x1DDF DUP3 MLOAD DUP7 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x140 DUP12 ADD MSTORE PUSH2 0x1DF2 DUP3 MLOAD DUP10 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x160 DUP12 ADD MSTORE MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x180 DUP9 ADD SWAP5 DUP2 DUP7 MSTORE MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1A0 DUP8 ADD MSTORE DUP3 MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1C0 DUP6 ADD MSTORE MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD MSTORE PUSH2 0x1EA0 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP3 LT ISZERO PUSH2 0x1C97 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP2 LT ISZERO PUSH2 0x1C90 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x1C89 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 SWAP1 DUP2 DUP5 LT DUP1 ISZERO SWAP1 PUSH2 0x1FB0 JUMPI JUMPDEST PUSH2 0x1FA6 JUMPI PUSH2 0x1EDF DUP3 SWAP2 PUSH2 0x236E JUMP JUMPDEST DUP1 SWAP4 MULMOD SWAP2 DUP4 MULMOD PUSH1 0x0 DUP1 SWAP2 DUP2 SWAP4 PUSH1 0x80 SWAP2 DUP3 JUMPDEST PUSH2 0x1F08 JUMPI POP POP POP PUSH2 0x1F03 SWAP4 SWAP5 SWAP6 POP PUSH2 0x20C4 JUMP JUMPDEST POP EQ SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x1F84 JUMPI JUMPDEST DUP9 DUP2 PUSH1 0xFE SHR PUSH1 0xC DUP5 PUSH1 0xFC SHR AND OR DUP1 PUSH2 0x1F3B JUMPI JUMPDEST POP POP PUSH2 0x1F34 SWAP1 PUSH1 0x2 SWAP3 DUP4 SHL SWAP3 SHL SWAP3 PUSH2 0x1FCB JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x1EF0 JUMP JUMPDEST PUSH2 0x1F77 SWAP4 SWAP8 PUSH2 0x1F34 SWAP8 PUSH1 0x40 PUSH2 0x1F6E PUSH2 0x1F56 DUP6 DUP8 SWAP12 SWAP9 SWAP12 PUSH2 0x1FBA JUMP JUMPDEST MLOAD MLOAD SWAP5 PUSH1 0x20 PUSH2 0x1F65 DUP3 DUP10 PUSH2 0x1FBA JUMP JUMPDEST MLOAD ADD MLOAD SWAP7 PUSH2 0x1FBA JUMP JUMPDEST MLOAD ADD MLOAD SWAP5 PUSH2 0x219B JUMP JUMPDEST SWAP6 SWAP1 SWAP5 POP SWAP1 SWAP3 DUP9 CODESIZE PUSH2 0x1F21 JUMP JUMPDEST SWAP3 SWAP5 PUSH2 0x1F95 SWAP2 SWAP5 PUSH2 0x1F9B SWAP4 SWAP7 PUSH2 0x22B8 JUMP JUMPDEST SWAP2 PUSH2 0x22B8 JUMP JUMPDEST SWAP5 SWAP2 SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x1F0E JUMP JUMPDEST POP PUSH1 0x0 SWAP5 POP POP POP POP JUMP JUMPDEST POP DUP2 DUP2 LT ISZERO PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2003 DUP3 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x200 DUP1 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE DUP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2045 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x2050 PUSH2 0x1FF6 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x2039 JUMP JUMPDEST PUSH2 0x2087 SWAP2 PUSH2 0x2066 PUSH2 0x1FF6 JUMP JUMPDEST POP DUP2 MLOAD SWAP2 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD DUP3 MLOAD SWAP2 PUSH1 0x40 PUSH1 0x20 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP5 PUSH2 0x219B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2095 DUP5 PUSH2 0x170 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2087 SWAP1 PUSH2 0x20B0 PUSH2 0x1FF6 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH2 0x22B8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP2 ISZERO PUSH2 0x218F JUMPI DUP2 PUSH1 0x0 PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 DUP1 SWAP7 GT PUSH2 0x2185 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFD PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0xC0 DUP2 PUSH1 0x5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF STATICCALL ISZERO PUSH2 0x13E JUMPI POP DUP3 SWAP1 MLOAD DUP2 DUP1 DUP3 DUP1 MULMOD DUP1 SWAP8 MULMOD SWAP6 MULMOD SWAP1 MULMOD SWAP1 JUMP JUMPDEST MOD SWAP2 POP DUP4 CODESIZE PUSH2 0x20FB JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP4 SWAP6 SWAP4 SWAP2 SWAP1 DUP2 PUSH2 0x21AD JUMPI POP POP POP SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP5 SWAP6 DUP7 ISZERO PUSH2 0x22AE JUMPI PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 DUP6 DUP2 SWAP7 SWAP6 DUP3 DUP1 DUP4 DUP2 SWAP10 MULMOD SWAP12 DUP2 DUP14 SWAP10 SWAP8 DUP2 DUP7 DUP2 DUP1 DUP1 DUP16 SWAP14 DUP9 DUP1 MULMOD DUP1 SWAP14 MULMOD SWAP13 DUP14 SWAP10 MULMOD SWAP13 DUP2 DUP8 DUP14 MULMOD SWAP1 MULMOD SWAP13 MULMOD SWAP1 MULMOD SWAP4 ADDMOD SWAP6 DUP2 DUP2 LT PUSH2 0x22A7 JUMPI JUMPDEST SUB SWAP6 DUP3 DUP1 DUP1 DUP10 PUSH1 0x2 MULMOD DUP1 MULMOD SWAP3 DUP2 DUP1 DUP5 DUP2 DUP8 DUP14 MULMOD SWAP4 DUP2 DUP2 LT PUSH2 0x22A0 JUMPI JUMPDEST SUB PUSH1 0x2 MULMOD SWAP5 DUP2 DUP7 DUP1 MULMOD SWAP9 MULMOD SWAP7 DUP3 DUP1 DUP10 PUSH1 0x2 MULMOD DUP4 ADDMOD SWAP1 DUP2 DUP2 LT PUSH2 0x2299 JUMPI JUMPDEST SUB SWAP12 DUP13 SWAP4 PUSH1 0x2 MULMOD MULMOD SWAP5 DUP2 DUP2 LT PUSH2 0x2292 JUMPI JUMPDEST SUB SWAP1 MULMOD SWAP8 DUP3 DUP10 LT PUSH2 0x2289 JUMPI JUMPDEST DUP6 SWAP2 DUP3 SWAP2 ADDMOD SWAP3 DUP1 MULMOD SWAP6 DUP3 DUP8 LT PUSH2 0x2280 JUMPI JUMPDEST SWAP7 SUB SWAP5 SUB MULMOD SWAP1 JUMP JUMPDEST SWAP6 DUP5 ADD SWAP6 PUSH2 0x2278 JUMP JUMPDEST SWAP8 DUP6 ADD SWAP8 PUSH2 0x2267 JUMP JUMPDEST DUP4 ADD PUSH2 0x225B JUMP JUMPDEST DUP4 ADD PUSH2 0x224A JUMP JUMPDEST DUP3 ADD PUSH2 0x222D JUMP JUMPDEST DUP4 ADD PUSH2 0x2211 JUMP JUMPDEST POP SWAP5 POP POP SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 DUP2 DUP6 DUP1 MULMOD SWAP6 DUP3 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 DUP8 MULMOD PUSH1 0x4 MULMOD SWAP11 DUP1 MULMOD PUSH1 0x8 MULMOD SWAP3 DUP2 DUP1 DUP1 DUP1 DUP1 DUP10 DUP1 MULMOD DUP1 MULMOD PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC MULMOD SWAP3 DUP1 MULMOD PUSH1 0x3 MULMOD ADDMOD DUP2 DUP10 PUSH1 0x2 MULMOD DUP3 DUP3 DUP1 MULMOD DUP2 DUP2 LT PUSH2 0x2367 JUMPI JUMPDEST SUB DUP10 DUP2 DUP1 SWAP12 LT PUSH2 0x2360 JUMPI JUMPDEST SUB SWAP1 MULMOD DUP2 DUP2 LT PUSH2 0x2359 JUMPI JUMPDEST SUB SWAP5 MULMOD PUSH1 0x2 MULMOD SWAP1 JUMP JUMPDEST DUP4 ADD PUSH2 0x2350 JUMP JUMPDEST DUP4 ADD PUSH2 0x2345 JUMP JUMPDEST DUP4 ADD PUSH2 0x233A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP1 DUP3 GT PUSH2 0x240F JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC63254F PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xC0 DUP2 PUSH1 0x5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF STATICCALL ISZERO PUSH2 0x26E JUMPI MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP2 MOD SWAP1 PUSH2 0x2397 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "281:6995:14:-:0;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2276:148;;:::i;:::-;281:6995;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;:::o;:::-;-1:-1:-1;281:6995:14;;;;;;;;;;-1:-1:-1;;281:6995:14;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;957:5;281:6995;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;2742:71;2709:23;;;:::i;:::-;2750:20;2742:71;:::i;:::-;2909:69;2877:22;;;:::i;:::-;2917;2909:69;:::i;:::-;3320:1;281:6995;;3011:24;;3007:79;;281:6995;3122:1;3099:24;;3095:84;;281:6995;3215:1;3192:24;;3188:96;;281:6995;3297:24;3293:103;;281:6995;3405:17;3413:9;:5;281:6995;3413:9;:::i;:::-;:5;281:6995;;3293:103;281:6995;3369:15;;;3337:48;3369:15;;;;:::i;:::-;281:6995;;;:::i;:::-;3337:48;:::i;:::-;3293:103;;;3188:96;3232:41;281:6995;3257:15;;;;;;:::i;281:6995::-;3232:41;:::i;:::-;3188:96;;3095:84;3139:29;281:6995;3152:15;;;;;;:::i;281:6995::-;3139:29;:::i;:::-;3095:84;;3007:79;3051:24;281:6995;3059:15;;;;;;:::i;281:6995::-;3051:24;:::i;:::-;3007:79;;281:6995;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;756:12;281:6995;;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;:::i;:::-;;;;;;;;;756:12;;;;281:6995;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;-1:-1:-1;281:6995:14;;;-1:-1:-1;281:6995:14;;;;;;;-1:-1:-1;281:6995:14;;-1:-1:-1;281:6995:14;;-1:-1:-1;281:6995:14;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;;;;;;;-1:-1:-1;;281:6995:14;;;;;;;;-1:-1:-1;281:6995:14;;;;;3235:495:6;3291:13;281:6995:14;;;;;;3290:14:6;3336:34;;;;;;3235:495;3335:97;;;;3235:495;281:6995:14;;;;3514:16:6;;281:6995:14;;3291:13:6;281:6995:14;;;3291:13:6;281:6995:14;;3514:16:6;3540:65;;3235:495;3614:1;;:::i;:::-;3625:99;;3235:495::o;3625:99::-;3659:21;281:6995:14;3291:13:6;281:6995:14;;3291:13:6;281:6995:14;;3659:21:6;281:6995:14;;3529:1:6;281:6995:14;;3699:14:6;;281:6995:14;;3699:14:6;3235:495::o;3540:65::-;3574:20;281:6995:14;;3291:13:6;281:6995:14;;;3291:13:6;281:6995:14;;3574:20:6;3540:65;;281:6995:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:97:6;3404:4;1702:19:7;:23;;-1:-1:-1;1702:23:7;3376:55:6;;3335:97;;;;;3376:55;3430:1;281:6995:14;;;;3414:17:6;3376:55;;;3336:34;3369:1;281:6995:14;;;3354:16:6;;-1:-1:-1;3336:34:6;;2276:148:14;2383:4;281:6995;;2359:28;281:6995;;;2359:28;281:6995;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;281:6995:14;;;;;;;;;;;;;;;;;;;;;2276:148::o;281:6995::-;;;;-1:-1:-1;281:6995:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;;;;;;;;;;;;;;;;;2276:148::o;281:6995::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;281:6995:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;2430:103;281:6995;;2504:22;281:6995;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;281:6995:14;;;;;;;;;;;;;;;;;;;;2430:103::o;281:6995::-;;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;;;;;;;;;;;;;;;;2430:103::o;281:6995::-;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3122:1;281:6995;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;:::o;975:491::-;1096:4;281:6995;1071:21;281:6995;;;;1071:29;281:6995;;1263:69;2240:23;1263:69;;;1361:19;281:6995;;:::i;:::-;-1:-1:-1;281:6995:14;;-1:-1:-1;1361:19:14;;;281:6995;;;:::i;:::-;1361:19;;;281:6995;1361:19;:::i;:::-;281:6995;;-1:-1:-1;281:6995:14;;;;;;;;-1:-1:-1;281:6995:14;;2240:23;1430:29;281:6995;1071:21;281:6995;;1071:21;281:6995;;;;;;;;;;1071:21;281:6995;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;1472:544::-;281:6995;1575:21;281:6995;;;;;;1737:82;;281:6995;;;;;;;;1737:82;;;281:6995;;;;;;;;;;;;;;;;;1737:82;281:6995;1737:82;;1962:8;1737:82;;281:6995;;;;:::i;:::-;;;;:::i;:::-;;;;1737:82;1857:34;;281:6995;;1857:34;;281:6995;2240:23;281:6995;1600:5;281:6995;;1600:5;281:6995;;2240:23;1962:8;:::i;:::-;1981:28;2005:4;281:6995;1575:21;281:6995;;;1575:21;281:6995;;;;;;;;;;1575:21;281:6995;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3543:231::-;281:6995;;3652:81;;281:6995;;;;;;;3652:81;;;281:6995;;;;;:::i;:::-;;;;;;;;;;;;;;;3762:4;3652:81;;281:6995;3652:81;;281:6995;3652:81;;281:6995;;;;:::i;:::-;;;3762:4;:::i;281:6995::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;3948:707::-;4128:53;3948:707;4128:53;281:6995;;;4128:53;;;;;;:::i;:::-;281:6995;;;4191:162;281:6995;;;;4212:26;;;:96;;;;3948:707;4191:162;;:::i;:::-;281:6995;;4367:12;;4405:13;-1:-1:-1;4437:3:14;281:6995;;4420:15;;;;;4466:7;4460:26;4466:7;;4437:3;4466:7;;;:::i;:::-;281:6995;;;;;4466:7;4478;;;;:::i;:::-;;4460:26;;:::i;:::-;4437:3;:::i;:::-;4405:13;;4420:15;;;;;3948:707::o;4363:286::-;4536:13;;-1:-1:-1;4568:3:14;281:6995;;4551:15;;;;;4597:7;4616;4597;;4568:3;4597:7;;;:::i;:::-;4606:8;;;;:::i;:::-;281:6995;4616:7;;;;:::i;:::-;;;;:::i;4568:3::-;4536:13;;4551:15;;;;;;3948:707::o;4212:96::-;281:6995;;4259:17;;;-1:-1:-1;4259:48:14;;;;4212:96;;;;;;4259:48;4280:27;;-1:-1:-1;4259:48:14;;;;4661:286;4383:1;4661:286;;;4783:31;;;;;;;;;281:6995;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4383:1;4783:31;281:6995;;;;4828:8;4824:117;;4661:286;:::o;4824:117::-;4783:31;4852:79;;;;;281:6995;;;;;4661:286;;4783:31;4661:286;;;4783:31;;;;;;;;281:6995;;;;;;;;;:::i;5007:595::-;5133:21;;;:::i;:::-;5168;281:6995;;;5168:21;;;5223:124;5259:16;281:6995;5259:16;;;5365:11;5259:16;;;;:::i;281:6995::-;;;;:::i;:::-;5223:124;;:::i;:::-;5365:11;;281:6995;5365:11;5361:25;;5407:1;5400:8;:::o;5361:25::-;5321:12;5378:8;:::o;5164:432::-;5507:46;5523:30;5454:35;281:6995;5454:35;7353:157:11;;;;;;;;7120:396;;5454:35:14;281:6995;5536:16;281:6995;5507:12;281:6995;;;;;;;;;5536:16;;;;;;:::i;281:6995::-;5523:30;;:::i;:::-;281:6995;;;;5507:46;281:6995;;5507:46;5503:60;;5507:12;5577:8;:::o;3661:227:11:-;3849:5;3661:227;3800:27;3661:227;3800:27;:::i;:::-;3849:5;;;;:::i;281:6995:14:-;;-1:-1:-1;281:6995:14;;;:::o;:::-;;;;;;;;;;570:511:11;281:6995:14;;;:::i;:::-;638:29:11;;;683:7;:::o;634:441::-;281:6995:14;;;:::i;:::-;743:29:11;734:38;;743:29;;281:6995:14;;788:34:11;;;281:6995:14;788:34:11;;;281:6995:14;;;;;;;;;;;;;788:34:11;730:345;281:6995:14;;;:::i;:::-;852:35:11;843:44;;852:35;;281:6995:14;;903:41:11;;;281:6995:14;903:41:11;;;281:6995:14;;;;;;;;;;;;;788:34:11;839:236;281:6995:14;;974:30:11;281:6995:14;;:::i;:::-;965:39:11;961:114;;570:511::o;961:114::-;281:6995:14;;1020:44:11;;;281:6995:14;1020:44:11;;;281:6995:14;;;;;;;;;;;;;;;;;;788:34:11;2145:730;;2283:2;281:6995:14;;2263:22:11;2259:610;2283:2;;;2746:25;2546:180;;;;;;;;;;;;;;-1:-1:-1;2546:180:11;2746:25;;:::i;:::-;2739:32;;:::o;2259:610::-;2802:56;;2818:1;2802:56;2822:35;2802:56;:::o;281:6995:14:-;;;;;;;;;;5009:1456:11;;;;6021:66;6008:79;;6004:161;;281:6995:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6276:24:11;;;;;;;;;;;;;;281:6995:14;;;6314:20:11;6310:101;;6421:37;5009:1456;:::o;6310:101::-;6350:50;6276:24;6350:50;:::o;6276:24::-;;:::i;6004:161::-;6103:51;;;;6119:1;6103:51;6123:30;6103:51;:::o;5651:164:14:-;5759:12;5775:5;281:6995;5759:12;;281:6995;5759:21;5755:35;;5807:1;5651:164;:::o;5755:35::-;-1:-1:-1;5782:8:14;:::o;281:6995::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;5821:1142;;281:6995;;6215:119;;;;;281:6995;6215:119;;;;281:6995;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6376:37;6390:22;281:6995;-1:-1:-1;281:6995:14;;6454:114;281:6995;;;;;;:::i;:::-;6390:22;;:::i;:::-;6376:37;:::i;:::-;6454:114;;:::i;:::-;281:6995;;;;;;;:::i;:::-;6599:29;;;;;;;;-1:-1:-1;281:6995:14;6663:43;6599:29;;;;6663:43;;:::i;281:6995::-;6656:51;;6599:29;6656:51;;;;;6816:113;6656:51;6718:70;-1:-1:-1;6656:51:14;6726:15;;;281:6995;6726:20;;:44;;;6718:70;:::i;:::-;6816:113;:::i;6726:44::-;6718:70;:::i;6997:193::-;552:15:18;;;;;;:::i;:::-;1203:177;;;;;;;;;281:6995:14;;624:46:18;552:15;624:46;;281:6995:14;;;;;;;;;594:12:18;281:6995:14;;;;;;624:46:18;;281:6995:14;;;;;;;;;;;;;;1203:177:18;281:6995:14;;;871:23:18;;7127:55:14;;;;281:6995;;;7161:4;281:6995;;;;;7168:13;281:6995;;;;7127:55;;;;;:::i;:::-;281:6995;7117:66;;6997:193;:::o;281:6995::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;491:66:16:-;;;;;;;;;1484:1;491:66;;;;;;;:::o;:::-;;281:6995:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;491:66:16;;;;;:::i;:::-;;;;;;;;:::o;651:3206::-;281:6995:14;;941:16:16;937:31;;281:6995:14;;:::i;:::-;1593:21:16;1469;1470:15;281:6995:14;;1470:15:16;:::i;:::-;1489:1;491:66;;;;1469:21;281:6995:14;;1489:1:16;491:66;;1500:61;;1593:21;:::i;:::-;1668:2159;;;;;;;;;;;;;;;;3837:13;;;;651:3206;:::o;1668:2159::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1489:1;1668:2159;;;;;;;;;;;;;;;;;;;;;;1500:61;1539:11;;;:::i;:::-;1593:21;:::i;937:31::-;281:6995:14;;;:::i;1633:438:17:-;;;;1780:6;;:16;;;;1633:438;1780:27;;;;1633:438;1780:38;;;;1633:438;1776:163;;2027:37;281:6995:14;5341:33:17;281:6995:14;;:::i;:::-;;;;:::i;:::-;1785:1:17;281:6995:14;;1785:1:17;4506:15;;;281:6995:14;1785:1:17;4506:15;;;281:6995:14;4494:27:17;;4506:15;281:6995:14;;4567:15:17;;281:6995:14;;;:::i;:::-;;;;4506:15:17;4543:43;;281:6995:14;4584:1:17;4506:15;4543:43;;281:6995:14;4614:24:17;4506:15;1264:66;;4531:55;;;;4614:24;:::i;:::-;1264:66;5285:33;4660:32;4506:15;1264:66;;4602:36;;;;4671:9;;4660:32;:::i;:::-;1264:66;;;;4648:44;;;5229:33;5159:32;281:6995:14;;:::i;:::-;625:66:17;281:6995:14;;727:66:17;4506:15;4715:17;;281:6995:14;4584:1:17;4506:15;4715:17;;281:6995:14;4769:32:17;1264:66;;;4703:29;;;;4791:9;;4769:32;;:::i;:::-;1264:66;;;4757:44;4823:32;4834:9;;4845;;4823:32;;:::i;:::-;1264:66;;;4811:44;4877:32;4888:9;;4899;;4877:32;;:::i;:::-;1264:66;;;4865:44;4932:24;4946:9;;4932:24;:::i;:::-;1264:66;4993:32;1264:66;;;4920:36;;;;5015:9;;4993:32;;:::i;:::-;1264:66;;;4981:44;5048:32;5059:9;;5070;;5048:32;;:::i;:::-;1264:66;;;5035:45;5103:32;5114:9;;5125;;5103:32;;:::i;:::-;1264:66;;;5090:45;5170:9;5181;;5159:32;;:::i;:::-;1264:66;;;5146:45;;;;5252:9;5229:33;;:::i;:::-;1264:66;;;5216:46;5296:10;;5308:9;;5285:33;;:::i;:::-;1264:66;;;5272:46;5352:10;5364:9;;5341:33;;:::i;:::-;1264:66;;;5328:46;2027:37;:::i;1776:163::-;1916:12;;;;1785:1;1916:12;:::o;1780:38::-;1811:7;946:66;1811:7;;;1780:38;;:27;1800:7;946:66;1800:7;;;1780:27;;:16;1790:6;;;1780:16;;2077:445;;;;;946:66;2238:7;;;;;;:18;;;2077:445;2234:61;;10624:23;;;;:::i;:::-;2351:16;;;2387;;;-1:-1:-1;3108:10:17;3128;;3148:15;3160:3;3198:652;;3205:8;;;3868:28;;;;;;;;;:::i;:::-;2508:6;;2077:445;:::o;3198:652::-;3233:5;3229:150;;3198:652;281:6995:14;;;;;;;;;3416:83:17;3517:9;3513:263;;3198:652;281:6995:14;;3833:6:17;281:6995:14;;;;;;;3833:6:17;;:::i;:::-;3198:652;;;;3513:263;3558:203;3654:13;;3833:6;3654:13;3728:15;:13;3654;;;;;;;:::i;:::-;;281:6995:14;3691:13:17;:15;:13;;;;:::i;:::-;;:15;281:6995:14;3728:13:17;;:::i;:::-;;:15;281:6995:14;3558:203:17;;:::i;:::-;3546:215;;;-1:-1:-1;3546:215:17;;3513:263;;;;3229:150;3270:32;;;;;3332;3270;;;:::i;:::-;3332;;:::i;:::-;3320:44;;;;;3229:150;;;2234:61;-1:-1:-1;2279:5:17;;-1:-1:-1;;;;2272:12:17:o;2238:18::-;2249:7;;;;;2238:18;;1264:66;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;281:6995:14:-;;;;;;;:::i;:::-;-1:-1:-1;281:6995:14;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:6995:14;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;5387:266:17;5573:41;5387:266;281:6995:14;;:::i;:::-;;;;5585:4:17;5591;5585;;;281:6995:14;5591:4:17;;281:6995:14;;;5603:4:17;5591;5585;5603;;281:6995:14;5609:4:17;;281:6995:14;5573:41:17;;:::i;:::-;281:6995:14;5591:4:17;281:6995:14;;;;;:::i;:::-;;;5585:4:17;5631:15;;281:6995:14;5591:4:17;5631:15;;281:6995:14;5387:266:17;:::o;5659:239::-;5821:38;5659:239;281:6995:14;;:::i;:::-;;;;5850:3:17;5855;5850;;;281:6995:14;5855:3:17;;281:6995:14;5821:38:17;;:::i;6053:366::-;;;;6191:6;;6187:50;;10624:23;-1:-1:-1;836:66:17;10965:721;;;;;;;6053:366;10965:721;;;;;;;;;;;;;;;;;;;;;;281:6995:14;10965:721:17;;;;;;;;;;;;;;;;;;;;;;;6299:22;;;;;6337:21;;;6383:24;;6373:39;;6053:366;:::o;10965:721::-;;;-1:-1:-1;10965:721:17;;;;6187:50;6213:13;;;;6196:1;6213:13;6196:1;6213:13;:::o;6611:2353::-;;;;;;6798:7;;;6885:19;;;;;;:::o;6794:248::-;6925:7;;;;;;;6921:121;;7052:1877;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6794:248;7052:1877;;;;;;;;;;;;;;;;;;;;;;;;6794:248;7052:1877;;;;;;;;;;;;;;;;;;;;;;;;6794:248;7052:1877;;;;;;;;;;;;;6794:248;7052:1877;;;;;;;;;6794:248;7052:1877;;;;;;;;;;;;;;6794:248;7052:1877;;;;;6611:2353;:::o;7052:1877::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6921:121;7012:19;;;;;;;;:::o;9116:1207::-;;;;9263:1054;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9116:1207;9263:1054;;;;;;;;9116:1207;9263:1054;;;;;;;;9116:1207;9263:1054;;;;;9116:1207;:::o;9263:1054::-;;;;;;;;;;;;;;;10801:891;946:66;10965:721;;;;;10801:891;10965:721;;;;;;;;;;;;;;;;;;;;281:6995:14;10965:721:17;;;;;;;;;;;;;;;;;;;;10801:891::o;10965:721::-;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "1850600",
                "executionCost": "27298",
                "totalCost": "1877898"
              },
              "external": {
                "entrypoint((uint256,bytes,uint256,bytes))": "infinite",
                "getAddressOwner()": "2323",
                "getNonce()": "2355",
                "getPassKeyOwner()": "infinite",
                "getUserOpHash((uint256,bytes,uint256,bytes))": "infinite",
                "initialize((uint256,uint256,string))": "infinite",
                "passKeyOwnerEnabled()": "2345"
              },
              "internal": {
                "_call(address,uint256,bytes memory)": "infinite",
                "_changeAddressOwner(address)": "infinite",
                "_changePassKeyOwner(struct PassKeyId memory)": "infinite",
                "_initialize(struct PassKeyId memory)": "infinite",
                "_validateNonce(struct UserOp calldata)": "2147",
                "_validateUserOp(struct UserOp calldata)": "infinite",
                "changeOwnershipToAddress(bytes memory)": "infinite",
                "changeOwnershipToPassKeyAddress(bytes memory)": "infinite",
                "execute(bytes memory)": "infinite",
                "executeBatch(bytes memory)": "infinite",
                "validatePassKeySig(bytes memory,bytes32,struct PassKeyId memory)": "infinite"
              }
            },
            "methodIdentifiers": {
              "entrypoint((uint256,bytes,uint256,bytes))": "f0f05cef",
              "getAddressOwner()": "b627e20f",
              "getNonce()": "d087d288",
              "getPassKeyOwner()": "8fb41072",
              "getUserOpHash((uint256,bytes,uint256,bytes))": "fd5c8d72",
              "initialize((uint256,uint256,string))": "759a68c0",
              "passKeyOwnerEnabled()": "be9ef843"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"functionType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"argument\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOp\",\"name\":\"userop\",\"type\":\"tuple\"}],\"name\":\"entrypoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPassKeyOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pubKeyY\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"keyId\",\"type\":\"string\"}],\"internalType\":\"struct PassKeyId\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"functionType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"argument\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOp\",\"name\":\"userop\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pubKeyY\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"keyId\",\"type\":\"string\"}],\"internalType\":\"struct PassKeyId\",\"name\":\"anOwner\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"passKeyOwnerEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aa/Account.sol\":\"Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\")\\n            mstore(0x1c, hash)\\n            message := keccak256(0x00, 0x3c)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, \\\"\\\\x19\\\\x01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            data := keccak256(ptr, 0x42)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\\n     * `validator` and `data` according to the version 0 of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x00\\\", validator, data));\\n    }\\n}\\n\",\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/aa/Account.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.19;\\n\\nimport \\\"./utils/UserOp.sol\\\";\\nimport \\\"./utils/Secp256r1.sol\\\";\\nimport \\\"./utils/Base64.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\n\\ncontract Account is Initializable {\\n    using UserOpLib for UserOp;\\n    using ECDSA for bytes32;\\n\\n    address addressOwner;\\n    PassKeyId passKeyOwner;\\n\\n    bool isPassKeyOwnerEnabled;\\n\\n    uint256 nonce;\\n\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    // getter functions\\n    function getAddressOwner() public view returns (address) {\\n        return addressOwner;\\n    }\\n\\n    function getPassKeyOwner() public view returns (PassKeyId memory) {\\n        return passKeyOwner;\\n    }\\n\\n    function passKeyOwnerEnabled() public view returns (bool) {\\n        return isPassKeyOwnerEnabled;\\n    }\\n\\n    function getNonce() public view returns (uint256) {\\n        return nonce;\\n    }\\n\\n    function changeOwnershipToAddress(bytes memory argument) private {\\n        require(\\n            isPassKeyOwnerEnabled == true,\\n            \\\"Account: Already address owner enabled\\\"\\n        );\\n        // address newOwner = abi.decode(argument, (address));\\n        address newOwner;\\n        assembly {\\n            newOwner := mload(add(argument, 20))\\n        }\\n        _changePassKeyOwner(PassKeyId(0, 0, \\\"\\\"));\\n        _changeAddressOwner(newOwner);\\n        isPassKeyOwnerEnabled = false;\\n    }\\n\\n    function changeOwnershipToPassKeyAddress(bytes memory argument) private {\\n        require(\\n            isPassKeyOwnerEnabled == false,\\n            \\\"Account: Already passkey owner enabled\\\"\\n        );\\n        (uint256 pubKeyX, uint256 pubKeyY, string memory keyId) = abi.decode(\\n            argument,\\n            (uint256, uint256, string)\\n        );\\n        PassKeyId memory newOwner = PassKeyId(pubKeyX, pubKeyY, keyId);\\n        _changeAddressOwner(address(0));\\n        _changePassKeyOwner(newOwner);\\n        isPassKeyOwnerEnabled = true;\\n    }\\n\\n    // internal functions to change owners\\n    function _changePassKeyOwner(PassKeyId memory newOwner) private {\\n        passKeyOwner = newOwner;\\n    }\\n\\n    function _changeAddressOwner(address newOwner) private {\\n        addressOwner = newOwner;\\n    }\\n\\n    function initialize(PassKeyId memory anOwner) public virtual initializer {\\n        isPassKeyOwnerEnabled = true;\\n        _initialize(anOwner);\\n    }\\n\\n    function _initialize(PassKeyId memory anOwner) internal virtual {\\n        passKeyOwner = anOwner;\\n    }\\n\\n    // Main entry point for external callers\\n\\n    function entrypoint(UserOp calldata userop) public {\\n        // validate userop signature\\n        uint256 sigVerification = _validateUserOp(userop);\\n        require(sigVerification == 0, \\\"Account: Signature verification failed\\\");\\n        // validate nonce\\n        uint256 nonceVerification = _validateNonce(userop);\\n        require(nonceVerification == 0, \\\"Account: Nonce verification failed\\\");\\n        // execute\\n        if (userop.functionType == 0) {\\n            execute(userop.argument);\\n        }\\n        if (userop.functionType == 1) {\\n            executeBatch(userop.argument);\\n        }\\n        if (userop.functionType == 2) {\\n            changeOwnershipToAddress(userop.argument);\\n        }\\n        if (userop.functionType == 3) {\\n            changeOwnershipToPassKeyAddress(userop.argument);\\n        }\\n        nonce = nonce + 1;\\n        return;\\n    }\\n\\n    /**\\n     * execute a transaction (called directly from owner, or by entryPoint)\\n     */\\n    function execute(bytes memory argument) private {\\n        (address dest, uint256 value, bytes memory func) = abi.decode(\\n            argument,\\n            (address, uint256, bytes)\\n        );\\n        _call(dest, value, func);\\n    }\\n\\n    /**\\n     * execute a sequence of transactions\\n     * @dev to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\\n     */\\n    function executeBatch(bytes memory argument) private {\\n        (\\n            address[] memory dest,\\n            uint256[] memory value,\\n            bytes[] memory func\\n        ) = abi.decode(argument, (address[], uint256[], bytes[]));\\n        require(\\n            dest.length == func.length &&\\n                (value.length == 0 || value.length == func.length),\\n            \\\"wrong array lengths\\\"\\n        );\\n        if (value.length == 0) {\\n            for (uint256 i = 0; i < dest.length; i++) {\\n                _call(dest[i], 0, func[i]);\\n            }\\n        } else {\\n            for (uint256 i = 0; i < dest.length; i++) {\\n                _call(dest[i], value[i], func[i]);\\n            }\\n        }\\n    }\\n\\n    function _call(address target, uint256 value, bytes memory data) internal {\\n        (bool success, bytes memory result) = target.call{value: value}(data);\\n        if (!success) {\\n            assembly {\\n                revert(add(result, 32), mload(result))\\n            }\\n        }\\n    }\\n\\n    // internal function to validate userop signature\\n    function _validateUserOp(\\n        UserOp calldata userop\\n    ) internal view returns (uint256) {\\n        bytes32 userOpHash = getUserOpHash(userop);\\n        if (isPassKeyOwnerEnabled) {\\n            bool isSigValid = validatePassKeySig(\\n                userop.signature,\\n                userOpHash,\\n                passKeyOwner\\n            );\\n            if (!isSigValid) return 1;\\n            return 0;\\n        } else {\\n            bytes32 hash = userOpHash.toEthSignedMessageHash();\\n            if (addressOwner != hash.recover(userop.signature)) return 1;\\n            return 0;\\n        }\\n    }\\n\\n    // internal function to validate nonce\\n    function _validateNonce(\\n        UserOp calldata userop\\n    ) internal view returns (uint256) {\\n        if (userop.nonce == nonce) return 0;\\n        return 1;\\n    }\\n\\n    function validatePassKeySig(\\n        bytes memory signature,\\n        bytes32 execHash,\\n        PassKeyId memory passkey\\n    ) internal view returns (bool) {\\n        (\\n            bytes32 keyHash,\\n            uint256 sigx,\\n            uint256 sigy,\\n            bytes memory authenticatorData,\\n            string memory clientDataJSONPre,\\n            string memory clientDataJSONPost\\n        ) = abi.decode(\\n                signature,\\n                (bytes32, uint256, uint256, bytes, string, string)\\n            );\\n\\n        string memory execHashBase64 = Base64.encode(bytes.concat(execHash));\\n        string memory clientDataJSON = string.concat(\\n            clientDataJSONPre,\\n            execHashBase64,\\n            clientDataJSONPost\\n        );\\n        bytes32 clientHash = sha256(bytes(clientDataJSON));\\n        bytes32 sigHash = sha256(bytes.concat(authenticatorData, clientHash));\\n\\n        require(passkey.pubKeyY != 0 && passkey.pubKeyY != 0, \\\"Key not found\\\");\\n        bool isSigValid = Secp256r1.Verify(\\n            passkey,\\n            sigx,\\n            sigy,\\n            uint256(sigHash)\\n        );\\n        return isSigValid;\\n    }\\n\\n    // gets the userOp hash\\n    function getUserOpHash(\\n        UserOp calldata userop\\n    ) public view returns (bytes32) {\\n        return\\n            keccak256(abi.encode(userop.hash(), address(this), block.chainid));\\n    }\\n\\n    // solhint-disable-next-line no-empty-blocks\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xffc88e51e12629d1bfa349e34f51cecb413de441b1d21f996e78ca05ce9ddab3\",\"license\":\"GPL-3.0\"},\"contracts/aa/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\n// modified for base64url encoding, does not pad with '='\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *  modified for base64url https://datatracker.ietf.org/doc/html/rfc4648#section-5\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE =\\n        \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        uint256 newlength = (data.length * 8) / 6;\\n        if (data.length % 6 > 0) {\\n            newlength++;\\n        }\\n        string memory result = new string(newlength);\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n            // let targetLength := add(resultPtr, newlength)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(12, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(6, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n                // }\\n                // }\\n                // }\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xdae76c808cc5e424ff5e20688a02f913d6a5f834902e7329f0265fabf153a8fb\",\"license\":\"MIT\"},\"contracts/aa/utils/Secp256r1.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\n//\\n// Heavily inspired from\\n// https://github.com/maxrobot/elliptic-solidity/blob/master/contracts/Secp256r1.sol\\n// https://github.com/tdrerup/elliptic-curve-solidity/blob/master/contracts/curves/EllipticCurve.sol\\n// modified to use precompile 0x05 modexp\\n// and modified jacobian double\\n// optimisations to avoid to an from from affine and jacobian coordinates\\n//\\nstruct PassKeyId {\\n    uint256 pubKeyX;\\n    uint256 pubKeyY;\\n    string keyId;\\n}\\n\\nstruct JPoint {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n}\\n\\nlibrary Secp256r1 {\\n    uint256 constant gx =\\n        0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296;\\n    uint256 constant gy =\\n        0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5;\\n    uint256 public constant pp =\\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF;\\n\\n    uint256 public constant nn =\\n        0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551;\\n    uint256 constant a =\\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC;\\n    uint256 constant b =\\n        0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B;\\n    uint256 constant MOST_SIGNIFICANT =\\n        0xc000000000000000000000000000000000000000000000000000000000000000;\\n\\n    /*\\n     * Verify\\n     * @description - verifies that a public key has signed a given message\\n     * @param X - public key coordinate X\\n     * @param Y - public key coordinate Y\\n     * @param R - signature half R\\n     * @param S - signature half S\\n     * @param input - hashed message\\n     */\\n    function Verify(\\n        PassKeyId memory passKey,\\n        uint r,\\n        uint s,\\n        uint e\\n    ) internal view returns (bool) {\\n        if (r == 0 || s == 0 || r >= nn || s >= nn) {\\n            /* testing null signature, otherwise (0,0) is valid for any message*/\\n            return false;\\n        }\\n\\n        JPoint[16] memory points = _preComputeJacobianPoints(passKey);\\n        return VerifyWithPrecompute(points, r, s, e);\\n    }\\n\\n    function VerifyWithPrecompute(\\n        JPoint[16] memory points,\\n        uint r,\\n        uint s,\\n        uint e\\n    ) internal view returns (bool) {\\n        if (r >= nn || s >= nn) {\\n            return false;\\n        }\\n\\n        uint w = _primemod(s, nn);\\n\\n        uint u1 = mulmod(e, w, nn);\\n        uint u2 = mulmod(r, w, nn);\\n\\n        uint x;\\n        uint y;\\n\\n        (x, y) = ShamirMultJacobian(points, u1, u2);\\n        return (x == r);\\n    }\\n\\n    /*\\n     * Strauss Shamir trick for EC multiplication\\n     * https://stackoverflow.com/questions/50993471/ec-scalar-multiplication-with-strauss-shamir-method\\n     * we optimise on this a bit to do with 2 bits at a time rather than a single bit\\n     * the individual points for a single pass are precomputed\\n     * overall this reduces the number of additions while keeping the same number of doublings\\n     */\\n    function ShamirMultJacobian(\\n        JPoint[16] memory points,\\n        uint u1,\\n        uint u2\\n    ) internal view returns (uint, uint) {\\n        uint x = 0;\\n        uint y = 0;\\n        uint z = 0;\\n        uint bits = 128;\\n        uint index = 0;\\n\\n        while (bits > 0) {\\n            if (z > 0) {\\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\\n            }\\n            index =\\n                ((u1 & MOST_SIGNIFICANT) >> 252) |\\n                ((u2 & MOST_SIGNIFICANT) >> 254);\\n            if (index > 0) {\\n                (x, y, z) = _jAdd(\\n                    x,\\n                    y,\\n                    z,\\n                    points[index].x,\\n                    points[index].y,\\n                    points[index].z\\n                );\\n            }\\n            u1 <<= 2;\\n            u2 <<= 2;\\n            bits--;\\n        }\\n        (x, y) = _affineFromJacobian(x, y, z);\\n        return (x, y);\\n    }\\n\\n    function _preComputeJacobianPoints(\\n        PassKeyId memory passKey\\n    ) internal pure returns (JPoint[16] memory points) {\\n        // JPoint[] memory u1Points = new JPoint[](4);\\n        // u1Points[0] = JPoint(0, 0, 0);\\n        // u1Points[1] = JPoint(gx, gy, 1); // u1\\n        // u1Points[2] = _jPointDouble(u1Points[1]);\\n        // u1Points[3] = _jPointAdd(u1Points[1], u1Points[2]);\\n        // avoiding this intermediate step by using it in a single array below\\n        // these are pre computed points for u1\\n\\n        // JPoint[16] memory points;\\n        points[0] = JPoint(0, 0, 0);\\n        points[1] = JPoint(passKey.pubKeyX, passKey.pubKeyY, 1); // u2\\n        points[2] = _jPointDouble(points[1]);\\n        points[3] = _jPointAdd(points[1], points[2]);\\n\\n        points[4] = JPoint(gx, gy, 1); // u1Points[1]\\n        points[5] = _jPointAdd(points[4], points[1]);\\n        points[6] = _jPointAdd(points[4], points[2]);\\n        points[7] = _jPointAdd(points[4], points[3]);\\n\\n        points[8] = _jPointDouble(points[4]); // u1Points[2]\\n        points[9] = _jPointAdd(points[8], points[1]);\\n        points[10] = _jPointAdd(points[8], points[2]);\\n        points[11] = _jPointAdd(points[8], points[3]);\\n\\n        points[12] = _jPointAdd(points[4], points[8]); // u1Points[3]\\n        points[13] = _jPointAdd(points[12], points[1]);\\n        points[14] = _jPointAdd(points[12], points[2]);\\n        points[15] = _jPointAdd(points[12], points[3]);\\n    }\\n\\n    function _jPointAdd(\\n        JPoint memory p1,\\n        JPoint memory p2\\n    ) internal pure returns (JPoint memory) {\\n        uint x;\\n        uint y;\\n        uint z;\\n        (x, y, z) = _jAdd(p1.x, p1.y, p1.z, p2.x, p2.y, p2.z);\\n        return JPoint(x, y, z);\\n    }\\n\\n    function _jPointDouble(\\n        JPoint memory p\\n    ) internal pure returns (JPoint memory) {\\n        uint x;\\n        uint y;\\n        uint z;\\n        (x, y, z) = _modifiedJacobianDouble(p.x, p.y, p.z);\\n        return JPoint(x, y, z);\\n    }\\n\\n    /* _affineFromJacobian\\n     * @desription returns affine coordinates from a jacobian input follows\\n     * golang elliptic/crypto library\\n     */\\n    function _affineFromJacobian(\\n        uint x,\\n        uint y,\\n        uint z\\n    ) internal view returns (uint ax, uint ay) {\\n        if (z == 0) {\\n            return (0, 0);\\n        }\\n\\n        uint zinv = _primemod(z, pp);\\n        uint zinvsq = mulmod(zinv, zinv, pp);\\n\\n        ax = mulmod(x, zinvsq, pp);\\n        ay = mulmod(y, mulmod(zinvsq, zinv, pp), pp);\\n    }\\n\\n    /*\\n     * _jAdd\\n     * @description performs double Jacobian as defined below:\\n     * https://hyperelliptic.org/EFD/g1p/auto-code/shortw/jacobian-3/doubling/mdbl-2007-bl.op3\\n     */\\n    function _jAdd(\\n        uint p1,\\n        uint p2,\\n        uint p3,\\n        uint q1,\\n        uint q2,\\n        uint q3\\n    ) internal pure returns (uint r1, uint r2, uint r3) {\\n        if (p3 == 0) {\\n            r1 = q1;\\n            r2 = q2;\\n            r3 = q3;\\n\\n            return (r1, r2, r3);\\n        } else if (q3 == 0) {\\n            r1 = p1;\\n            r2 = p2;\\n            r3 = p3;\\n\\n            return (r1, r2, r3);\\n        }\\n\\n        assembly {\\n            let\\n                pd\\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\\n            let z1z1 := mulmod(p3, p3, pd) // Z1Z1 = Z1^2\\n            let z2z2 := mulmod(q3, q3, pd) // Z2Z2 = Z2^2\\n\\n            let u1 := mulmod(p1, z2z2, pd) // U1 = X1*Z2Z2\\n            let u2 := mulmod(q1, z1z1, pd) // U2 = X2*Z1Z1\\n\\n            let s1 := mulmod(p2, mulmod(z2z2, q3, pd), pd) // S1 = Y1*Z2*Z2Z2\\n            let s2 := mulmod(q2, mulmod(z1z1, p3, pd), pd) // S2 = Y2*Z1*Z1Z1\\n\\n            let p3q3 := addmod(p3, q3, pd)\\n\\n            if lt(u2, u1) {\\n                u2 := add(pd, u2) // u2 = u2+pd\\n            }\\n            let h := sub(u2, u1) // H = U2-U1\\n\\n            let i := mulmod(0x02, h, pd)\\n            i := mulmod(i, i, pd) // I = (2*H)^2\\n\\n            let j := mulmod(h, i, pd) // J = H*I\\n            if lt(s2, s1) {\\n                s2 := add(pd, s2) // u2 = u2+pd\\n            }\\n            let rr := mulmod(0x02, sub(s2, s1), pd) // r = 2*(S2-S1)\\n            r1 := mulmod(rr, rr, pd) // X3 = R^2\\n\\n            let v := mulmod(u1, i, pd) // V = U1*I\\n            let j2v := addmod(j, mulmod(0x02, v, pd), pd)\\n            if lt(r1, j2v) {\\n                r1 := add(pd, r1) // X3 = X3+pd\\n            }\\n            r1 := sub(r1, j2v)\\n\\n            // Y3 = r*(V-X3)-2*S1*J\\n            let s12j := mulmod(mulmod(0x02, s1, pd), j, pd)\\n\\n            if lt(v, r1) {\\n                v := add(pd, v)\\n            }\\n            r2 := mulmod(rr, sub(v, r1), pd)\\n\\n            if lt(r2, s12j) {\\n                r2 := add(pd, r2)\\n            }\\n            r2 := sub(r2, s12j)\\n\\n            // Z3 = ((Z1+Z2)^2-Z1Z1-Z2Z2)*H\\n            z1z1 := addmod(z1z1, z2z2, pd)\\n            j2v := mulmod(p3q3, p3q3, pd)\\n            if lt(j2v, z1z1) {\\n                j2v := add(pd, j2v)\\n            }\\n            r3 := mulmod(sub(j2v, z1z1), h, pd)\\n        }\\n        return (r1, r2, r3);\\n    }\\n\\n    // Point doubling on the modified jacobian coordinates\\n    // http://point-at-infinity.org/ecc/Prime_Curve_Modified_Jacobian_Coordinates.html\\n    function _modifiedJacobianDouble(\\n        uint x,\\n        uint y,\\n        uint z\\n    ) internal pure returns (uint x3, uint y3, uint z3) {\\n        assembly {\\n            let\\n                pd\\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\\n            let z2 := mulmod(z, z, pd)\\n            let az4 := mulmod(\\n                0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC,\\n                mulmod(z2, z2, pd),\\n                pd\\n            )\\n            let y2 := mulmod(y, y, pd)\\n            let s := mulmod(0x04, mulmod(x, y2, pd), pd)\\n            let u := mulmod(0x08, mulmod(y2, y2, pd), pd)\\n            let m := addmod(mulmod(0x03, mulmod(x, x, pd), pd), az4, pd)\\n            let twos := mulmod(0x02, s, pd)\\n            let m2 := mulmod(m, m, pd)\\n            if lt(m2, twos) {\\n                m2 := add(pd, m2)\\n            }\\n            x3 := sub(m2, twos)\\n            if lt(s, x3) {\\n                s := add(pd, s)\\n            }\\n            y3 := mulmod(m, sub(s, x3), pd)\\n            if lt(y3, u) {\\n                y3 := add(pd, y3)\\n            }\\n            y3 := sub(y3, u)\\n            z3 := mulmod(0x02, mulmod(y, z, pd), pd)\\n        }\\n    }\\n\\n    // Fermats little theorem https://en.wikipedia.org/wiki/Fermat%27s_little_theorem\\n    // a^(p-1) = 1 mod p\\n    // a^(-1) \\u2245 a^(p-2) (mod p)\\n    // we then use the precompile bigModExp to compute a^(-1)\\n    function _primemod(uint value, uint p) internal view returns (uint ret) {\\n        ret = modexp(value, p - 2, p);\\n        return ret;\\n    }\\n\\n    // Wrapper for built-in BigNumber_modexp (contract 0x5) as described here. https://github.com/ethereum/EIPs/pull/198\\n    function modexp(\\n        uint _base,\\n        uint _exp,\\n        uint _mod\\n    ) internal view returns (uint ret) {\\n        // bigModExp(_base, _exp, _mod);\\n        assembly {\\n            if gt(_base, _mod) {\\n                _base := mod(_base, _mod)\\n            }\\n            // Free memory pointer is always stored at 0x40\\n            let freemem := mload(0x40)\\n\\n            mstore(freemem, 0x20)\\n            mstore(add(freemem, 0x20), 0x20)\\n            mstore(add(freemem, 0x40), 0x20)\\n\\n            mstore(add(freemem, 0x60), _base)\\n            mstore(add(freemem, 0x80), _exp)\\n            mstore(add(freemem, 0xa0), _mod)\\n\\n            let success := staticcall(not(0), 0x5, freemem, 0xc0, freemem, 0x20)\\n            switch success\\n            case 0 {\\n                revert(0x0, 0x0)\\n            }\\n            default {\\n                ret := mload(freemem)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd43f80b0a6bc9d21430e1f2a485960a59266972545d9f15c72fc21daebebaf42\",\"license\":\"GPL-3.0\"},\"contracts/aa/utils/UserOp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\n// call type\\n// 00 -> single\\n// 01 -> batch\\n\\nstruct UserOp {\\n    uint256 functionType;\\n    bytes argument;\\n    uint256 nonce;\\n    bytes signature;\\n}\\n\\nlibrary UserOpLib {\\n    /**\\n     * Pack the user operation data into bytes for hashing.\\n     * @param userop - The user operation data.\\n     */\\n    function pack(\\n        UserOp calldata userop\\n    ) internal pure returns (bytes memory ret) {\\n        uint256 functionType = userop.functionType;\\n        bytes32 hashArguments = calldataKeccak(userop.argument);\\n        uint256 nonce = userop.nonce;\\n\\n        return abi.encode(functionType, hashArguments, nonce);\\n    }\\n\\n    /**\\n     * Hash the user operation data.\\n     * @param userop - The user operation data.\\n     */\\n    function hash(UserOp calldata userop) internal pure returns (bytes32) {\\n        return keccak256(pack(userop));\\n    }\\n\\n    /**\\n     * keccak function over calldata.\\n     * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\\n     */\\n    function calldataKeccak(\\n        bytes calldata data\\n    ) public pure returns (bytes32 ret) {\\n        assembly {\\n            let mem := mload(0x40)\\n            let len := data.length\\n            calldatacopy(mem, data.offset, len)\\n            ret := keccak256(mem, len)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe9d67905db0bceb2036a23b41879fc6bc6fb6476262b52e2b80c5aa67621038b\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 440,
                "contract": "contracts/aa/Account.sol:Account",
                "label": "_initialized",
                "offset": 0,
                "slot": "0",
                "type": "t_uint8"
              },
              {
                "astId": 443,
                "contract": "contracts/aa/Account.sol:Account",
                "label": "_initializing",
                "offset": 1,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 2707,
                "contract": "contracts/aa/Account.sol:Account",
                "label": "addressOwner",
                "offset": 2,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 2710,
                "contract": "contracts/aa/Account.sol:Account",
                "label": "passKeyOwner",
                "offset": 0,
                "slot": "1",
                "type": "t_struct(PassKeyId)3577_storage"
              },
              {
                "astId": 2712,
                "contract": "contracts/aa/Account.sol:Account",
                "label": "isPassKeyOwnerEnabled",
                "offset": 0,
                "slot": "4",
                "type": "t_bool"
              },
              {
                "astId": 2714,
                "contract": "contracts/aa/Account.sol:Account",
                "label": "nonce",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_struct(PassKeyId)3577_storage": {
                "encoding": "inplace",
                "label": "struct PassKeyId",
                "members": [
                  {
                    "astId": 3572,
                    "contract": "contracts/aa/Account.sol:Account",
                    "label": "pubKeyX",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 3574,
                    "contract": "contracts/aa/Account.sol:Account",
                    "label": "pubKeyY",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 3576,
                    "contract": "contracts/aa/Account.sol:Account",
                    "label": "keyId",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_string_storage"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "contracts/aa/AccountFactory.sol": {
        "AccountFactory": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "accountImplementation",
              "outputs": [
                {
                  "internalType": "contract Account",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pubKeyX",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pubKeyY",
                  "type": "uint256"
                },
                { "internalType": "string", "name": "keyId", "type": "string" },
                { "internalType": "uint256", "name": "salt", "type": "uint256" }
              ],
              "name": "createAccount",
              "outputs": [
                {
                  "internalType": "contract Account",
                  "name": "ret",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pubKeyX",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pubKeyY",
                  "type": "uint256"
                },
                { "internalType": "string", "name": "keyId", "type": "string" },
                { "internalType": "uint256", "name": "salt", "type": "uint256" }
              ],
              "name": "getAddress",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a0806040523461007e576124ec8181016001600160401b03811183821017610068578291610a36833903906000f0801561005c576080526040516109b29081610084823960805181818160e6015281816103f301526105260152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816311464fbe1461009c57508063c8cb55ae1461007f5763cac8cfc21461004257600080fd5b3461007c57602061005e6100553661019a565b92919091610450565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b80fd5b503461007c57602061005e6100933661019a565b9291909161031a565b90503461010a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010a5760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b6060810190811067ffffffffffffffff82111761012a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761012a57604052565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261025357600435916024359167ffffffffffffffff604435818111610253578260238201121561025357806004013591821161012a576040519261022c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610159565b82845260248383010111610253578160009260246020930183860137830101529060643590565b600080fd5b60005b83811061026b5750506000910152565b818101518382015260200161025b565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936102b781518092818752878088019101610258565b0116010190565b608060406102ea936020845280516020850152602081015182850152015191606080820152019061027b565b90565b60409073ffffffffffffffffffffffffffffffffffffffff6102ea9493168152816020820152019061027b565b928092610342926040519561032e8761010e565b808752816020880152826040880152610450565b803b61043457506103b1610385926040519384917f759a68c0000000000000000000000000000000000000000000000000000000006020840152602483016102be565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101845283610159565b604051610403928382019382851067ffffffffffffffff86111761012a578291610419916105a3843973ffffffffffffffffffffffffffffffffffffffff95867f000000000000000000000000000000000000000000000000000000000000000016906102ed565b03906000f58015610428571690565b6040513d6000823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff1692915050565b92600b92916055946040938451916104678361010e565b8252602092838301528482015261057e61058a83610403936104d088519161049184880184610159565b868352838301966105a3883989519182917f759a68c00000000000000000000000000000000000000000000000000000000086840152602483016102be565b036105017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe091828101845283610159565b6105588a51918261054c8782019573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016876102ed565b03908101835282610159565b895195869361056f868601998a9251928391610258565b84019151809386840190610258565b01038084520182610159565b5190208351938401528201523081520160ff8153209056fe604060808152610403908138038061001681610218565b93843982019181818403126102135780516001600160a01b038116808203610213576020838101516001600160401b0394919391858211610213570186601f820112156102135780519061007161006c83610253565b610218565b918083528583019886828401011161021357888661008f930161026e565b813b156101b9577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916841790556000927fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28051158015906101b2575b61010b575b855160be90816103458239f35b855194606086019081118682101761019e578697849283926101889952602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a8901525190845af4913d15610194573d9061017a61006c83610253565b91825281943d92013e610291565b508038808080806100fe565b5060609250610291565b634e487b7160e01b84526041600452602484fd5b50826100f9565b855162461bcd60e51b815260048101859052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761023d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161023d57601f01601f191660200190565b60005b8381106102815750506000910152565b8181015183820152602001610271565b919290156102f357508151156102a5575090565b3b156102ae5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103065750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610336815180928160248601526020868601910161026e565b601f01601f19168101030190fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea164736f6c6343000813000aa164736f6c6343000813000a608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161242590816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c908163759a68c01461008e575080638fb4107214610089578063b627e20f14610084578063be9ef8431461007f578063d087d2881461007a578063f0f05cef146100755763fd5c8d720361000e5761055a565b610475565b6103e9565b6103a8565b610353565b610296565b3461013e577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126101325760043567ffffffffffffffff9182821161013a576060908236030112610136576100e860e0604052565b8060040135608052602481013560a052604481013591821161013657013660238201121561013257610124903690602460048201359101610237565b60c05261012f6106d1565b80f35b5080fd5b8280fd5b8380fd5b80fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761018c57604052565b610141565b6080810190811067ffffffffffffffff82111761018c57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761018c57604052565b604051906101fb82610170565b565b67ffffffffffffffff811161018c57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610243826101fd565b9161025160405193846101ad565b82948184528183011161026e578281602093846000960137010152565b600080fd5b60005b8381106102865750506000910152565b8181015183820152602001610276565b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e576060604080516102d481610170565b60008152600060208201520152604060a06102ed6105cd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84519485936020855280516020860152602081015182860152015160608085015261034a8151809281608088015260208888019101610273565b01168101030190f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e57602073ffffffffffffffffffffffffffffffffffffffff60005460101c16604051908152f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e57602060ff600454166040519015158152f35b3461026e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026e576020600554604051908152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9060208282011261026e576004359167ffffffffffffffff831161026e578260809203011261026e5760040190565b3461026e5761048336610425565b61049561048f826114a6565b15610b9a565b6104a76104a18261184f565b15610c25565b60038135801561053d575b60018114610520575b60028114610503575b146104dd575b6100196104d8600554610d30565b600555565b6104f86104f18260206104fd940190610cb0565b3691610237565b610ee4565b386104ca565b61051b6105166104f16020860186610cb0565b610d67565b6104c4565b6105386105336104f16020860186610cb0565b61133d565b6104bb565b6105556105506104f16020860186610cb0565b61104c565b6104b2565b3461026e57602061057261056d36610425565b611a8d565b604051908152f35b90600182811c921680156105c3575b602083101461059457565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691610589565b604051906105da82610170565b816001908154815260025460209081830152604051928391600091600354906106028261057a565b80865291818116908115610694575060011461062f575b5050506040929161062b9103846101ad565b0152565b909493925060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b946000915b81831061067c5750939450919250908201018161062b6040610619565b8654888401850152958601958794509183019161065f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b83010190508161062b6040610619565b60005460ff8160081c16158091819261086c575b811561084c575b50156107c8578061072360017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b610792575b61073061087a565b61073657565b6107637fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1565b6107c36101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b610728565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b303b1591508161085e575b50386106ec565b6001915060ff161438610857565b600160ff82161091506106e5565b6001807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455608051815560a05160025560c0519081519167ffffffffffffffff831161018c576108db836108d660035461057a565b610a1a565b60209081601f85116001146109545750600091849182610929575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c191617600355565b015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff386108f6565b9190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0819596166109a860036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90565b946000905b88838310610a0057505050106109c9575b505050811b01600355565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690553880806109be565b8587015188559096019594850194879350908101906109ad565b601f8111610a26575050565b600090600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906020601f850160051c83019410610a81575b601f0160051c01915b828110610a7657505050565b818155600101610a6a565b9092508290610a61565b8051600190815560406020928381015160025501519182519267ffffffffffffffff841161018c57610ac2846108d660035461057a565b81601f8511600114610b0c57506000918491826109295750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91921b9260031b1c191617600355565b9190847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081959616610b6060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90565b946000905b88838310610b8057505050106109c957505050811b01600355565b858701518855909601959485019487935090810190610b65565b15610ba157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a205369676e617475726520766572696669636174696f6e2060448201527f6661696c656400000000000000000000000000000000000000000000000000006064820152fd5b15610c2c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4163636f756e743a204e6f6e636520766572696669636174696f6e206661696c60448201527f65640000000000000000000000000000000000000000000000000000000000006064820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561026e570180359067ffffffffffffffff821161026e5760200191813603831361026e57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060018201809211610d3e57565b610d01565b604051906020820182811067ffffffffffffffff82111761018c5760405260008252565b600160ff60045416151503610e1b576014610dee910151610da6610d896101ee565b6000815260006020820152610d9c610d43565b6040820152610a8b565b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00006000549260101b16911617600055565b6101fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060045416600455565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a20416c72656164792061646472657373206f776e6572206560448201527f6e61626c656400000000000000000000000000000000000000000000000000006064820152fd5b81601f8201121561026e578051610eb5816101fd565b92610ec360405194856101ad565b8184526020828401011161026e57610ee19160208085019101610273565b90565b60ff60045416610faa57805181019060608183031261026e5760208101519060408101519060608101519067ffffffffffffffff821161026e576020610f329281610f7a9701920101610e9f565b90610f3b6101ee565b92835260208301526040820152610f757fffffffffffffffffffff0000000000000000000000000000000000000000ffff60005416600055565b610a8b565b6101fb60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006004541617600455565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4163636f756e743a20416c726561647920706173736b6579206f776e6572206560448201527f6e61626c656400000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff81160361026e57565b8051810160608282031261026e576020820151906110698261102e565b604083015190606084015167ffffffffffffffff811161026e576101fb9460206110ad928173ffffffffffffffffffffffffffffffffffffffff9501920101610e9f565b9216611486565b67ffffffffffffffff811161018c5760051b60200190565b81601f8201121561026e578051916110e3836110b4565b926110f160405194856101ad565b808452602092838086019260051b82010192831161026e578301905b82821061111b575050505090565b8151815290830190830161110d565b9080601f8301121561026e57815190611142826110b4565b9261115060405194856101ad565b828452602092838086019160051b8301019280841161026e57848301915b84831061117e5750505050505090565b825167ffffffffffffffff811161026e5786916111a084848094890101610e9f565b81520192019161116e565b909160608284031261026e5781519167ffffffffffffffff9283811161026e5781019380601f8601121561026e5784516111e4816110b4565b906111f260405192836101ad565b808252602096878084019260051b8201019184831161026e5788809201905b83821061124a57505050509482015184811161026e57816112339184016110cc565b93604083015190811161026e57610ee1920161112a565b82809183516112588161102e565b815201910190611211565b1561126a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d3e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80518210156113385760209160051b010190565b6112f5565b61135090602080825183010191016111ab565b92919061136a825185518091149081611416575b50611263565b80516113cc575060005b81518110156113c657806113bc6113ab6113916113c19486611324565b5173ffffffffffffffffffffffffffffffffffffffff1690565b6113b58388611324565b5190611435565b6112c8565b611374565b50509050565b929060005b815181101561140f57806113bc6113ee61139161140a9486611324565b6113f88389611324565b516114038488611324565b5191611486565b6113d1565b5050509050565b835180159250821561142b575b505038611364565b1490503880611423565b600091829182602083519301915af13d1561147e573d90611455826101fd565b9161146360405193846101ad565b82523d6000602084013e5b156114765750565b602081519101fd5b60609061146e565b916000928392602083519301915af13d1561147e573d90611455826101fd565b6114af81611a8d565b60045460ff16156114f3576114e1906114d26104f18460606114e5960190610cb0565b906114db6105cd565b91611997565b1590565b6114ee57600090565b600190565b61159461157b61154173ffffffffffffffffffffffffffffffffffffffff937f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c60002090565b6115756104f161156a60005473ffffffffffffffffffffffffffffffffffffffff9060101c1690565b966060810190610cb0565b906115a0565b73ffffffffffffffffffffffffffffffffffffffff1690565b9116036114ee57600090565b610ee1916115ad91611777565b9190916115ee565b600511156115bf57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6115f7816115b5565b806115ff5750565b611608816115b5565b6001810361166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611678816115b5565b600281036116df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b806116eb6003926115b5565b146116f257565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608490fd5b9060418151146000146117a5576117a1916020820151906060604084015193015160001a906117bb565b9091565b5050600090600290565b6040513d6000823e3d90fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116118435791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa1561183e57815173ffffffffffffffffffffffffffffffffffffffff811615611838579190565b50600190565b6117af565b50505050600090600390565b60406005549101351461186157600190565b600090565b90604051916020830152602082526040820182811067ffffffffffffffff82111761018c57604052565b906118a360209282815194859201610273565b0190565b6101fb9193929360405194859183516118c881602096878088019101610273565b83016118dc82518093878085019101610273565b016118ef82518093868085019101610273565b010380855201836101ad565b60406101fb919392938151948161191c879351809260208087019101610273565b82019060208201520360208101855201836101ad565b1561193957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4b6579206e6f7420666f756e64000000000000000000000000000000000000006044820152fd5b90815182019060209260c08185850194031261026e5760408101519160608201519360808301519267ffffffffffffffff9384811161026e5782886119de92840101610e9f565b9360a082015181811161026e5783896119f992850101610e9f565b9360c083015191821161026e578894611a2f611a2a611a2460009789611a3597611a41990101610e9f565b93611866565b611bcb565b906118a7565b60405191828092611890565b039060025afa1561183e576000611a5e611a3586938351906118fb565b039060025afa1561183e57610ee193611a8360005194820151151580611a8857611932565b611c7d565b611932565b611a9a6020820182610cb0565b9081604051918237206040805192602084019281358452828501520135606083015260608252608082019082821067ffffffffffffffff83111761018c5781604052825190209160a081019283523060c082015260e04691015260608152611b0181610191565b51902090565b60405190611b1482610170565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b908160031b9180830460081490151715610d3e57565b90611b86826101fd565b611b9360405191826101ad565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611bc182946101fd565b0190602036910137565b805115611c7457611bda611b07565b611c00611bf1611bea8451611b66565b6006900490565b835160069006611c6657611b7c565b91602083019181805101925b838310611c1a575050505090565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301611c0c565b611c6f906112c8565b611b7c565b50610ee1610d43565b92919080158015611e98575b8015611e6e575b8015611e44575b611e3b57610ee193611e30611caa612015565b91611cb36101ee565b600081526000602082015260006040820152835260208151910151611cd66101ee565b918252602082015260016040820152611cf560208401918083526120a4565b90611e21611d0b6040860193808552835161205a565b9260608601938452611e11611e01611d216101ee565b7f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c29681527f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5602082015260016040820152611d8460808a019180835287519061205a565b60a08a0152611d96815185519061205a565b60c08a0152611da8815188519061205a565b60e08a0152611db781516120a4565b90611dcc6101008b019280845288519061205a565b6101208b0152611ddf825186519061205a565b6101408b0152611df2825189519061205a565b6101608b01525190519061205a565b610180880194818652519061205a565b6101a0870152825190519061205a565b6101c08501525190519061205a565b6101e0820152611ea0565b50505050600090565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551821015611c97565b507fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551811015611c90565b508115611c89565b939290917fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255190818410801590611fb0575b611fa657611edf829161236e565b809309918309600080918193608091825b611f0857505050611f03939495506120c4565b501490565b85611f84575b888160fe1c600c8460fc1c161780611f3b575b5050611f3490600292831b921b92611fcb565b9182611ef0565b611f779397611f34976040611f6e611f5685879b989b611fba565b5151946020611f658289611fba565b51015196611fba565b5101519461219b565b9590945090928838611f21565b9294611f959194611f9b93966122b8565b916122b8565b949193909392611f0e565b5060009450505050565b5081811015611ed1565b9060108110156113385760051b0190565b8015610d3e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b6040519061200382610170565b60006040838281528260208201520152565b6040519061020080830183811067ffffffffffffffff82111761018c576040528260005b82811061204557505050565b602090612050611ff6565b8184015201612039565b61208791612066611ff6565b5081519160406020820151910151825191604060208501519401519461219b565b906040519261209584610170565b83526020830152604082015290565b612087906120b0611ff6565b5080519060406020820151910151916122b8565b929190811561218f578160007fffffffff00000001000000000000000000000000ffffffffffffffffffffffff8481809611612185575b505060405191602083526020808401526020604084015260608301527fffffffff00000001000000000000000000000000fffffffffffffffffffffffd60808301528360a083015260208260c08160057ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1561013e575082905181808280098097099509900990565b06915083386120fb565b50509050600090600090565b9395939190816121ad57505050929190565b909291949586156122ae577fffffffff00000001000000000000000000000000ffffffffffffffffffffffff9586858196958280838199099b818d999781868180808f9d888009809d099c8d99099c81878d0990099c0990099308958181106122a7575b03958280808960020980099281808481878d09938181106122a0575b036002099481868009980996828089600209830890818110612299575b039b8c936002090994818110612292575b03900997828910612289575b859182910892800995828710612280575b960394030990565b95840195612278565b97850197612267565b830161225b565b830161224a565b820161222d565b8301612211565b5094505091929190565b9290917fffffffff00000001000000000000000000000000ffffffffffffffffffffffff809181858009958280808080808c87096004099a800960080992818080808089800980097fffffffff00000001000000000000000000000000fffffffffffffffffffffffc0992800960030908818960020982828009818110612367575b038981809b10612360575b039009818110612359575b03940960020990565b8301612350565b8301612345565b830161233a565b7fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255180821161240f575b60405191602083526020808401526020604084015260608301527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f608083015260a082015260208160c08160057ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1561026e575190565b8091069061239756fea164736f6c6343000813000a",
              "opcodes": "PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x7E JUMPI PUSH2 0x24EC DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x68 JUMPI DUP3 SWAP2 PUSH2 0xA36 DUP4 CODECOPY SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x9B2 SWAP1 DUP2 PUSH2 0x84 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH1 0xE6 ADD MSTORE DUP2 DUP2 PUSH2 0x3F3 ADD MSTORE PUSH2 0x526 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11464FBE EQ PUSH2 0x9C JUMPI POP DUP1 PUSH4 0xC8CB55AE EQ PUSH2 0x7F JUMPI PUSH4 0xCAC8CFC2 EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7C JUMPI PUSH1 0x20 PUSH2 0x5E PUSH2 0x55 CALLDATASIZE PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x450 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7C JUMPI PUSH1 0x20 PUSH2 0x5E PUSH2 0x93 CALLDATASIZE PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x31A JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x10A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x10A JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD SLT PUSH2 0x253 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x253 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x253 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x22C PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x159 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x253 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x26B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25B JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x2B7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x258 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 PUSH2 0x2EA SWAP4 PUSH1 0x20 DUP5 MSTORE DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH1 0x60 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2EA SWAP5 SWAP4 AND DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP3 DUP1 SWAP3 PUSH2 0x342 SWAP3 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x32E DUP8 PUSH2 0x10E JUMP JUMPDEST DUP1 DUP8 MSTORE DUP2 PUSH1 0x20 DUP9 ADD MSTORE DUP3 PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x450 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x434 JUMPI POP PUSH2 0x3B1 PUSH2 0x385 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0x759A68C000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x2BE JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP3 DUP4 DUP3 ADD SWAP4 DUP3 DUP6 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT OR PUSH2 0x12A JUMPI DUP3 SWAP2 PUSH2 0x419 SWAP2 PUSH2 0x5A3 DUP5 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 PUSH32 0x0 AND SWAP1 PUSH2 0x2ED JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE2 DUP1 ISZERO PUSH2 0x428 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP3 PUSH1 0xB SWAP3 SWAP2 PUSH1 0x55 SWAP5 PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP2 PUSH2 0x467 DUP4 PUSH2 0x10E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD MSTORE DUP5 DUP3 ADD MSTORE PUSH2 0x57E PUSH2 0x58A DUP4 PUSH2 0x403 SWAP4 PUSH2 0x4D0 DUP9 MLOAD SWAP2 PUSH2 0x491 DUP5 DUP9 ADD DUP5 PUSH2 0x159 JUMP JUMPDEST DUP7 DUP4 MSTORE DUP4 DUP4 ADD SWAP7 PUSH2 0x5A3 DUP9 CODECOPY DUP10 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x759A68C000000000000000000000000000000000000000000000000000000000 DUP7 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x2BE JUMP JUMPDEST SUB PUSH2 0x501 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 DUP3 DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x159 JUMP JUMPDEST PUSH2 0x558 DUP11 MLOAD SWAP2 DUP3 PUSH2 0x54C DUP8 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP8 PUSH2 0x2ED JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x159 JUMP JUMPDEST DUP10 MLOAD SWAP6 DUP7 SWAP4 PUSH2 0x56F DUP7 DUP7 ADD SWAP10 DUP11 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x258 JUMP JUMPDEST DUP5 ADD SWAP2 MLOAD DUP1 SWAP4 DUP7 DUP5 ADD SWAP1 PUSH2 0x258 JUMP JUMPDEST ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x159 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP4 MLOAD SWAP4 DUP5 ADD MSTORE DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP1 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH2 0x403 SWAP1 DUP2 CODESIZE SUB DUP1 PUSH2 0x16 DUP2 PUSH2 0x218 JUMP JUMPDEST SWAP4 DUP5 CODECOPY DUP3 ADD SWAP2 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x213 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x213 JUMPI PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP2 SWAP4 SWAP2 DUP6 DUP3 GT PUSH2 0x213 JUMPI ADD DUP7 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x213 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x71 PUSH2 0x6C DUP4 PUSH2 0x253 JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE DUP6 DUP4 ADD SWAP9 DUP7 DUP3 DUP5 ADD ADD GT PUSH2 0x213 JUMPI DUP9 DUP7 PUSH2 0x8F SWAP4 ADD PUSH2 0x26E JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x1B9 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x0 SWAP3 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP5 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B2 JUMPI JUMPDEST PUSH2 0x10B JUMPI JUMPDEST DUP6 MLOAD PUSH1 0xBE SWAP1 DUP2 PUSH2 0x345 DUP3 CODECOPY RETURN JUMPDEST DUP6 MLOAD SWAP5 PUSH1 0x60 DUP7 ADD SWAP1 DUP2 GT DUP7 DUP3 LT OR PUSH2 0x19E JUMPI DUP7 SWAP8 DUP5 SWAP3 DUP4 SWAP3 PUSH2 0x188 SWAP10 MSTORE PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP11 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x194 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x17A PUSH2 0x6C DUP4 PUSH2 0x253 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x291 JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xFE JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x291 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP3 PUSH2 0xF9 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x23D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x281 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x271 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2F3 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2A5 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2AE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x306 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x336 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x6F JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x34 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2425 SWAP1 DUP2 PUSH2 0xC7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x25 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x759A68C0 EQ PUSH2 0x8E JUMPI POP DUP1 PUSH4 0x8FB41072 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB627E20F EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xBE9EF843 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xF0F05CEF EQ PUSH2 0x75 JUMPI PUSH4 0xFD5C8D72 SUB PUSH2 0xE JUMPI PUSH2 0x55A JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x3A8 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST CALLVALUE PUSH2 0x13E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 DUP2 CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x13A JUMPI PUSH1 0x60 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x136 JUMPI PUSH2 0xE8 PUSH1 0xE0 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x80 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0xA0 MSTORE PUSH1 0x44 DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x136 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x124 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 PUSH1 0x4 DUP3 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x237 JUMP JUMPDEST PUSH1 0xC0 MSTORE PUSH2 0x12F PUSH2 0x6D1 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FB DUP3 PUSH2 0x170 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x243 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP2 PUSH2 0x251 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1AD JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x26E JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x286 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x276 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x60 PUSH1 0x40 DUP1 MLOAD PUSH2 0x2D4 DUP2 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x40 PUSH1 0xA0 PUSH2 0x2ED PUSH2 0x5CD JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE DUP1 MLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD MSTORE PUSH2 0x34A DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0x20 DUP9 DUP9 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD PUSH1 0x10 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP1 PUSH1 0x20 DUP3 DUP3 ADD SLT PUSH2 0x26E JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x26E JUMPI DUP3 PUSH1 0x80 SWAP3 SUB ADD SLT PUSH2 0x26E JUMPI PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH2 0x483 CALLDATASIZE PUSH2 0x425 JUMP JUMPDEST PUSH2 0x495 PUSH2 0x48F DUP3 PUSH2 0x14A6 JUMP JUMPDEST ISZERO PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x4A7 PUSH2 0x4A1 DUP3 PUSH2 0x184F JUMP JUMPDEST ISZERO PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x3 DUP2 CALLDATALOAD DUP1 ISZERO PUSH2 0x53D JUMPI JUMPDEST PUSH1 0x1 DUP2 EQ PUSH2 0x520 JUMPI JUMPDEST PUSH1 0x2 DUP2 EQ PUSH2 0x503 JUMPI JUMPDEST EQ PUSH2 0x4DD JUMPI JUMPDEST PUSH2 0x19 PUSH2 0x4D8 PUSH1 0x5 SLOAD PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0x4F1 DUP3 PUSH1 0x20 PUSH2 0x4FD SWAP5 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x237 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST CODESIZE PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x51B PUSH2 0x516 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST PUSH2 0x538 PUSH2 0x533 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x133D JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x555 PUSH2 0x550 PUSH2 0x4F1 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x104C JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST CALLVALUE PUSH2 0x26E JUMPI PUSH1 0x20 PUSH2 0x572 PUSH2 0x56D CALLDATASIZE PUSH2 0x425 JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x5C3 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x594 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5DA DUP3 PUSH2 0x170 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x2 SLOAD PUSH1 0x20 SWAP1 DUP2 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x602 DUP3 PUSH2 0x57A JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP2 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x694 JUMPI POP PUSH1 0x1 EQ PUSH2 0x62F JUMPI JUMPDEST POP POP POP PUSH1 0x40 SWAP3 SWAP2 PUSH2 0x62B SWAP2 SUB DUP5 PUSH2 0x1AD JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP1 SWAP5 SWAP4 SWAP3 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x67C JUMPI POP SWAP4 SWAP5 POP SWAP2 SWAP3 POP SWAP1 DUP3 ADD ADD DUP2 PUSH2 0x62B PUSH1 0x40 PUSH2 0x619 JUMP JUMPDEST DUP7 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP6 DUP7 ADD SWAP6 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x65F JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP5 DUP8 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP1 POP DUP2 PUSH2 0x62B PUSH1 0x40 PUSH2 0x619 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO DUP1 SWAP2 DUP2 SWAP3 PUSH2 0x86C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x84C JUMPI JUMPDEST POP ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH2 0x723 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x792 JUMPI JUMPDEST PUSH2 0x730 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x736 JUMPI JUMP JUMPDEST PUSH2 0x763 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP DUP2 PUSH2 0x85E JUMPI JUMPDEST POP CODESIZE PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP PUSH1 0xFF AND EQ CODESIZE PUSH2 0x857 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF DUP3 AND LT SWAP2 POP PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x80 MLOAD DUP2 SSTORE PUSH1 0xA0 MLOAD PUSH1 0x2 SSTORE PUSH1 0xC0 MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x18C JUMPI PUSH2 0x8DB DUP4 PUSH2 0x8D6 PUSH1 0x3 SLOAD PUSH2 0x57A JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x954 JUMPI POP PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP3 PUSH2 0x929 JUMPI JUMPDEST POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CODESIZE PUSH2 0x8F6 JUMP JUMPDEST SWAP2 SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 SWAP6 SWAP7 AND PUSH2 0x9A8 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0xA00 JUMPI POP POP POP LT PUSH2 0x9C9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x9BE JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA26 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0xA81 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0xA76 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA6A JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0xA61 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x40 PUSH1 0x20 SWAP3 DUP4 DUP2 ADD MLOAD PUSH1 0x2 SSTORE ADD MLOAD SWAP2 DUP3 MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x18C JUMPI PUSH2 0xAC2 DUP5 PUSH2 0x8D6 PUSH1 0x3 SLOAD PUSH2 0x57A JUMP JUMPDEST DUP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0xB0C JUMPI POP PUSH1 0x0 SWAP2 DUP5 SWAP2 DUP3 PUSH2 0x929 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP3 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 SWAP6 SWAP7 AND PUSH2 0xB60 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0xB80 JUMPI POP POP POP LT PUSH2 0x9C9 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0xB65 JUMP JUMPDEST ISZERO PUSH2 0xBA1 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A205369676E617475726520766572696669636174696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6661696C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0xC2C JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A204E6F6E636520766572696669636174696F6E206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x26E JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x26E JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x26E JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD3E JUMPI JUMP JUMPDEST PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF PUSH1 0x4 SLOAD AND ISZERO ISZERO SUB PUSH2 0xE1B JUMPI PUSH1 0x14 PUSH2 0xDEE SWAP2 ADD MLOAD PUSH2 0xDA6 PUSH2 0xD89 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD9C PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xA8B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH22 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 PUSH1 0x0 SLOAD SWAP3 PUSH1 0x10 SHL AND SWAP2 AND OR PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0x1FB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A20416C72656164792061646472657373206F776E65722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E61626C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP1 MLOAD PUSH2 0xEB5 DUP2 PUSH2 0x1FD JUMP JUMPDEST SWAP3 PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x26E JUMPI PUSH2 0xEE1 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x4 SLOAD AND PUSH2 0xFAA JUMPI DUP1 MLOAD DUP2 ADD SWAP1 PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 DUP2 ADD MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x26E JUMPI PUSH1 0x20 PUSH2 0xF32 SWAP3 DUP2 PUSH2 0xF7A SWAP8 ADD SWAP3 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP1 PUSH2 0xF3B PUSH2 0x1EE JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xF75 PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xA8B JUMP JUMPDEST PUSH2 0x1FB PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E743A20416C726561647920706173736B6579206F776E65722065 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E61626C65640000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x26E JUMPI JUMP JUMPDEST DUP1 MLOAD DUP2 ADD PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH2 0x1069 DUP3 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 PUSH1 0x60 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x26E JUMPI PUSH2 0x1FB SWAP5 PUSH1 0x20 PUSH2 0x10AD SWAP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 ADD SWAP3 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP3 AND PUSH2 0x1486 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x18C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP1 MLOAD SWAP2 PUSH2 0x10E3 DUP4 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 PUSH2 0x10F1 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x26E JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x111B JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x110D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP2 MLOAD SWAP1 PUSH2 0x1142 DUP3 PUSH2 0x10B4 JUMP JUMPDEST SWAP3 PUSH2 0x1150 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1AD JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x26E JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x117E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x26E JUMPI DUP7 SWAP2 PUSH2 0x11A0 DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0xE9F JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x116E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x60 DUP3 DUP5 SUB SLT PUSH2 0x26E JUMPI DUP2 MLOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP2 GT PUSH2 0x26E JUMPI DUP2 ADD SWAP4 DUP1 PUSH1 0x1F DUP7 ADD SLT ISZERO PUSH2 0x26E JUMPI DUP5 MLOAD PUSH2 0x11E4 DUP2 PUSH2 0x10B4 JUMP JUMPDEST SWAP1 PUSH2 0x11F2 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1AD JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP1 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x26E JUMPI DUP9 DUP1 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x124A JUMPI POP POP POP POP SWAP5 DUP3 ADD MLOAD DUP5 DUP2 GT PUSH2 0x26E JUMPI DUP2 PUSH2 0x1233 SWAP2 DUP5 ADD PUSH2 0x10CC JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x26E JUMPI PUSH2 0xEE1 SWAP3 ADD PUSH2 0x112A JUMP JUMPDEST DUP3 DUP1 SWAP2 DUP4 MLOAD PUSH2 0x1258 DUP2 PUSH2 0x102E JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1211 JUMP JUMPDEST ISZERO PUSH2 0x126A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77726F6E67206172726179206C656E6774687300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD3E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x1350 SWAP1 PUSH1 0x20 DUP1 DUP3 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x136A DUP3 MLOAD DUP6 MLOAD DUP1 SWAP2 EQ SWAP1 DUP2 PUSH2 0x1416 JUMPI JUMPDEST POP PUSH2 0x1263 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x13CC JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x13C6 JUMPI DUP1 PUSH2 0x13BC PUSH2 0x13AB PUSH2 0x1391 PUSH2 0x13C1 SWAP5 DUP7 PUSH2 0x1324 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x13B5 DUP4 DUP9 PUSH2 0x1324 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x1374 JUMP JUMPDEST POP POP SWAP1 POP JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x140F JUMPI DUP1 PUSH2 0x13BC PUSH2 0x13EE PUSH2 0x1391 PUSH2 0x140A SWAP5 DUP7 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x13F8 DUP4 DUP10 PUSH2 0x1324 JUMP JUMPDEST MLOAD PUSH2 0x1403 DUP5 DUP9 PUSH2 0x1324 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x1486 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST DUP4 MLOAD DUP1 ISZERO SWAP3 POP DUP3 ISZERO PUSH2 0x142B JUMPI JUMPDEST POP POP CODESIZE PUSH2 0x1364 JUMP JUMPDEST EQ SWAP1 POP CODESIZE DUP1 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x147E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1455 DUP3 PUSH2 0x1FD JUMP JUMPDEST SWAP2 PUSH2 0x1463 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1AD JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1476 JUMPI POP JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD REVERT JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x147E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1455 DUP3 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x14AF DUP2 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14E1 SWAP1 PUSH2 0x14D2 PUSH2 0x4F1 DUP5 PUSH1 0x60 PUSH2 0x14E5 SWAP7 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH2 0x14DB PUSH2 0x5CD JUMP JUMPDEST SWAP2 PUSH2 0x1997 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x14EE JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x1594 PUSH2 0x157B PUSH2 0x1541 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1575 PUSH2 0x4F1 PUSH2 0x156A PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST SWAP7 PUSH1 0x60 DUP2 ADD SWAP1 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP2 AND SUB PUSH2 0x14EE JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 PUSH2 0x15AD SWAP2 PUSH2 0x1777 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x15EE JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x15BF JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F7 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP1 PUSH2 0x15FF JUMPI POP JUMP JUMPDEST PUSH2 0x1608 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x166F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1678 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x16DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x16EB PUSH1 0x3 SWAP3 PUSH2 0x15B5 JUMP JUMPDEST EQ PUSH2 0x16F2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x17A5 JUMPI PUSH2 0x17A1 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x17BB JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT PUSH2 0x1843 JUMPI SWAP2 PUSH1 0x80 SWAP5 SWAP4 SWAP2 PUSH1 0xFF PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x1838 JUMPI SWAP2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x17AF JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x5 SLOAD SWAP2 ADD CALLDATALOAD EQ PUSH2 0x1861 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x18A3 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x273 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1FB SWAP2 SWAP4 SWAP3 SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP2 DUP4 MLOAD PUSH2 0x18C8 DUP2 PUSH1 0x20 SWAP7 DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST DUP4 ADD PUSH2 0x18DC DUP3 MLOAD DUP1 SWAP4 DUP8 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD PUSH2 0x18EF DUP3 MLOAD DUP1 SWAP4 DUP7 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST ADD SUB DUP1 DUP6 MSTORE ADD DUP4 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 PUSH2 0x1FB SWAP2 SWAP4 SWAP3 SWAP4 DUP2 MLOAD SWAP5 DUP2 PUSH2 0x191C DUP8 SWAP4 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP8 ADD SWAP2 ADD PUSH2 0x273 JUMP JUMPDEST DUP3 ADD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE SUB PUSH1 0x20 DUP2 ADD DUP6 MSTORE ADD DUP4 PUSH2 0x1AD JUMP JUMPDEST ISZERO PUSH2 0x1939 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B6579206E6F7420666F756E6400000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP3 ADD SWAP1 PUSH1 0x20 SWAP3 PUSH1 0xC0 DUP2 DUP6 DUP6 ADD SWAP5 SUB SLT PUSH2 0x26E JUMPI PUSH1 0x40 DUP2 ADD MLOAD SWAP2 PUSH1 0x60 DUP3 ADD MLOAD SWAP4 PUSH1 0x80 DUP4 ADD MLOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP2 GT PUSH2 0x26E JUMPI DUP3 DUP9 PUSH2 0x19DE SWAP3 DUP5 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH1 0xA0 DUP3 ADD MLOAD DUP2 DUP2 GT PUSH2 0x26E JUMPI DUP4 DUP10 PUSH2 0x19F9 SWAP3 DUP6 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP4 ADD MLOAD SWAP2 DUP3 GT PUSH2 0x26E JUMPI DUP9 SWAP5 PUSH2 0x1A2F PUSH2 0x1A2A PUSH2 0x1A24 PUSH1 0x0 SWAP8 DUP10 PUSH2 0x1A35 SWAP8 PUSH2 0x1A41 SWAP10 ADD ADD PUSH2 0xE9F JUMP JUMPDEST SWAP4 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x1BCB JUMP JUMPDEST SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH2 0x1890 JUMP JUMPDEST SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI PUSH1 0x0 PUSH2 0x1A5E PUSH2 0x1A35 DUP7 SWAP4 DUP4 MLOAD SWAP1 PUSH2 0x18FB JUMP JUMPDEST SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x183E JUMPI PUSH2 0xEE1 SWAP4 PUSH2 0x1A83 PUSH1 0x0 MLOAD SWAP5 DUP3 ADD MLOAD ISZERO ISZERO DUP1 PUSH2 0x1A88 JUMPI PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1A9A PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x40 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP3 DUP2 CALLDATALOAD DUP5 MSTORE DUP3 DUP6 ADD MSTORE ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x18C JUMPI DUP2 PUSH1 0x40 MSTORE DUP3 MLOAD SWAP1 KECCAK256 SWAP2 PUSH1 0xA0 DUP2 ADD SWAP3 DUP4 MSTORE ADDRESS PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 CHAINID SWAP2 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x1B01 DUP2 PUSH2 0x191 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1B14 DUP3 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392D5F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x3 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x8 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xD3E JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x1B86 DUP3 PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x1B93 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1AD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1BC1 DUP3 SWAP5 PUSH2 0x1FD JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1C74 JUMPI PUSH2 0x1BDA PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x1C00 PUSH2 0x1BF1 PUSH2 0x1BEA DUP5 MLOAD PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x6 SWAP1 DIV SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x6 SWAP1 MOD PUSH2 0x1C66 JUMPI PUSH2 0x1B7C JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP2 DUP1 MLOAD ADD SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C1A JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP1 PUSH1 0x3 DUP1 SWAP5 ADD SWAP4 DUP5 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP6 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP7 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD PUSH1 0x2 DUP7 ADD MSTORE8 AND DUP6 ADD ADD MLOAD SWAP1 DUP3 ADD MSTORE8 ADD PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x1C6F SWAP1 PUSH2 0x12C8 JUMP JUMPDEST PUSH2 0x1B7C JUMP JUMPDEST POP PUSH2 0xEE1 PUSH2 0xD43 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP1 ISZERO DUP1 ISZERO PUSH2 0x1E98 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E6E JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E44 JUMPI JUMPDEST PUSH2 0x1E3B JUMPI PUSH2 0xEE1 SWAP4 PUSH2 0x1E30 PUSH2 0x1CAA PUSH2 0x2015 JUMP JUMPDEST SWAP2 PUSH2 0x1CB3 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH2 0x1CD6 PUSH2 0x1EE JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CF5 PUSH1 0x20 DUP5 ADD SWAP2 DUP1 DUP4 MSTORE PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH2 0x1E21 PUSH2 0x1D0B PUSH1 0x40 DUP7 ADD SWAP4 DUP1 DUP6 MSTORE DUP4 MLOAD PUSH2 0x205A JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD SWAP4 DUP5 MSTORE PUSH2 0x1E11 PUSH2 0x1E01 PUSH2 0x1D21 PUSH2 0x1EE JUMP JUMPDEST PUSH32 0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296 DUP2 MSTORE PUSH32 0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1D84 PUSH1 0x80 DUP11 ADD SWAP2 DUP1 DUP4 MSTORE DUP8 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xA0 DUP11 ADD MSTORE PUSH2 0x1D96 DUP2 MLOAD DUP6 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MSTORE PUSH2 0x1DA8 DUP2 MLOAD DUP9 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD MSTORE PUSH2 0x1DB7 DUP2 MLOAD PUSH2 0x20A4 JUMP JUMPDEST SWAP1 PUSH2 0x1DCC PUSH2 0x100 DUP12 ADD SWAP3 DUP1 DUP5 MSTORE DUP9 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x120 DUP12 ADD MSTORE PUSH2 0x1DDF DUP3 MLOAD DUP7 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x140 DUP12 ADD MSTORE PUSH2 0x1DF2 DUP3 MLOAD DUP10 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x160 DUP12 ADD MSTORE MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x180 DUP9 ADD SWAP5 DUP2 DUP7 MSTORE MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1A0 DUP8 ADD MSTORE DUP3 MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1C0 DUP6 ADD MSTORE MLOAD SWAP1 MLOAD SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x1E0 DUP3 ADD MSTORE PUSH2 0x1EA0 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP3 LT ISZERO PUSH2 0x1C97 JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP2 LT ISZERO PUSH2 0x1C90 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x1C89 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 SWAP1 DUP2 DUP5 LT DUP1 ISZERO SWAP1 PUSH2 0x1FB0 JUMPI JUMPDEST PUSH2 0x1FA6 JUMPI PUSH2 0x1EDF DUP3 SWAP2 PUSH2 0x236E JUMP JUMPDEST DUP1 SWAP4 MULMOD SWAP2 DUP4 MULMOD PUSH1 0x0 DUP1 SWAP2 DUP2 SWAP4 PUSH1 0x80 SWAP2 DUP3 JUMPDEST PUSH2 0x1F08 JUMPI POP POP POP PUSH2 0x1F03 SWAP4 SWAP5 SWAP6 POP PUSH2 0x20C4 JUMP JUMPDEST POP EQ SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x1F84 JUMPI JUMPDEST DUP9 DUP2 PUSH1 0xFE SHR PUSH1 0xC DUP5 PUSH1 0xFC SHR AND OR DUP1 PUSH2 0x1F3B JUMPI JUMPDEST POP POP PUSH2 0x1F34 SWAP1 PUSH1 0x2 SWAP3 DUP4 SHL SWAP3 SHL SWAP3 PUSH2 0x1FCB JUMP JUMPDEST SWAP2 DUP3 PUSH2 0x1EF0 JUMP JUMPDEST PUSH2 0x1F77 SWAP4 SWAP8 PUSH2 0x1F34 SWAP8 PUSH1 0x40 PUSH2 0x1F6E PUSH2 0x1F56 DUP6 DUP8 SWAP12 SWAP9 SWAP12 PUSH2 0x1FBA JUMP JUMPDEST MLOAD MLOAD SWAP5 PUSH1 0x20 PUSH2 0x1F65 DUP3 DUP10 PUSH2 0x1FBA JUMP JUMPDEST MLOAD ADD MLOAD SWAP7 PUSH2 0x1FBA JUMP JUMPDEST MLOAD ADD MLOAD SWAP5 PUSH2 0x219B JUMP JUMPDEST SWAP6 SWAP1 SWAP5 POP SWAP1 SWAP3 DUP9 CODESIZE PUSH2 0x1F21 JUMP JUMPDEST SWAP3 SWAP5 PUSH2 0x1F95 SWAP2 SWAP5 PUSH2 0x1F9B SWAP4 SWAP7 PUSH2 0x22B8 JUMP JUMPDEST SWAP2 PUSH2 0x22B8 JUMP JUMPDEST SWAP5 SWAP2 SWAP4 SWAP1 SWAP4 SWAP3 PUSH2 0x1F0E JUMP JUMPDEST POP PUSH1 0x0 SWAP5 POP POP POP POP JUMP JUMPDEST POP DUP2 DUP2 LT ISZERO PUSH2 0x1ED1 JUMP JUMPDEST SWAP1 PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1338 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD3E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2003 DUP3 PUSH2 0x170 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x200 DUP1 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x18C JUMPI PUSH1 0x40 MSTORE DUP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2045 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x2050 PUSH2 0x1FF6 JUMP JUMPDEST DUP2 DUP5 ADD MSTORE ADD PUSH2 0x2039 JUMP JUMPDEST PUSH2 0x2087 SWAP2 PUSH2 0x2066 PUSH2 0x1FF6 JUMP JUMPDEST POP DUP2 MLOAD SWAP2 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD DUP3 MLOAD SWAP2 PUSH1 0x40 PUSH1 0x20 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP5 PUSH2 0x219B JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2095 DUP5 PUSH2 0x170 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x2087 SWAP1 PUSH2 0x20B0 PUSH2 0x1FF6 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP2 PUSH2 0x22B8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP2 ISZERO PUSH2 0x218F JUMPI DUP2 PUSH1 0x0 PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 DUP1 SWAP7 GT PUSH2 0x2185 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFD PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0xC0 DUP2 PUSH1 0x5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF STATICCALL ISZERO PUSH2 0x13E JUMPI POP DUP3 SWAP1 MLOAD DUP2 DUP1 DUP3 DUP1 MULMOD DUP1 SWAP8 MULMOD SWAP6 MULMOD SWAP1 MULMOD SWAP1 JUMP JUMPDEST MOD SWAP2 POP DUP4 CODESIZE PUSH2 0x20FB JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP4 SWAP6 SWAP4 SWAP2 SWAP1 DUP2 PUSH2 0x21AD JUMPI POP POP POP SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP5 SWAP6 DUP7 ISZERO PUSH2 0x22AE JUMPI PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 DUP6 DUP2 SWAP7 SWAP6 DUP3 DUP1 DUP4 DUP2 SWAP10 MULMOD SWAP12 DUP2 DUP14 SWAP10 SWAP8 DUP2 DUP7 DUP2 DUP1 DUP1 DUP16 SWAP14 DUP9 DUP1 MULMOD DUP1 SWAP14 MULMOD SWAP13 DUP14 SWAP10 MULMOD SWAP13 DUP2 DUP8 DUP14 MULMOD SWAP1 MULMOD SWAP13 MULMOD SWAP1 MULMOD SWAP4 ADDMOD SWAP6 DUP2 DUP2 LT PUSH2 0x22A7 JUMPI JUMPDEST SUB SWAP6 DUP3 DUP1 DUP1 DUP10 PUSH1 0x2 MULMOD DUP1 MULMOD SWAP3 DUP2 DUP1 DUP5 DUP2 DUP8 DUP14 MULMOD SWAP4 DUP2 DUP2 LT PUSH2 0x22A0 JUMPI JUMPDEST SUB PUSH1 0x2 MULMOD SWAP5 DUP2 DUP7 DUP1 MULMOD SWAP9 MULMOD SWAP7 DUP3 DUP1 DUP10 PUSH1 0x2 MULMOD DUP4 ADDMOD SWAP1 DUP2 DUP2 LT PUSH2 0x2299 JUMPI JUMPDEST SUB SWAP12 DUP13 SWAP4 PUSH1 0x2 MULMOD MULMOD SWAP5 DUP2 DUP2 LT PUSH2 0x2292 JUMPI JUMPDEST SUB SWAP1 MULMOD SWAP8 DUP3 DUP10 LT PUSH2 0x2289 JUMPI JUMPDEST DUP6 SWAP2 DUP3 SWAP2 ADDMOD SWAP3 DUP1 MULMOD SWAP6 DUP3 DUP8 LT PUSH2 0x2280 JUMPI JUMPDEST SWAP7 SUB SWAP5 SUB MULMOD SWAP1 JUMP JUMPDEST SWAP6 DUP5 ADD SWAP6 PUSH2 0x2278 JUMP JUMPDEST SWAP8 DUP6 ADD SWAP8 PUSH2 0x2267 JUMP JUMPDEST DUP4 ADD PUSH2 0x225B JUMP JUMPDEST DUP4 ADD PUSH2 0x224A JUMP JUMPDEST DUP3 ADD PUSH2 0x222D JUMP JUMPDEST DUP4 ADD PUSH2 0x2211 JUMP JUMPDEST POP SWAP5 POP POP SWAP2 SWAP3 SWAP2 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 DUP2 DUP6 DUP1 MULMOD SWAP6 DUP3 DUP1 DUP1 DUP1 DUP1 DUP1 DUP13 DUP8 MULMOD PUSH1 0x4 MULMOD SWAP11 DUP1 MULMOD PUSH1 0x8 MULMOD SWAP3 DUP2 DUP1 DUP1 DUP1 DUP1 DUP10 DUP1 MULMOD DUP1 MULMOD PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC MULMOD SWAP3 DUP1 MULMOD PUSH1 0x3 MULMOD ADDMOD DUP2 DUP10 PUSH1 0x2 MULMOD DUP3 DUP3 DUP1 MULMOD DUP2 DUP2 LT PUSH2 0x2367 JUMPI JUMPDEST SUB DUP10 DUP2 DUP1 SWAP12 LT PUSH2 0x2360 JUMPI JUMPDEST SUB SWAP1 MULMOD DUP2 DUP2 LT PUSH2 0x2359 JUMPI JUMPDEST SUB SWAP5 MULMOD PUSH1 0x2 MULMOD SWAP1 JUMP JUMPDEST DUP4 ADD PUSH2 0x2350 JUMP JUMPDEST DUP4 ADD PUSH2 0x2345 JUMP JUMPDEST DUP4 ADD PUSH2 0x233A JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 DUP1 DUP3 GT PUSH2 0x240F JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC63254F PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0xC0 DUP2 PUSH1 0x5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF STATICCALL ISZERO PUSH2 0x26E JUMPI MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP2 MOD SWAP1 PUSH2 0x2397 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "237:2027:15:-:0;;;;;;;368:13;;;;-1:-1:-1;;;;;368:13:15;;;;;;;;;;;;;;;;;;;;;344:37;;237:2027;;;;;;;;344:37;237:2027;;;;;;;;;;;;;;;;368:13;237:2027;;;368:13;237:2027;;;;;368:13;237:2027;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_uint256t_uint256t_stringt_uint256": {
                  "entryPoint": 410,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 4
                },
                "abi_encode_address_bytes": {
                  "entryPoint": 749,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 635,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_PassKeyId": {
                  "entryPoint": 702,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 600,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 345,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_1160": {
                  "entryPoint": 270,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_createAccount": {
                  "entryPoint": 794,
                  "id": 3453,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_getAddress": {
                  "entryPoint": 1104,
                  "id": 3508,
                  "parameterSlots": 4,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "3362": [
                  { "length": 32, "start": 230 },
                  { "length": 32, "start": 1011 },
                  { "length": 32, "start": 1318 }
                ]
              },
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b600090813560e01c90816311464fbe1461009c57508063c8cb55ae1461007f5763cac8cfc21461004257600080fd5b3461007c57602061005e6100553661019a565b92919091610450565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b80fd5b503461007c57602061005e6100933661019a565b9291909161031a565b90503461010a57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010a5760209073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b6060810190811067ffffffffffffffff82111761012a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761012a57604052565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261025357600435916024359167ffffffffffffffff604435818111610253578260238201121561025357806004013591821161012a576040519261022c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610159565b82845260248383010111610253578160009260246020930183860137830101529060643590565b600080fd5b60005b83811061026b5750506000910152565b818101518382015260200161025b565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936102b781518092818752878088019101610258565b0116010190565b608060406102ea936020845280516020850152602081015182850152015191606080820152019061027b565b90565b60409073ffffffffffffffffffffffffffffffffffffffff6102ea9493168152816020820152019061027b565b928092610342926040519561032e8761010e565b808752816020880152826040880152610450565b803b61043457506103b1610385926040519384917f759a68c0000000000000000000000000000000000000000000000000000000006020840152602483016102be565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101845283610159565b604051610403928382019382851067ffffffffffffffff86111761012a578291610419916105a3843973ffffffffffffffffffffffffffffffffffffffff95867f000000000000000000000000000000000000000000000000000000000000000016906102ed565b03906000f58015610428571690565b6040513d6000823e3d90fd5b73ffffffffffffffffffffffffffffffffffffffff1692915050565b92600b92916055946040938451916104678361010e565b8252602092838301528482015261057e61058a83610403936104d088519161049184880184610159565b868352838301966105a3883989519182917f759a68c00000000000000000000000000000000000000000000000000000000086840152602483016102be565b036105017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe091828101845283610159565b6105588a51918261054c8782019573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016876102ed565b03908101835282610159565b895195869361056f868601998a9251928391610258565b84019151809386840190610258565b01038084520182610159565b5190208351938401528201523081520160ff8153209056fe604060808152610403908138038061001681610218565b93843982019181818403126102135780516001600160a01b038116808203610213576020838101516001600160401b0394919391858211610213570186601f820112156102135780519061007161006c83610253565b610218565b918083528583019886828401011161021357888661008f930161026e565b813b156101b9577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916841790556000927fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28051158015906101b2575b61010b575b855160be90816103458239f35b855194606086019081118682101761019e578697849283926101889952602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b8a8901525190845af4913d15610194573d9061017a61006c83610253565b91825281943d92013e610291565b508038808080806100fe565b5060609250610291565b634e487b7160e01b84526041600452602484fd5b50826100f9565b855162461bcd60e51b815260048101859052602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761023d57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161023d57601f01601f191660200190565b60005b8381106102815750506000910152565b8181015183820152602001610271565b919290156102f357508151156102a5575090565b3b156102ae5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156103065750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610336815180928160248601526020868601910161026e565b601f01601f19168101030190fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea164736f6c6343000813000aa164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x11464FBE EQ PUSH2 0x9C JUMPI POP DUP1 PUSH4 0xC8CB55AE EQ PUSH2 0x7F JUMPI PUSH4 0xCAC8CFC2 EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7C JUMPI PUSH1 0x20 PUSH2 0x5E PUSH2 0x55 CALLDATASIZE PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x450 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7C JUMPI PUSH1 0x20 PUSH2 0x5E PUSH2 0x93 CALLDATASIZE PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x31A JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x10A JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x10A JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD SLT PUSH2 0x253 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x253 JUMPI DUP3 PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x253 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x22C PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x159 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x253 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x26B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25B JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x2B7 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x258 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 PUSH2 0x2EA SWAP4 PUSH1 0x20 DUP5 MSTORE DUP1 MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD SWAP2 PUSH1 0x60 DUP1 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2EA SWAP5 SWAP4 AND DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP3 DUP1 SWAP3 PUSH2 0x342 SWAP3 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x32E DUP8 PUSH2 0x10E JUMP JUMPDEST DUP1 DUP8 MSTORE DUP2 PUSH1 0x20 DUP9 ADD MSTORE DUP3 PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x450 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x434 JUMPI POP PUSH2 0x3B1 PUSH2 0x385 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH32 0x759A68C000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x2BE JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP3 DUP4 DUP3 ADD SWAP4 DUP3 DUP6 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT OR PUSH2 0x12A JUMPI DUP3 SWAP2 PUSH2 0x419 SWAP2 PUSH2 0x5A3 DUP5 CODECOPY PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 DUP7 PUSH32 0x0 AND SWAP1 PUSH2 0x2ED JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE2 DUP1 ISZERO PUSH2 0x428 JUMPI AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP3 PUSH1 0xB SWAP3 SWAP2 PUSH1 0x55 SWAP5 PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP2 PUSH2 0x467 DUP4 PUSH2 0x10E JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD MSTORE DUP5 DUP3 ADD MSTORE PUSH2 0x57E PUSH2 0x58A DUP4 PUSH2 0x403 SWAP4 PUSH2 0x4D0 DUP9 MLOAD SWAP2 PUSH2 0x491 DUP5 DUP9 ADD DUP5 PUSH2 0x159 JUMP JUMPDEST DUP7 DUP4 MSTORE DUP4 DUP4 ADD SWAP7 PUSH2 0x5A3 DUP9 CODECOPY DUP10 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x759A68C000000000000000000000000000000000000000000000000000000000 DUP7 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD PUSH2 0x2BE JUMP JUMPDEST SUB PUSH2 0x501 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 DUP3 DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x159 JUMP JUMPDEST PUSH2 0x558 DUP11 MLOAD SWAP2 DUP3 PUSH2 0x54C DUP8 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP8 PUSH2 0x2ED JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x159 JUMP JUMPDEST DUP10 MLOAD SWAP6 DUP7 SWAP4 PUSH2 0x56F DUP7 DUP7 ADD SWAP10 DUP11 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x258 JUMP JUMPDEST DUP5 ADD SWAP2 MLOAD DUP1 SWAP4 DUP7 DUP5 ADD SWAP1 PUSH2 0x258 JUMP JUMPDEST ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x159 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP4 MLOAD SWAP4 DUP5 ADD MSTORE DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP1 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH2 0x403 SWAP1 DUP2 CODESIZE SUB DUP1 PUSH2 0x16 DUP2 PUSH2 0x218 JUMP JUMPDEST SWAP4 DUP5 CODECOPY DUP3 ADD SWAP2 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x213 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x213 JUMPI PUSH1 0x20 DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP2 SWAP4 SWAP2 DUP6 DUP3 GT PUSH2 0x213 JUMPI ADD DUP7 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x213 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x71 PUSH2 0x6C DUP4 PUSH2 0x253 JUMP JUMPDEST PUSH2 0x218 JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE DUP6 DUP4 ADD SWAP9 DUP7 DUP3 DUP5 ADD ADD GT PUSH2 0x213 JUMPI DUP9 DUP7 PUSH2 0x8F SWAP4 ADD PUSH2 0x26E JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x1B9 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE PUSH1 0x0 SWAP3 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP5 DUP1 LOG2 DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1B2 JUMPI JUMPDEST PUSH2 0x10B JUMPI JUMPDEST DUP6 MLOAD PUSH1 0xBE SWAP1 DUP2 PUSH2 0x345 DUP3 CODECOPY RETURN JUMPDEST DUP6 MLOAD SWAP5 PUSH1 0x60 DUP7 ADD SWAP1 DUP2 GT DUP7 DUP3 LT OR PUSH2 0x19E JUMPI DUP7 SWAP8 DUP5 SWAP3 DUP4 SWAP3 PUSH2 0x188 SWAP10 MSTORE PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP11 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x194 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x17A PUSH2 0x6C DUP4 PUSH2 0x253 JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x291 JUMP JUMPDEST POP DUP1 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xFE JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x291 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP3 PUSH2 0xF9 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x23D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x23D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x281 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x271 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2F3 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2A5 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x2AE JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x306 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x336 DUP2 MLOAD DUP1 SWAP3 DUP2 PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x20 DUP7 DUP7 ADD SWAP2 ADD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "237:2027:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;267:46;237:2027;267:46;237:2027;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;237:2027:15;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;237:2027:15;;;;;;;;;;-1:-1:-1;;237:2027:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;768:682::-;;;;1021:41;768:682;237:2027;;;;;;:::i;:::-;;;;962:34;;;;237:2027;962:34;237:2027;962:34;;237:2027;1021:41;:::i;:::-;1088:16;;1114:72;;237:2027;1358:43;;237:2027;;;1358:43;;;;962:34;1358:43;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;237:2027;;1247:172;;;;;;;;;;;;;;;;;;;;;;237:2027;1314:21;;;237:2027;1247:172;;:::i;:::-;;;-1:-1:-1;1247:172:15;;;;;237:2027;768:682;:::o;1247:172::-;237:2027;;;-1:-1:-1;237:2027:15;;;;;1114:72;237:2027;;;1146:29;-1:-1:-1;;1146:29:15:o;1575:687::-;;2345:1598:8;1575:687:15;;2345:1598:8;1575:687:15;237:2027;;;;;;;;:::i;:::-;;;1767:34;;;;;237:2027;1767:34;;;237:2027;;1933:290;1975:31;;237:2027;2132:43;237:2027;;1975:31;237:2027;1975:31;;;237:2027;;:::i;:::-;1975:31;;;;;;;;;;237:2027;;2132:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2032:169;237:2027;;2032:169;;;;;;2080:21;237:2027;2080:21;237:2027;2032:169;;:::i;:::-;;;;;;;;;:::i;:::-;237:2027;;1933:290;;;237:2027;1933:290;;;237:2027;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;1933:290;;;;;;;:::i;:::-;237:2027;1902:339;;2345:1598:8;;;;;;;;;1921:4;2345:1598;;;;;;;1575:687:15;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "496400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "accountImplementation()": "infinite",
                "createAccount(uint256,uint256,string,uint256)": "infinite",
                "getAddress(uint256,uint256,string,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "accountImplementation()": "11464fbe",
              "createAccount(uint256,uint256,string,uint256)": "c8cb55ae",
              "getAddress(uint256,uint256,string,uint256)": "cac8cfc2"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract Account\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pubKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pubKeyY\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"keyId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract Account\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pubKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pubKeyY\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"keyId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(uint256,uint256,string,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(uint256,uint256,string,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aa/AccountFactory.sol\":\"AccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40) // Get free memory pointer\\n\\n            // |                   | \\u2193 ptr ...  \\u2193 ptr + 0x0B (start) ...  \\u2193 ptr + 0x20 ...  \\u2193 ptr + 0x40 ...   |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\\n            // | 0xFF              |            FF                                                             |\\n            // |-------------------|---------------------------------------------------------------------------|\\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\\n            // | keccak(start, 85) |            \\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191\\u2191 |\\n\\n            mstore(add(ptr, 0x40), bytecodeHash)\\n            mstore(add(ptr, 0x20), salt)\\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\\n            mstore8(start, 0xff)\\n            addr := keccak256(start, 85)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV // Deprecated in v4.8\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\")\\n            mstore(0x1c, hash)\\n            message := keccak256(0x00, 0x3c)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, \\\"\\\\x19\\\\x01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            data := keccak256(ptr, 0x42)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\\n     * `validator` and `data` according to the version 0 of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x00\\\", validator, data));\\n    }\\n}\\n\",\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/aa/Account.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.19;\\n\\nimport \\\"./utils/UserOp.sol\\\";\\nimport \\\"./utils/Secp256r1.sol\\\";\\nimport \\\"./utils/Base64.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\n\\ncontract Account is Initializable {\\n    using UserOpLib for UserOp;\\n    using ECDSA for bytes32;\\n\\n    address addressOwner;\\n    PassKeyId passKeyOwner;\\n\\n    bool isPassKeyOwnerEnabled;\\n\\n    uint256 nonce;\\n\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    // getter functions\\n    function getAddressOwner() public view returns (address) {\\n        return addressOwner;\\n    }\\n\\n    function getPassKeyOwner() public view returns (PassKeyId memory) {\\n        return passKeyOwner;\\n    }\\n\\n    function passKeyOwnerEnabled() public view returns (bool) {\\n        return isPassKeyOwnerEnabled;\\n    }\\n\\n    function getNonce() public view returns (uint256) {\\n        return nonce;\\n    }\\n\\n    function changeOwnershipToAddress(bytes memory argument) private {\\n        require(\\n            isPassKeyOwnerEnabled == true,\\n            \\\"Account: Already address owner enabled\\\"\\n        );\\n        // address newOwner = abi.decode(argument, (address));\\n        address newOwner;\\n        assembly {\\n            newOwner := mload(add(argument, 20))\\n        }\\n        _changePassKeyOwner(PassKeyId(0, 0, \\\"\\\"));\\n        _changeAddressOwner(newOwner);\\n        isPassKeyOwnerEnabled = false;\\n    }\\n\\n    function changeOwnershipToPassKeyAddress(bytes memory argument) private {\\n        require(\\n            isPassKeyOwnerEnabled == false,\\n            \\\"Account: Already passkey owner enabled\\\"\\n        );\\n        (uint256 pubKeyX, uint256 pubKeyY, string memory keyId) = abi.decode(\\n            argument,\\n            (uint256, uint256, string)\\n        );\\n        PassKeyId memory newOwner = PassKeyId(pubKeyX, pubKeyY, keyId);\\n        _changeAddressOwner(address(0));\\n        _changePassKeyOwner(newOwner);\\n        isPassKeyOwnerEnabled = true;\\n    }\\n\\n    // internal functions to change owners\\n    function _changePassKeyOwner(PassKeyId memory newOwner) private {\\n        passKeyOwner = newOwner;\\n    }\\n\\n    function _changeAddressOwner(address newOwner) private {\\n        addressOwner = newOwner;\\n    }\\n\\n    function initialize(PassKeyId memory anOwner) public virtual initializer {\\n        isPassKeyOwnerEnabled = true;\\n        _initialize(anOwner);\\n    }\\n\\n    function _initialize(PassKeyId memory anOwner) internal virtual {\\n        passKeyOwner = anOwner;\\n    }\\n\\n    // Main entry point for external callers\\n\\n    function entrypoint(UserOp calldata userop) public {\\n        // validate userop signature\\n        uint256 sigVerification = _validateUserOp(userop);\\n        require(sigVerification == 0, \\\"Account: Signature verification failed\\\");\\n        // validate nonce\\n        uint256 nonceVerification = _validateNonce(userop);\\n        require(nonceVerification == 0, \\\"Account: Nonce verification failed\\\");\\n        // execute\\n        if (userop.functionType == 0) {\\n            execute(userop.argument);\\n        }\\n        if (userop.functionType == 1) {\\n            executeBatch(userop.argument);\\n        }\\n        if (userop.functionType == 2) {\\n            changeOwnershipToAddress(userop.argument);\\n        }\\n        if (userop.functionType == 3) {\\n            changeOwnershipToPassKeyAddress(userop.argument);\\n        }\\n        nonce = nonce + 1;\\n        return;\\n    }\\n\\n    /**\\n     * execute a transaction (called directly from owner, or by entryPoint)\\n     */\\n    function execute(bytes memory argument) private {\\n        (address dest, uint256 value, bytes memory func) = abi.decode(\\n            argument,\\n            (address, uint256, bytes)\\n        );\\n        _call(dest, value, func);\\n    }\\n\\n    /**\\n     * execute a sequence of transactions\\n     * @dev to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\\n     */\\n    function executeBatch(bytes memory argument) private {\\n        (\\n            address[] memory dest,\\n            uint256[] memory value,\\n            bytes[] memory func\\n        ) = abi.decode(argument, (address[], uint256[], bytes[]));\\n        require(\\n            dest.length == func.length &&\\n                (value.length == 0 || value.length == func.length),\\n            \\\"wrong array lengths\\\"\\n        );\\n        if (value.length == 0) {\\n            for (uint256 i = 0; i < dest.length; i++) {\\n                _call(dest[i], 0, func[i]);\\n            }\\n        } else {\\n            for (uint256 i = 0; i < dest.length; i++) {\\n                _call(dest[i], value[i], func[i]);\\n            }\\n        }\\n    }\\n\\n    function _call(address target, uint256 value, bytes memory data) internal {\\n        (bool success, bytes memory result) = target.call{value: value}(data);\\n        if (!success) {\\n            assembly {\\n                revert(add(result, 32), mload(result))\\n            }\\n        }\\n    }\\n\\n    // internal function to validate userop signature\\n    function _validateUserOp(\\n        UserOp calldata userop\\n    ) internal view returns (uint256) {\\n        bytes32 userOpHash = getUserOpHash(userop);\\n        if (isPassKeyOwnerEnabled) {\\n            bool isSigValid = validatePassKeySig(\\n                userop.signature,\\n                userOpHash,\\n                passKeyOwner\\n            );\\n            if (!isSigValid) return 1;\\n            return 0;\\n        } else {\\n            bytes32 hash = userOpHash.toEthSignedMessageHash();\\n            if (addressOwner != hash.recover(userop.signature)) return 1;\\n            return 0;\\n        }\\n    }\\n\\n    // internal function to validate nonce\\n    function _validateNonce(\\n        UserOp calldata userop\\n    ) internal view returns (uint256) {\\n        if (userop.nonce == nonce) return 0;\\n        return 1;\\n    }\\n\\n    function validatePassKeySig(\\n        bytes memory signature,\\n        bytes32 execHash,\\n        PassKeyId memory passkey\\n    ) internal view returns (bool) {\\n        (\\n            bytes32 keyHash,\\n            uint256 sigx,\\n            uint256 sigy,\\n            bytes memory authenticatorData,\\n            string memory clientDataJSONPre,\\n            string memory clientDataJSONPost\\n        ) = abi.decode(\\n                signature,\\n                (bytes32, uint256, uint256, bytes, string, string)\\n            );\\n\\n        string memory execHashBase64 = Base64.encode(bytes.concat(execHash));\\n        string memory clientDataJSON = string.concat(\\n            clientDataJSONPre,\\n            execHashBase64,\\n            clientDataJSONPost\\n        );\\n        bytes32 clientHash = sha256(bytes(clientDataJSON));\\n        bytes32 sigHash = sha256(bytes.concat(authenticatorData, clientHash));\\n\\n        require(passkey.pubKeyY != 0 && passkey.pubKeyY != 0, \\\"Key not found\\\");\\n        bool isSigValid = Secp256r1.Verify(\\n            passkey,\\n            sigx,\\n            sigy,\\n            uint256(sigHash)\\n        );\\n        return isSigValid;\\n    }\\n\\n    // gets the userOp hash\\n    function getUserOpHash(\\n        UserOp calldata userop\\n    ) public view returns (bytes32) {\\n        return\\n            keccak256(abi.encode(userop.hash(), address(this), block.chainid));\\n    }\\n\\n    // solhint-disable-next-line no-empty-blocks\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xffc88e51e12629d1bfa349e34f51cecb413de441b1d21f996e78ca05ce9ddab3\",\"license\":\"GPL-3.0\"},\"contracts/aa/AccountFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.12;\\n\\nimport \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\\\";\\n\\nimport \\\"./Account.sol\\\";\\nimport \\\"./utils/Secp256r1.sol\\\";\\n\\ncontract AccountFactory {\\n    Account public immutable accountImplementation;\\n\\n    constructor() {\\n        accountImplementation = new Account();\\n    }\\n\\n    /**\\n     * create an account, and return its address.\\n     * returns the address even if the account is already deployed.\\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\\n     */\\n    function createAccount(\\n        uint256 pubKeyX,\\n        uint256 pubKeyY,\\n        string memory keyId,\\n        uint256 salt\\n    ) public returns (Account ret) {\\n        PassKeyId memory owner = PassKeyId(pubKeyX, pubKeyY, keyId);\\n        address addr = getAddress(pubKeyX, pubKeyY, keyId, salt);\\n        uint codeSize = addr.code.length;\\n        if (codeSize > 0) {\\n            return Account(payable(addr));\\n        }\\n        ret = Account(\\n            payable(\\n                new ERC1967Proxy{salt: bytes32(salt)}(\\n                    address(accountImplementation),\\n                    abi.encodeCall(Account.initialize, (owner))\\n                )\\n            )\\n        );\\n    }\\n\\n    /**\\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\\n     */\\n    function getAddress(\\n        uint256 pubKeyX,\\n        uint256 pubKeyY,\\n        string memory keyId,\\n        uint256 salt\\n    ) public view returns (address) {\\n        PassKeyId memory owner = PassKeyId(pubKeyX, pubKeyY, keyId);\\n\\n        return\\n            Create2.computeAddress(\\n                bytes32(salt),\\n                keccak256(\\n                    abi.encodePacked(\\n                        type(ERC1967Proxy).creationCode,\\n                        abi.encode(\\n                            address(accountImplementation),\\n                            abi.encodeCall(Account.initialize, (owner))\\n                        )\\n                    )\\n                )\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xef6d730c63e5c8d749b43ae52b751dabfe7fb67bb132aeeaa97a48fb449a2d22\",\"license\":\"GPL-3.0\"},\"contracts/aa/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\n// modified for base64url encoding, does not pad with '='\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *  modified for base64url https://datatracker.ietf.org/doc/html/rfc4648#section-5\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE =\\n        \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        uint256 newlength = (data.length * 8) / 6;\\n        if (data.length % 6 > 0) {\\n            newlength++;\\n        }\\n        string memory result = new string(newlength);\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n            // let targetLength := add(resultPtr, newlength)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(12, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(6, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n                // }\\n                // }\\n                // }\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xdae76c808cc5e424ff5e20688a02f913d6a5f834902e7329f0265fabf153a8fb\",\"license\":\"MIT\"},\"contracts/aa/utils/Secp256r1.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\n//\\n// Heavily inspired from\\n// https://github.com/maxrobot/elliptic-solidity/blob/master/contracts/Secp256r1.sol\\n// https://github.com/tdrerup/elliptic-curve-solidity/blob/master/contracts/curves/EllipticCurve.sol\\n// modified to use precompile 0x05 modexp\\n// and modified jacobian double\\n// optimisations to avoid to an from from affine and jacobian coordinates\\n//\\nstruct PassKeyId {\\n    uint256 pubKeyX;\\n    uint256 pubKeyY;\\n    string keyId;\\n}\\n\\nstruct JPoint {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n}\\n\\nlibrary Secp256r1 {\\n    uint256 constant gx =\\n        0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296;\\n    uint256 constant gy =\\n        0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5;\\n    uint256 public constant pp =\\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF;\\n\\n    uint256 public constant nn =\\n        0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551;\\n    uint256 constant a =\\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC;\\n    uint256 constant b =\\n        0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B;\\n    uint256 constant MOST_SIGNIFICANT =\\n        0xc000000000000000000000000000000000000000000000000000000000000000;\\n\\n    /*\\n     * Verify\\n     * @description - verifies that a public key has signed a given message\\n     * @param X - public key coordinate X\\n     * @param Y - public key coordinate Y\\n     * @param R - signature half R\\n     * @param S - signature half S\\n     * @param input - hashed message\\n     */\\n    function Verify(\\n        PassKeyId memory passKey,\\n        uint r,\\n        uint s,\\n        uint e\\n    ) internal view returns (bool) {\\n        if (r == 0 || s == 0 || r >= nn || s >= nn) {\\n            /* testing null signature, otherwise (0,0) is valid for any message*/\\n            return false;\\n        }\\n\\n        JPoint[16] memory points = _preComputeJacobianPoints(passKey);\\n        return VerifyWithPrecompute(points, r, s, e);\\n    }\\n\\n    function VerifyWithPrecompute(\\n        JPoint[16] memory points,\\n        uint r,\\n        uint s,\\n        uint e\\n    ) internal view returns (bool) {\\n        if (r >= nn || s >= nn) {\\n            return false;\\n        }\\n\\n        uint w = _primemod(s, nn);\\n\\n        uint u1 = mulmod(e, w, nn);\\n        uint u2 = mulmod(r, w, nn);\\n\\n        uint x;\\n        uint y;\\n\\n        (x, y) = ShamirMultJacobian(points, u1, u2);\\n        return (x == r);\\n    }\\n\\n    /*\\n     * Strauss Shamir trick for EC multiplication\\n     * https://stackoverflow.com/questions/50993471/ec-scalar-multiplication-with-strauss-shamir-method\\n     * we optimise on this a bit to do with 2 bits at a time rather than a single bit\\n     * the individual points for a single pass are precomputed\\n     * overall this reduces the number of additions while keeping the same number of doublings\\n     */\\n    function ShamirMultJacobian(\\n        JPoint[16] memory points,\\n        uint u1,\\n        uint u2\\n    ) internal view returns (uint, uint) {\\n        uint x = 0;\\n        uint y = 0;\\n        uint z = 0;\\n        uint bits = 128;\\n        uint index = 0;\\n\\n        while (bits > 0) {\\n            if (z > 0) {\\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\\n            }\\n            index =\\n                ((u1 & MOST_SIGNIFICANT) >> 252) |\\n                ((u2 & MOST_SIGNIFICANT) >> 254);\\n            if (index > 0) {\\n                (x, y, z) = _jAdd(\\n                    x,\\n                    y,\\n                    z,\\n                    points[index].x,\\n                    points[index].y,\\n                    points[index].z\\n                );\\n            }\\n            u1 <<= 2;\\n            u2 <<= 2;\\n            bits--;\\n        }\\n        (x, y) = _affineFromJacobian(x, y, z);\\n        return (x, y);\\n    }\\n\\n    function _preComputeJacobianPoints(\\n        PassKeyId memory passKey\\n    ) internal pure returns (JPoint[16] memory points) {\\n        // JPoint[] memory u1Points = new JPoint[](4);\\n        // u1Points[0] = JPoint(0, 0, 0);\\n        // u1Points[1] = JPoint(gx, gy, 1); // u1\\n        // u1Points[2] = _jPointDouble(u1Points[1]);\\n        // u1Points[3] = _jPointAdd(u1Points[1], u1Points[2]);\\n        // avoiding this intermediate step by using it in a single array below\\n        // these are pre computed points for u1\\n\\n        // JPoint[16] memory points;\\n        points[0] = JPoint(0, 0, 0);\\n        points[1] = JPoint(passKey.pubKeyX, passKey.pubKeyY, 1); // u2\\n        points[2] = _jPointDouble(points[1]);\\n        points[3] = _jPointAdd(points[1], points[2]);\\n\\n        points[4] = JPoint(gx, gy, 1); // u1Points[1]\\n        points[5] = _jPointAdd(points[4], points[1]);\\n        points[6] = _jPointAdd(points[4], points[2]);\\n        points[7] = _jPointAdd(points[4], points[3]);\\n\\n        points[8] = _jPointDouble(points[4]); // u1Points[2]\\n        points[9] = _jPointAdd(points[8], points[1]);\\n        points[10] = _jPointAdd(points[8], points[2]);\\n        points[11] = _jPointAdd(points[8], points[3]);\\n\\n        points[12] = _jPointAdd(points[4], points[8]); // u1Points[3]\\n        points[13] = _jPointAdd(points[12], points[1]);\\n        points[14] = _jPointAdd(points[12], points[2]);\\n        points[15] = _jPointAdd(points[12], points[3]);\\n    }\\n\\n    function _jPointAdd(\\n        JPoint memory p1,\\n        JPoint memory p2\\n    ) internal pure returns (JPoint memory) {\\n        uint x;\\n        uint y;\\n        uint z;\\n        (x, y, z) = _jAdd(p1.x, p1.y, p1.z, p2.x, p2.y, p2.z);\\n        return JPoint(x, y, z);\\n    }\\n\\n    function _jPointDouble(\\n        JPoint memory p\\n    ) internal pure returns (JPoint memory) {\\n        uint x;\\n        uint y;\\n        uint z;\\n        (x, y, z) = _modifiedJacobianDouble(p.x, p.y, p.z);\\n        return JPoint(x, y, z);\\n    }\\n\\n    /* _affineFromJacobian\\n     * @desription returns affine coordinates from a jacobian input follows\\n     * golang elliptic/crypto library\\n     */\\n    function _affineFromJacobian(\\n        uint x,\\n        uint y,\\n        uint z\\n    ) internal view returns (uint ax, uint ay) {\\n        if (z == 0) {\\n            return (0, 0);\\n        }\\n\\n        uint zinv = _primemod(z, pp);\\n        uint zinvsq = mulmod(zinv, zinv, pp);\\n\\n        ax = mulmod(x, zinvsq, pp);\\n        ay = mulmod(y, mulmod(zinvsq, zinv, pp), pp);\\n    }\\n\\n    /*\\n     * _jAdd\\n     * @description performs double Jacobian as defined below:\\n     * https://hyperelliptic.org/EFD/g1p/auto-code/shortw/jacobian-3/doubling/mdbl-2007-bl.op3\\n     */\\n    function _jAdd(\\n        uint p1,\\n        uint p2,\\n        uint p3,\\n        uint q1,\\n        uint q2,\\n        uint q3\\n    ) internal pure returns (uint r1, uint r2, uint r3) {\\n        if (p3 == 0) {\\n            r1 = q1;\\n            r2 = q2;\\n            r3 = q3;\\n\\n            return (r1, r2, r3);\\n        } else if (q3 == 0) {\\n            r1 = p1;\\n            r2 = p2;\\n            r3 = p3;\\n\\n            return (r1, r2, r3);\\n        }\\n\\n        assembly {\\n            let\\n                pd\\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\\n            let z1z1 := mulmod(p3, p3, pd) // Z1Z1 = Z1^2\\n            let z2z2 := mulmod(q3, q3, pd) // Z2Z2 = Z2^2\\n\\n            let u1 := mulmod(p1, z2z2, pd) // U1 = X1*Z2Z2\\n            let u2 := mulmod(q1, z1z1, pd) // U2 = X2*Z1Z1\\n\\n            let s1 := mulmod(p2, mulmod(z2z2, q3, pd), pd) // S1 = Y1*Z2*Z2Z2\\n            let s2 := mulmod(q2, mulmod(z1z1, p3, pd), pd) // S2 = Y2*Z1*Z1Z1\\n\\n            let p3q3 := addmod(p3, q3, pd)\\n\\n            if lt(u2, u1) {\\n                u2 := add(pd, u2) // u2 = u2+pd\\n            }\\n            let h := sub(u2, u1) // H = U2-U1\\n\\n            let i := mulmod(0x02, h, pd)\\n            i := mulmod(i, i, pd) // I = (2*H)^2\\n\\n            let j := mulmod(h, i, pd) // J = H*I\\n            if lt(s2, s1) {\\n                s2 := add(pd, s2) // u2 = u2+pd\\n            }\\n            let rr := mulmod(0x02, sub(s2, s1), pd) // r = 2*(S2-S1)\\n            r1 := mulmod(rr, rr, pd) // X3 = R^2\\n\\n            let v := mulmod(u1, i, pd) // V = U1*I\\n            let j2v := addmod(j, mulmod(0x02, v, pd), pd)\\n            if lt(r1, j2v) {\\n                r1 := add(pd, r1) // X3 = X3+pd\\n            }\\n            r1 := sub(r1, j2v)\\n\\n            // Y3 = r*(V-X3)-2*S1*J\\n            let s12j := mulmod(mulmod(0x02, s1, pd), j, pd)\\n\\n            if lt(v, r1) {\\n                v := add(pd, v)\\n            }\\n            r2 := mulmod(rr, sub(v, r1), pd)\\n\\n            if lt(r2, s12j) {\\n                r2 := add(pd, r2)\\n            }\\n            r2 := sub(r2, s12j)\\n\\n            // Z3 = ((Z1+Z2)^2-Z1Z1-Z2Z2)*H\\n            z1z1 := addmod(z1z1, z2z2, pd)\\n            j2v := mulmod(p3q3, p3q3, pd)\\n            if lt(j2v, z1z1) {\\n                j2v := add(pd, j2v)\\n            }\\n            r3 := mulmod(sub(j2v, z1z1), h, pd)\\n        }\\n        return (r1, r2, r3);\\n    }\\n\\n    // Point doubling on the modified jacobian coordinates\\n    // http://point-at-infinity.org/ecc/Prime_Curve_Modified_Jacobian_Coordinates.html\\n    function _modifiedJacobianDouble(\\n        uint x,\\n        uint y,\\n        uint z\\n    ) internal pure returns (uint x3, uint y3, uint z3) {\\n        assembly {\\n            let\\n                pd\\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\\n            let z2 := mulmod(z, z, pd)\\n            let az4 := mulmod(\\n                0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC,\\n                mulmod(z2, z2, pd),\\n                pd\\n            )\\n            let y2 := mulmod(y, y, pd)\\n            let s := mulmod(0x04, mulmod(x, y2, pd), pd)\\n            let u := mulmod(0x08, mulmod(y2, y2, pd), pd)\\n            let m := addmod(mulmod(0x03, mulmod(x, x, pd), pd), az4, pd)\\n            let twos := mulmod(0x02, s, pd)\\n            let m2 := mulmod(m, m, pd)\\n            if lt(m2, twos) {\\n                m2 := add(pd, m2)\\n            }\\n            x3 := sub(m2, twos)\\n            if lt(s, x3) {\\n                s := add(pd, s)\\n            }\\n            y3 := mulmod(m, sub(s, x3), pd)\\n            if lt(y3, u) {\\n                y3 := add(pd, y3)\\n            }\\n            y3 := sub(y3, u)\\n            z3 := mulmod(0x02, mulmod(y, z, pd), pd)\\n        }\\n    }\\n\\n    // Fermats little theorem https://en.wikipedia.org/wiki/Fermat%27s_little_theorem\\n    // a^(p-1) = 1 mod p\\n    // a^(-1) \\u2245 a^(p-2) (mod p)\\n    // we then use the precompile bigModExp to compute a^(-1)\\n    function _primemod(uint value, uint p) internal view returns (uint ret) {\\n        ret = modexp(value, p - 2, p);\\n        return ret;\\n    }\\n\\n    // Wrapper for built-in BigNumber_modexp (contract 0x5) as described here. https://github.com/ethereum/EIPs/pull/198\\n    function modexp(\\n        uint _base,\\n        uint _exp,\\n        uint _mod\\n    ) internal view returns (uint ret) {\\n        // bigModExp(_base, _exp, _mod);\\n        assembly {\\n            if gt(_base, _mod) {\\n                _base := mod(_base, _mod)\\n            }\\n            // Free memory pointer is always stored at 0x40\\n            let freemem := mload(0x40)\\n\\n            mstore(freemem, 0x20)\\n            mstore(add(freemem, 0x20), 0x20)\\n            mstore(add(freemem, 0x40), 0x20)\\n\\n            mstore(add(freemem, 0x60), _base)\\n            mstore(add(freemem, 0x80), _exp)\\n            mstore(add(freemem, 0xa0), _mod)\\n\\n            let success := staticcall(not(0), 0x5, freemem, 0xc0, freemem, 0x20)\\n            switch success\\n            case 0 {\\n                revert(0x0, 0x0)\\n            }\\n            default {\\n                ret := mload(freemem)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd43f80b0a6bc9d21430e1f2a485960a59266972545d9f15c72fc21daebebaf42\",\"license\":\"GPL-3.0\"},\"contracts/aa/utils/UserOp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\n// call type\\n// 00 -> single\\n// 01 -> batch\\n\\nstruct UserOp {\\n    uint256 functionType;\\n    bytes argument;\\n    uint256 nonce;\\n    bytes signature;\\n}\\n\\nlibrary UserOpLib {\\n    /**\\n     * Pack the user operation data into bytes for hashing.\\n     * @param userop - The user operation data.\\n     */\\n    function pack(\\n        UserOp calldata userop\\n    ) internal pure returns (bytes memory ret) {\\n        uint256 functionType = userop.functionType;\\n        bytes32 hashArguments = calldataKeccak(userop.argument);\\n        uint256 nonce = userop.nonce;\\n\\n        return abi.encode(functionType, hashArguments, nonce);\\n    }\\n\\n    /**\\n     * Hash the user operation data.\\n     * @param userop - The user operation data.\\n     */\\n    function hash(UserOp calldata userop) internal pure returns (bytes32) {\\n        return keccak256(pack(userop));\\n    }\\n\\n    /**\\n     * keccak function over calldata.\\n     * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\\n     */\\n    function calldataKeccak(\\n        bytes calldata data\\n    ) public pure returns (bytes32 ret) {\\n        assembly {\\n            let mem := mload(0x40)\\n            let len := data.length\\n            calldatacopy(mem, data.offset, len)\\n            ret := keccak256(mem, len)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe9d67905db0bceb2036a23b41879fc6bc6fb6476262b52e2b80c5aa67621038b\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": {
            "kind": "user",
            "methods": {
              "createAccount(uint256,uint256,string,uint256)": {
                "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
              },
              "getAddress(uint256,uint256,string,uint256)": {
                "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
              }
            },
            "version": 1
          }
        }
      },
      "contracts/aa/utils/Base64.sol": {
        "Base64": {
          "abi": [],
          "devdoc": {
            "details": "Provides a set of functions to operate with Base64 strings.  modified for base64url https://datatracker.ietf.org/doc/html/rfc4648#section-5 _Available since v4.5._",
            "kind": "dev",
            "methods": {},
            "stateVariables": {
              "_TABLE": { "details": "Base64 Encoding/Decoding Table" }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460175760119081601d823930815050f35b600080fdfe600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x11 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "369:3490:16:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "369:3490:16:-:0;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "3400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "internal": { "encode(bytes memory)": "infinite" }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.  modified for base64url https://datatracker.ietf.org/doc/html/rfc4648#section-5 _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aa/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/aa/utils/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\n// modified for base64url encoding, does not pad with '='\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @dev Provides a set of functions to operate with Base64 strings.\\n *  modified for base64url https://datatracker.ietf.org/doc/html/rfc4648#section-5\\n * _Available since v4.5._\\n */\\nlibrary Base64 {\\n    /**\\n     * @dev Base64 Encoding/Decoding Table\\n     */\\n    string internal constant _TABLE =\\n        \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\\\";\\n\\n    /**\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n     */\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        /**\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n         */\\n        if (data.length == 0) return \\\"\\\";\\n\\n        // Loads the table into memory\\n        string memory table = _TABLE;\\n\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n        // and split into 4 numbers of 6 bits.\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n        // - `data.length + 2`  -> Round up\\n        // - `/ 3`              -> Number of 3-bytes chunks\\n        // - `4 *`              -> 4 characters for each chunk\\n        uint256 newlength = (data.length * 8) / 6;\\n        if (data.length % 6 > 0) {\\n            newlength++;\\n        }\\n        string memory result = new string(newlength);\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n            let tablePtr := add(table, 1)\\n\\n            // Prepare result pointer, jump over length\\n            let resultPtr := add(result, 32)\\n            // let targetLength := add(resultPtr, newlength)\\n\\n            // Run over the input, 3 bytes at a time\\n            for {\\n                let dataPtr := data\\n                let endPtr := add(data, mload(data))\\n            } lt(dataPtr, endPtr) {\\n\\n            } {\\n                // Advance 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n                // and apply logical AND with 0x3F which is the number of\\n                // the previous character in the ASCII table prior to the Base64 Table\\n                // The result is then added to the table to get the character to write,\\n                // and finally write it in the result pointer but with a left shift\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(18, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(12, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(\\n                    resultPtr,\\n                    mload(add(tablePtr, and(shr(6, input), 0x3F)))\\n                )\\n                resultPtr := add(resultPtr, 1) // Advance\\n\\n                // if lt(resultPtr, targetLength) {\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n                resultPtr := add(resultPtr, 1) // Advance\\n                // }\\n                // }\\n                // }\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xdae76c808cc5e424ff5e20688a02f913d6a5f834902e7329f0265fabf153a8fb\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "contracts/aa/utils/Secp256r1.sol": {
        "Secp256r1": {
          "abi": [
            {
              "inputs": [],
              "name": "nn",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pp",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100195760ec908161001f823930815050f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c90816372a4c30f14608957506391327ec614603457600080fd5b807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260865760206040517fffffffff00000001000000000000000000000000ffffffffffffffffffffffff8152f35b80fd5b9050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260db57807fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255160209252f35b5080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x19 JUMPI PUSH1 0xEC SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x72A4C30F EQ PUSH1 0x89 JUMPI POP PUSH4 0x91327EC6 EQ PUSH1 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x86 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xDB JUMPI DUP1 PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "571:11123:17:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080806040526004361015601257600080fd5b600090813560e01c90816372a4c30f14608957506391327ec614603457600080fd5b807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260865760206040517fffffffff00000001000000000000000000000000ffffffffffffffffffffffff8152f35b80fd5b9050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260db57807fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255160209252f35b5080fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x72A4C30F EQ PUSH1 0x89 JUMPI POP PUSH4 0x91327EC6 EQ PUSH1 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x86 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xDB JUMPI DUP1 PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "571:11123:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:66;571:11123;;;;;;;;;;;;;;;;;946:66;571:11123;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "47200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": { "nn()": "143", "pp()": "162" },
              "internal": {
                "ShamirMultJacobian(struct JPoint memory[16] memory,uint256,uint256)": "infinite",
                "Verify(struct PassKeyId memory,uint256,uint256,uint256)": "infinite",
                "VerifyWithPrecompute(struct JPoint memory[16] memory,uint256,uint256,uint256)": "infinite",
                "_affineFromJacobian(uint256,uint256,uint256)": "infinite",
                "_jAdd(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
                "_jPointAdd(struct JPoint memory,struct JPoint memory)": "infinite",
                "_jPointDouble(struct JPoint memory)": "infinite",
                "_modifiedJacobianDouble(uint256,uint256,uint256)": "infinite",
                "_preComputeJacobianPoints(struct PassKeyId memory)": "infinite",
                "_primemod(uint256,uint256)": "infinite",
                "modexp(uint256,uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": { "nn()": "72a4c30f", "pp()": "91327ec6" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"nn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aa/utils/Secp256r1.sol\":\"Secp256r1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/aa/utils/Secp256r1.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\n//\\n// Heavily inspired from\\n// https://github.com/maxrobot/elliptic-solidity/blob/master/contracts/Secp256r1.sol\\n// https://github.com/tdrerup/elliptic-curve-solidity/blob/master/contracts/curves/EllipticCurve.sol\\n// modified to use precompile 0x05 modexp\\n// and modified jacobian double\\n// optimisations to avoid to an from from affine and jacobian coordinates\\n//\\nstruct PassKeyId {\\n    uint256 pubKeyX;\\n    uint256 pubKeyY;\\n    string keyId;\\n}\\n\\nstruct JPoint {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n}\\n\\nlibrary Secp256r1 {\\n    uint256 constant gx =\\n        0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296;\\n    uint256 constant gy =\\n        0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5;\\n    uint256 public constant pp =\\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF;\\n\\n    uint256 public constant nn =\\n        0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551;\\n    uint256 constant a =\\n        0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC;\\n    uint256 constant b =\\n        0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B;\\n    uint256 constant MOST_SIGNIFICANT =\\n        0xc000000000000000000000000000000000000000000000000000000000000000;\\n\\n    /*\\n     * Verify\\n     * @description - verifies that a public key has signed a given message\\n     * @param X - public key coordinate X\\n     * @param Y - public key coordinate Y\\n     * @param R - signature half R\\n     * @param S - signature half S\\n     * @param input - hashed message\\n     */\\n    function Verify(\\n        PassKeyId memory passKey,\\n        uint r,\\n        uint s,\\n        uint e\\n    ) internal view returns (bool) {\\n        if (r == 0 || s == 0 || r >= nn || s >= nn) {\\n            /* testing null signature, otherwise (0,0) is valid for any message*/\\n            return false;\\n        }\\n\\n        JPoint[16] memory points = _preComputeJacobianPoints(passKey);\\n        return VerifyWithPrecompute(points, r, s, e);\\n    }\\n\\n    function VerifyWithPrecompute(\\n        JPoint[16] memory points,\\n        uint r,\\n        uint s,\\n        uint e\\n    ) internal view returns (bool) {\\n        if (r >= nn || s >= nn) {\\n            return false;\\n        }\\n\\n        uint w = _primemod(s, nn);\\n\\n        uint u1 = mulmod(e, w, nn);\\n        uint u2 = mulmod(r, w, nn);\\n\\n        uint x;\\n        uint y;\\n\\n        (x, y) = ShamirMultJacobian(points, u1, u2);\\n        return (x == r);\\n    }\\n\\n    /*\\n     * Strauss Shamir trick for EC multiplication\\n     * https://stackoverflow.com/questions/50993471/ec-scalar-multiplication-with-strauss-shamir-method\\n     * we optimise on this a bit to do with 2 bits at a time rather than a single bit\\n     * the individual points for a single pass are precomputed\\n     * overall this reduces the number of additions while keeping the same number of doublings\\n     */\\n    function ShamirMultJacobian(\\n        JPoint[16] memory points,\\n        uint u1,\\n        uint u2\\n    ) internal view returns (uint, uint) {\\n        uint x = 0;\\n        uint y = 0;\\n        uint z = 0;\\n        uint bits = 128;\\n        uint index = 0;\\n\\n        while (bits > 0) {\\n            if (z > 0) {\\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\\n                (x, y, z) = _modifiedJacobianDouble(x, y, z);\\n            }\\n            index =\\n                ((u1 & MOST_SIGNIFICANT) >> 252) |\\n                ((u2 & MOST_SIGNIFICANT) >> 254);\\n            if (index > 0) {\\n                (x, y, z) = _jAdd(\\n                    x,\\n                    y,\\n                    z,\\n                    points[index].x,\\n                    points[index].y,\\n                    points[index].z\\n                );\\n            }\\n            u1 <<= 2;\\n            u2 <<= 2;\\n            bits--;\\n        }\\n        (x, y) = _affineFromJacobian(x, y, z);\\n        return (x, y);\\n    }\\n\\n    function _preComputeJacobianPoints(\\n        PassKeyId memory passKey\\n    ) internal pure returns (JPoint[16] memory points) {\\n        // JPoint[] memory u1Points = new JPoint[](4);\\n        // u1Points[0] = JPoint(0, 0, 0);\\n        // u1Points[1] = JPoint(gx, gy, 1); // u1\\n        // u1Points[2] = _jPointDouble(u1Points[1]);\\n        // u1Points[3] = _jPointAdd(u1Points[1], u1Points[2]);\\n        // avoiding this intermediate step by using it in a single array below\\n        // these are pre computed points for u1\\n\\n        // JPoint[16] memory points;\\n        points[0] = JPoint(0, 0, 0);\\n        points[1] = JPoint(passKey.pubKeyX, passKey.pubKeyY, 1); // u2\\n        points[2] = _jPointDouble(points[1]);\\n        points[3] = _jPointAdd(points[1], points[2]);\\n\\n        points[4] = JPoint(gx, gy, 1); // u1Points[1]\\n        points[5] = _jPointAdd(points[4], points[1]);\\n        points[6] = _jPointAdd(points[4], points[2]);\\n        points[7] = _jPointAdd(points[4], points[3]);\\n\\n        points[8] = _jPointDouble(points[4]); // u1Points[2]\\n        points[9] = _jPointAdd(points[8], points[1]);\\n        points[10] = _jPointAdd(points[8], points[2]);\\n        points[11] = _jPointAdd(points[8], points[3]);\\n\\n        points[12] = _jPointAdd(points[4], points[8]); // u1Points[3]\\n        points[13] = _jPointAdd(points[12], points[1]);\\n        points[14] = _jPointAdd(points[12], points[2]);\\n        points[15] = _jPointAdd(points[12], points[3]);\\n    }\\n\\n    function _jPointAdd(\\n        JPoint memory p1,\\n        JPoint memory p2\\n    ) internal pure returns (JPoint memory) {\\n        uint x;\\n        uint y;\\n        uint z;\\n        (x, y, z) = _jAdd(p1.x, p1.y, p1.z, p2.x, p2.y, p2.z);\\n        return JPoint(x, y, z);\\n    }\\n\\n    function _jPointDouble(\\n        JPoint memory p\\n    ) internal pure returns (JPoint memory) {\\n        uint x;\\n        uint y;\\n        uint z;\\n        (x, y, z) = _modifiedJacobianDouble(p.x, p.y, p.z);\\n        return JPoint(x, y, z);\\n    }\\n\\n    /* _affineFromJacobian\\n     * @desription returns affine coordinates from a jacobian input follows\\n     * golang elliptic/crypto library\\n     */\\n    function _affineFromJacobian(\\n        uint x,\\n        uint y,\\n        uint z\\n    ) internal view returns (uint ax, uint ay) {\\n        if (z == 0) {\\n            return (0, 0);\\n        }\\n\\n        uint zinv = _primemod(z, pp);\\n        uint zinvsq = mulmod(zinv, zinv, pp);\\n\\n        ax = mulmod(x, zinvsq, pp);\\n        ay = mulmod(y, mulmod(zinvsq, zinv, pp), pp);\\n    }\\n\\n    /*\\n     * _jAdd\\n     * @description performs double Jacobian as defined below:\\n     * https://hyperelliptic.org/EFD/g1p/auto-code/shortw/jacobian-3/doubling/mdbl-2007-bl.op3\\n     */\\n    function _jAdd(\\n        uint p1,\\n        uint p2,\\n        uint p3,\\n        uint q1,\\n        uint q2,\\n        uint q3\\n    ) internal pure returns (uint r1, uint r2, uint r3) {\\n        if (p3 == 0) {\\n            r1 = q1;\\n            r2 = q2;\\n            r3 = q3;\\n\\n            return (r1, r2, r3);\\n        } else if (q3 == 0) {\\n            r1 = p1;\\n            r2 = p2;\\n            r3 = p3;\\n\\n            return (r1, r2, r3);\\n        }\\n\\n        assembly {\\n            let\\n                pd\\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\\n            let z1z1 := mulmod(p3, p3, pd) // Z1Z1 = Z1^2\\n            let z2z2 := mulmod(q3, q3, pd) // Z2Z2 = Z2^2\\n\\n            let u1 := mulmod(p1, z2z2, pd) // U1 = X1*Z2Z2\\n            let u2 := mulmod(q1, z1z1, pd) // U2 = X2*Z1Z1\\n\\n            let s1 := mulmod(p2, mulmod(z2z2, q3, pd), pd) // S1 = Y1*Z2*Z2Z2\\n            let s2 := mulmod(q2, mulmod(z1z1, p3, pd), pd) // S2 = Y2*Z1*Z1Z1\\n\\n            let p3q3 := addmod(p3, q3, pd)\\n\\n            if lt(u2, u1) {\\n                u2 := add(pd, u2) // u2 = u2+pd\\n            }\\n            let h := sub(u2, u1) // H = U2-U1\\n\\n            let i := mulmod(0x02, h, pd)\\n            i := mulmod(i, i, pd) // I = (2*H)^2\\n\\n            let j := mulmod(h, i, pd) // J = H*I\\n            if lt(s2, s1) {\\n                s2 := add(pd, s2) // u2 = u2+pd\\n            }\\n            let rr := mulmod(0x02, sub(s2, s1), pd) // r = 2*(S2-S1)\\n            r1 := mulmod(rr, rr, pd) // X3 = R^2\\n\\n            let v := mulmod(u1, i, pd) // V = U1*I\\n            let j2v := addmod(j, mulmod(0x02, v, pd), pd)\\n            if lt(r1, j2v) {\\n                r1 := add(pd, r1) // X3 = X3+pd\\n            }\\n            r1 := sub(r1, j2v)\\n\\n            // Y3 = r*(V-X3)-2*S1*J\\n            let s12j := mulmod(mulmod(0x02, s1, pd), j, pd)\\n\\n            if lt(v, r1) {\\n                v := add(pd, v)\\n            }\\n            r2 := mulmod(rr, sub(v, r1), pd)\\n\\n            if lt(r2, s12j) {\\n                r2 := add(pd, r2)\\n            }\\n            r2 := sub(r2, s12j)\\n\\n            // Z3 = ((Z1+Z2)^2-Z1Z1-Z2Z2)*H\\n            z1z1 := addmod(z1z1, z2z2, pd)\\n            j2v := mulmod(p3q3, p3q3, pd)\\n            if lt(j2v, z1z1) {\\n                j2v := add(pd, j2v)\\n            }\\n            r3 := mulmod(sub(j2v, z1z1), h, pd)\\n        }\\n        return (r1, r2, r3);\\n    }\\n\\n    // Point doubling on the modified jacobian coordinates\\n    // http://point-at-infinity.org/ecc/Prime_Curve_Modified_Jacobian_Coordinates.html\\n    function _modifiedJacobianDouble(\\n        uint x,\\n        uint y,\\n        uint z\\n    ) internal pure returns (uint x3, uint y3, uint z3) {\\n        assembly {\\n            let\\n                pd\\n            := 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\\n            let z2 := mulmod(z, z, pd)\\n            let az4 := mulmod(\\n                0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC,\\n                mulmod(z2, z2, pd),\\n                pd\\n            )\\n            let y2 := mulmod(y, y, pd)\\n            let s := mulmod(0x04, mulmod(x, y2, pd), pd)\\n            let u := mulmod(0x08, mulmod(y2, y2, pd), pd)\\n            let m := addmod(mulmod(0x03, mulmod(x, x, pd), pd), az4, pd)\\n            let twos := mulmod(0x02, s, pd)\\n            let m2 := mulmod(m, m, pd)\\n            if lt(m2, twos) {\\n                m2 := add(pd, m2)\\n            }\\n            x3 := sub(m2, twos)\\n            if lt(s, x3) {\\n                s := add(pd, s)\\n            }\\n            y3 := mulmod(m, sub(s, x3), pd)\\n            if lt(y3, u) {\\n                y3 := add(pd, y3)\\n            }\\n            y3 := sub(y3, u)\\n            z3 := mulmod(0x02, mulmod(y, z, pd), pd)\\n        }\\n    }\\n\\n    // Fermats little theorem https://en.wikipedia.org/wiki/Fermat%27s_little_theorem\\n    // a^(p-1) = 1 mod p\\n    // a^(-1) \\u2245 a^(p-2) (mod p)\\n    // we then use the precompile bigModExp to compute a^(-1)\\n    function _primemod(uint value, uint p) internal view returns (uint ret) {\\n        ret = modexp(value, p - 2, p);\\n        return ret;\\n    }\\n\\n    // Wrapper for built-in BigNumber_modexp (contract 0x5) as described here. https://github.com/ethereum/EIPs/pull/198\\n    function modexp(\\n        uint _base,\\n        uint _exp,\\n        uint _mod\\n    ) internal view returns (uint ret) {\\n        // bigModExp(_base, _exp, _mod);\\n        assembly {\\n            if gt(_base, _mod) {\\n                _base := mod(_base, _mod)\\n            }\\n            // Free memory pointer is always stored at 0x40\\n            let freemem := mload(0x40)\\n\\n            mstore(freemem, 0x20)\\n            mstore(add(freemem, 0x20), 0x20)\\n            mstore(add(freemem, 0x40), 0x20)\\n\\n            mstore(add(freemem, 0x60), _base)\\n            mstore(add(freemem, 0x80), _exp)\\n            mstore(add(freemem, 0xa0), _mod)\\n\\n            let success := staticcall(not(0), 0x5, freemem, 0xc0, freemem, 0x20)\\n            switch success\\n            case 0 {\\n                revert(0x0, 0x0)\\n            }\\n            default {\\n                ret := mload(freemem)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd43f80b0a6bc9d21430e1f2a485960a59266972545d9f15c72fc21daebebaf42\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "contracts/aa/utils/UserOp.sol": {
        "UserOpLib": {
          "abi": [
            {
              "inputs": [
                { "internalType": "bytes", "name": "data", "type": "bytes" }
              ],
              "name": "calldataKeccak",
              "outputs": [
                { "internalType": "bytes32", "name": "ret", "type": "bytes32" }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "calldataKeccak(bytes)": {
                "details": "copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100195760b5908161001f823930815050f35b600080fdfe60806040526004361015601157600080fd5b6000803560e01c631d43458514602657600080fd5b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260a5576004359067ffffffffffffffff9081831160a5573660238401121560a557826004013591821160a557366024838501011160a5575080602460a193016080376080206040519081529081906020820190565b0390f35b80fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x19 JUMPI PUSH1 0xB5 SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x1D434585 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xA5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 GT PUSH1 0xA5 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH1 0xA5 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH1 0xA5 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP6 ADD ADD GT PUSH1 0xA5 JUMPI POP DUP1 PUSH1 0x24 PUSH1 0xA1 SWAP4 ADD PUSH1 0x80 CALLDATACOPY PUSH1 0x80 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "210:1178:18:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015601157600080fd5b6000803560e01c631d43458514602657600080fd5b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260a5576004359067ffffffffffffffff9081831160a5573660238401121560a557826004013591821160a557366024838501011160a5575080602460a193016080376080206040519081529081906020820190565b0390f35b80fdfea164736f6c6343000813000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x1D434585 EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xA5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP4 GT PUSH1 0xA5 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH1 0xA5 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH1 0xA5 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP6 ADD ADD GT PUSH1 0xA5 JUMPI POP DUP1 PUSH1 0x24 PUSH1 0xA1 SWAP4 ADD PUSH1 0x80 CALLDATACOPY PUSH1 0x80 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP EXP ",
              "sourceMap": "210:1178:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1203:177;210:1178;1203:177;210:1178;;;;;;;;;;;;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "36200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": { "calldataKeccak(bytes)": "infinite" },
              "internal": {
                "hash(struct UserOp calldata)": "infinite",
                "pack(struct UserOp calldata)": "infinite"
              }
            },
            "methodIdentifiers": { "calldataKeccak(bytes)": "1d434585" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"calldataKeccak\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calldataKeccak(bytes)\":{\"details\":\"copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calldataKeccak(bytes)\":{\"notice\":\"keccak function over calldata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aa/utils/UserOp.sol\":\"UserOpLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/aa/utils/UserOp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.19;\\n// call type\\n// 00 -> single\\n// 01 -> batch\\n\\nstruct UserOp {\\n    uint256 functionType;\\n    bytes argument;\\n    uint256 nonce;\\n    bytes signature;\\n}\\n\\nlibrary UserOpLib {\\n    /**\\n     * Pack the user operation data into bytes for hashing.\\n     * @param userop - The user operation data.\\n     */\\n    function pack(\\n        UserOp calldata userop\\n    ) internal pure returns (bytes memory ret) {\\n        uint256 functionType = userop.functionType;\\n        bytes32 hashArguments = calldataKeccak(userop.argument);\\n        uint256 nonce = userop.nonce;\\n\\n        return abi.encode(functionType, hashArguments, nonce);\\n    }\\n\\n    /**\\n     * Hash the user operation data.\\n     * @param userop - The user operation data.\\n     */\\n    function hash(UserOp calldata userop) internal pure returns (bytes32) {\\n        return keccak256(pack(userop));\\n    }\\n\\n    /**\\n     * keccak function over calldata.\\n     * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\\n     */\\n    function calldataKeccak(\\n        bytes calldata data\\n    ) public pure returns (bytes32 ret) {\\n        assembly {\\n            let mem := mload(0x40)\\n            let len := data.length\\n            calldatacopy(mem, data.offset, len)\\n            ret := keccak256(mem, len)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe9d67905db0bceb2036a23b41879fc6bc6fb6476262b52e2b80c5aa67621038b\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": {
            "kind": "user",
            "methods": {
              "calldataKeccak(bytes)": {
                "notice": "keccak function over calldata."
              }
            },
            "version": 1
          }
        }
      }
    }
  }
}
