{
  "address": "0x628f2234372e07275c9104D9802c25893b593624",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5c348dc515a00e4a058b736dea1138150caa49bcf660dc410d000bcdd363f2e5",
  "receipt": {
    "to": null,
    "from": "0xa9c6C773e89D366CE677fd4c172edE648609A219",
    "contractAddress": "0x628f2234372e07275c9104D9802c25893b593624",
    "transactionIndex": 3,
    "gasUsed": "130284",
    "logsBloom": "0x
    "blockHash": "0x9b4bd3c933739d3dd9ca1ee6d23fd6b3825f654400854cc953c04298c688a95e",
    "transactionHash": "0x5c348dc515a00e4a058b736dea1138150caa49bcf660dc410d000bcdd363f2e5",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 39339460,
        "transactionHash": "0x5c348dc515a00e4a058b736dea1138150caa49bcf660dc410d000bcdd363f2e5",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000a9c6c773e89d366ce677fd4c172ede648609a219",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000010cfa6c78ab4000000000000000000000000000000000000000000000000006a6ac4aadcc2d1f000000000000000000000000000000000000000000000055b2e23c3acaeb404600000000000000000000000000000000000000000000000006a59f50415381df000000000000000000000000000000000000000000000055b2e349353763eb86",
        "logIndex": 12,
        "blockHash": "0x9b4bd3c933739d3dd9ca1ee6d23fd6b3825f654400854cc953c04298c688a95e"
      }
    ],
    "blockNumber": 39339460,
    "cumulativeGasUsed": "490561",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "83489b4513ab4f94b8bb1071d445b6ee",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Lock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Lock {\\n    address payable public owner;\\n\\n    constructor() {\\n        owner = payable(msg.sender);\\n    }\\n\\n    function withdraw() public {\\n        // Uncomment this line, and the import of \\\"hardhat/console.sol\\\", to print a log in your terminal\\n        // console.log(\\\"Unlock time is %o and block timestamp is %o\\\", unlockTime, block.timestamp);\\n\\n        owner.transfer(address(this).balance);\\n    }\\n}\\n\",\"keccak256\":\"0x516ff3ca54399a9d3d3e2749882c2b9375d32621c954b8169e913a65583b9d1c\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080806040523461002757600080546001600160a01b0319163317905560fc908161002d8239f35b600080fdfe60806040526004361015601157600080fd5b6000803560e01c80633ccfd60b14608157638da5cb5b14603057600080fd5b34607e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607e5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b80fd5b5034607e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607e578080808073ffffffffffffffffffffffffffffffffffffffff815416479082821560e7575bf11560db5780f35b604051903d90823e3d90fd5b506108fc60d356fea164736f6c6343000812000a",
  "deployedBytecode": "0x60806040526004361015601157600080fd5b6000803560e01c80633ccfd60b14608157638da5cb5b14603057600080fd5b34607e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607e5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b80fd5b5034607e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607e578080808073ffffffffffffffffffffffffffffffffffffffff815416479082821560e7575bf11560db5780f35b604051903d90823e3d90fd5b506108fc60d356fea164736f6c6343000812000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/Lock.sol:Lock",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      }
    ],
    "types": {
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      }
    }
  }
}
