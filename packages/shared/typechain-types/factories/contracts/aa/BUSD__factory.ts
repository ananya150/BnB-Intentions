/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { BUSD, BUSDInterface } from "../../../contracts/aa/BUSD";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200039857620000146200039d565b6200001e6200039d565b81519091906001600160401b039081811162000298576003918254926001928385811c95169586156200038d575b6020968787101462000377578190601f9687811162000321575b508790878311600114620002ba57600092620002ae575b505060001982841b1c191690841b1781555b8551918211620002985760049586548481811c911680156200028d575b8782101462000278578581116200022d575b508590858411600114620001c257938394918492600095620001b6575b50501b92600019911b1c19161783555b33156200017557506002546a52b7d2dcc80cd2e4000000928382018092116200016057506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91600255338352828152604083208481540190556040519384523393a3604051610cda9081620003cf8239f35b601190634e487b7160e01b6000525260246000fd5b606492916040519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b015193503880620000db565b9190601f198416928860005284886000209460005b8a89838310620002155750505010620001fa575b50505050811b018355620000eb565b01519060f884600019921b161c1916905538808080620001eb565b868601518955909701969485019488935001620001d7565b87600052866000208680860160051c8201928987106200026e575b0160051c019085905b82811062000261575050620000be565b6000815501859062000251565b9250819262000248565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000ac565b634e487b7160e01b600052604160045260246000fd5b0151905038806200007d565b90869350601f1983169185600052896000209260005b8b8282106200030a5750508411620002f1575b505050811b0181556200008f565b015160001983861b60f8161c19169055388080620002e3565b8385015186558a97909501949384019301620002d0565b90915083600052876000208780850160051c8201928a86106200036d575b918891869594930160051c01915b8281106200035d57505062000066565b600081558594508891016200034d565b925081926200033f565b634e487b7160e01b600052602260045260246000fd5b94607f16946200004c565b600080fd5b60408051919082016001600160401b0381118382101762000298576040526004825263109554d160e21b602083015256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461075657508163095ea7b31461070e57816318160ddd146106d157816323b872dd146105a3578163313ce5671461056957816339509351146104bf57816370a082311461045e57816395d89b4114610268578163a457c2d71461016257508063a9059cbb146101145763dd62ed3e1461009e57600080fd5b3461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011057806020926100d86108fe565b6100e0610926565b73ffffffffffffffffffffffffffffffffffffffff91821683526001865283832091168252845220549051908152f35b5080fd5b503461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101105760209061015b6101516108fe565b6024359033610949565b5160018152f35b9050823461026557827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102655761019b6108fe565b918360243592338152600160205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106101e25760208561015b8585038733610b58565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b83833461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011057805190828454600181811c90808316928315610454575b60209384841081146104285783885287959493929181156103cd5750600114610351575b50505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103255750829182610321925282610898565b0390f35b806041867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8888529193925086917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106103b757505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102d3565b805488850187015287945092850192810161037c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016848701525050151560051b830101905081601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06102d3565b60248960228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b91607f16916102af565b5050346101105760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110578060209273ffffffffffffffffffffffffffffffffffffffff6104b06108fe565b16815280845220549051908152f35b82843461026557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610265576104f76108fe565b338252600160205282822073ffffffffffffffffffffffffffffffffffffffff821683526020528282205491602435830180931161053d5760208461015b858533610b58565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b50503461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576020905160128152f35b839150346101105760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576105dd6108fe565b6105e5610926565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260016020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361064b575b60208661015b878787610949565b84821061067457509183916106696020969561015b95033383610b58565b91939481935061063d565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461011057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610110576020906002549051908152f35b50503461011057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101105760209061015b61074c6108fe565b6024359033610b58565b8490843461089457827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108945782600354600181811c9080831692831561088a575b60209384841081146104285783885287959493929181156103cd575060011461080d5750505003601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019267ffffffffffffffff8411838510176103255750829182610321925282610898565b600388529193925086917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b82841061087457505050907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f928201019181936102d3565b8054888501870152879450928501928101610839565b91607f169161079c565b8280fd5b60208082528251818301819052939260005b8581106108ea575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b8181018301518482016040015282016108aa565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361092157565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361092157565b73ffffffffffffffffffffffffffffffffffffffff809116918215610ad45716918215610a50576000828152806020526040812054918083106109cc57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215610c4a5716918215610bc65760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea164736f6c6343000813000a";

type BUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BUSDConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BUSD__factory extends ContractFactory {
  constructor(...args: BUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<BUSD> {
    return super.deploy(overrides || {}) as Promise<BUSD>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BUSD {
    return super.attach(address) as BUSD;
  }
  override connect(signer: Signer): BUSD__factory {
    return super.connect(signer) as BUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BUSDInterface {
    return new utils.Interface(_abi) as BUSDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BUSD {
    return new Contract(address, _abi, signerOrProvider) as BUSD;
  }
}
